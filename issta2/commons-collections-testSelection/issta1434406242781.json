{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":130,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":594,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":17,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":232,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":535,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":593,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":288,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":275,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":591,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":144,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToString":458,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":666,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":332,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":636,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":149,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":589,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":67,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":673,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":505,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToString":542,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":562,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":491,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":313,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":180,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":378,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":219,"org.apache.commons.collections4.CollectionUtilsTest.get":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":322,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionSize":500,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":16,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":363,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains3":596,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove3":603,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":483,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":576,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":602,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":587,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":522,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":177,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":600,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":79,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":310,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":425,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":461,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":625,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueCompatibility":492,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":566,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveAll":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":409,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":513,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":214,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":432,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":250,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":311,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":229,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":393,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":293,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":357,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":569,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":217,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":239,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveChangesMap":610,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":290,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":305,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":558,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":626,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":480,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":148,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":348,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":329,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":512,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":157,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":377,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesClearChangesMap":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":165,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":273,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":397,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":498,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":586,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":364,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToString":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":75,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":490,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":151,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":405,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":443,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":7,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":176,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":415,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":343,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":152,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":118,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":267,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":287,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":503,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":84,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":456,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":104,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":297,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking2":534,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":25,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":70,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":280,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":299,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":375,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":261,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":122,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":29,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":142,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":536,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":58,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":427,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":259,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":646,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":382,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":454,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":251,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":452,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullKey":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":392,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":163,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":400,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":477,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":473,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":225,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":326,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":356,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":424,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":519,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":252,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":404,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionSize":577,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":170,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":551,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":166,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":320,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":634,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":635,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":644,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":270,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":134,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":308,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":467,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":563,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":507,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testSerializeDeserializeThenCompare":468,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":303,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":401,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullValue":609,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutNullKey":615,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":201,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":285,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":200,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":548,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":574,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":271,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":656,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":8,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":49,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":103,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":325,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":488,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":131,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":136,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetClearChangesMap":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":354,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":330,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":155,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":179,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveChangesMap":649,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":611,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":655,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":73,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":264,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":585,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":670,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":312,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":391,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":234,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":15,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":530,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":678,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":158,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":628,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":66,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":283,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":448,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRemoveAll":651,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":3,"org.apache.commons.collections4.queue.PredicatedQueueTest.testSerializeDeserializeThenCompare":511,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":549,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":411,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":150,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndexBoundsChecking2":527,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":222,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":494,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":115,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":479,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":37,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":107,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":125,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.PredicateUtilsTest.testTruePredicate":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":26,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":570,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":62,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":639,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":421,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":398,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":184,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":183,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":422,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":435,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":434,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":510,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":309,"org.apache.commons.collections4.CollectionUtilsTest.exists":335,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":294,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":32,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":486,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":172,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":353,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":227,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":588,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":256,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":218,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":590,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":362,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":485,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":55,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":237,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":451,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":430,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":143,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":146,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":489,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":78,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":518,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":631,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":114,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":396,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetClearChangesMap":643,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":160,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":567,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":72,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":572,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":499,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":509,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":13,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMakeMap":652,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToString":501,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":553,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":420,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":81,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":90,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":231,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":544,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":230,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":314,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testKeySetRetainAll":668,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":91,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":407,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":68,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":531,"org.apache.commons.collections4.ArrayStackTest.testNewStack":171,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":623,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":279,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":471,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":508,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":667,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":137,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":384,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":244,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":245,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":315,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":292,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":388,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":38,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":300,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":472,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionSize":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":215,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":481,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":93,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRemoveAll":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":71,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":216,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":156,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":557,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":123,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":265,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":85,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":645,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":18,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":414,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":487,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":345,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":556,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":40,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesClearChangesMap":630,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":395,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":10,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutNullValue":648,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndexBoundsChecking":529,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":446,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":641,"org.apache.commons.collections4.SetUtilsTest.testHashCode":389,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":640,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":525,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":30,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":369,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":554,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":463,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":111,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":565,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":199,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":278,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveChangesMap":598,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveAll":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":306,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":455,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":347,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":515,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":408,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":235,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":506,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":675,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":74,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":524,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":517,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":41,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":559,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":380,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":583,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRetainAll":599,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":504,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":193,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":399,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":102,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":677,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":51,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":12,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":664,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":573,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":195,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":295,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":54,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndexBoundsChecking2":533,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":263,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":370,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionSize":457,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":161,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":0,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":478,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":246,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":338,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":493,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":337,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":618,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":665,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":2,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":466,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":575,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":658,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":418,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":659,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":374,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":119,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":127,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":355,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":417,"org.apache.commons.collections4.CollectionUtilsTest.find":383,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":440,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":211,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":324,"org.apache.commons.collections4.map.PredicatedMapTest.testMakeMap":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":9,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveChangesMap":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":423,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":484,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":560,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":372,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRetainAll":638,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":98,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":387,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":360,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":358,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":112,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":368,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":561,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":321,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":352,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":476,"org.apache.commons.collections4.list.PredicatedListTest.testFullListSerialization":528,"org.apache.commons.collections4.queue.PredicatedQueueTest.testFullQueueSerialization":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":87,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":614,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":344,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":365,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":50,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":373,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":584,"org.apache.commons.collections4.map.LRUMapTest.testLRU":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":328,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":439,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":555,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":154,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":676,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":342,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":539,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":495,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionSize":541,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":266,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":242,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToString":571,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":77,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":350,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":462,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":96,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":632,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":175,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":620,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":428,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":140,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":660,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":223,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":482,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":545,"org.apache.commons.collections4.map.PredicatedMapTest.testKeySetRetainAll":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":116,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":543,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":671,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":450,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":580,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":167,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":182,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":442,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":520,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":284,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":178},"transformations":[{"failures":[0,1,2],"tindex":"5d2db4d7-13ab-11e5-a71c-0da257d2d62d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[3],"tindex":"5d2db4d8-13ab-11e5-a71c-a1f210208a6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:211","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"5d2ddbe9-13ab-11e5-a71c-43dcbc10fa92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"key2","out":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"5d2ddbea-13ab-11e5-a71c-1fac6c4f014b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"5d2ddbeb-13ab-11e5-a71c-3b65938e331e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"5d2ddbec-13ab-11e5-a71c-87f42f2ba335","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"largestKey","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-2},{"failures":[],"tindex":"5d2ddbed-13ab-11e5-a71c-b9e06b089572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:412","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"5d2e02fe-13ab-11e5-a71c-bf2c8bbb4fc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"5d2e02ff-13ab-11e5-a71c-1590f014e658","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1213","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":-2},{"failures":[],"tindex":"5d2e0300-13ab-11e5-a71c-c322a0a4f0b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[113,114,115,116],"tindex":"5d2e0301-13ab-11e5-a71c-212c14a3253b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"5d2e0302-13ab-11e5-a71c-8b77c239704d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"5d2e2a13-13ab-11e5-a71c-d1900d700af6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[117],"tindex":"5d2e2a14-13ab-11e5-a71c-23f5c8f2a77c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:59","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null);\n} "},"status":-1},{"failures":[],"tindex":"5d2e2a15-13ab-11e5-a71c-73d37f581c81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"5d2e2a16-13ab-11e5-a71c-9b665a80de77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[118,119,120,121,122,123,124],"tindex":"5d2e5127-13ab-11e5-a71c-f7166f1c548b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"siblingNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"5d2e5128-13ab-11e5-a71c-ebefb3dd8e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index","maxElements":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[],"tindex":"5d2e5129-13ab-11e5-a71c-89aba03ee132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[125,126],"tindex":"5d2e512a-13ab-11e5-a71c-e13b6fcb554e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[127,128,129,130,118,119,131,132,133,120,134,121,135,124],"tindex":"5d2e512b-13ab-11e5-a71c-2dd344be0e76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[136,137,138],"tindex":"5d2e783c-13ab-11e5-a71c-ff3ff5622e28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[139,140,141,142,143,144],"tindex":"5d2f147d-13ab-11e5-a71c-f182aadca8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","end2":"start1","this":"this","i":"i","end1":"k","k":"d","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[140,139,141,142,143,144],"tindex":"5d2f147e-13ab-11e5-a71c-6b8bfa93b883","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"5d2f147f-13ab-11e5-a71c-9bb3647282be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"5d2f1480-13ab-11e5-a71c-c31367b9b331","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"x":"yFormerLeftChild","yFormerParent":"yFormerRightChild","dataElement":"dataElement","yWasLeftChild":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"5d2f1481-13ab-11e5-a71c-1193ad54e34f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156],"tindex":"5d2f1482-13ab-11e5-a71c-0965c338a39b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[157,158,159,160],"tindex":"5d2f1483-13ab-11e5-a71c-1f34d998d97a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"5d2f3b94-13ab-11e5-a71c-138c8162183f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"lock","b":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[161,162,114,163,164,165,166,167,168,169,170],"tindex":"5d2f3b95-13ab-11e5-a71c-ffca40c48c55","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"5d2f3b96-13ab-11e5-a71c-334b29d2968f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[171,172],"tindex":"5d2f3b97-13ab-11e5-a71c-0df021b5f3ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:110","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get(int)"},"variableMap":{"this":"this","m":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"status":-1},{"failures":[],"tindex":"5d2f3b98-13ab-11e5-a71c-0b8f2e305af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"5d2f3b99-13ab-11e5-a71c-a7b616d3a395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[173],"tindex":"5d2f3b9a-13ab-11e5-a71c-e16f93014310","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-1},{"failures":[],"tindex":"5d2f3b9b-13ab-11e5-a71c-dba6881fa968","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[174,175,176,177,116],"tindex":"5d2f3b9c-13ab-11e5-a71c-05b2d271fff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"5d2f62ad-13ab-11e5-a71c-316bb5a0f831","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-2},{"failures":[178,74,75,80,81,91,92,97,98,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,170,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"5d2f62ae-13ab-11e5-a71c-5ba9b7939be1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"5d2f62af-13ab-11e5-a71c-0d58d54bdfc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[296,297,298],"tindex":"5d2f62b0-13ab-11e5-a71c-192ad3235d45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"5d2f62b1-13ab-11e5-a71c-cb6842624e39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"length","start":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[],"tindex":"5d2f62b2-13ab-11e5-a71c-01c640bcac6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"h","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[299,300],"tindex":"5d2f89c3-13ab-11e5-a71c-bde43b181a0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-1},{"failures":[301,302,303,304,305,306,307,308,309,310],"tindex":"5d2f89c4-13ab-11e5-a71c-158df3becba3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5d2f89c5-13ab-11e5-a71c-513f1fc7ac24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"5d2f89c6-13ab-11e5-a71c-6da1531d7372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[139,140,141,142,143,144],"tindex":"5d2f89c7-13ab-11e5-a71c-4119c362d68e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"start1","d":"start2","offset":"delta","vDown":"vUp","delta":"end2","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vDown","equator":"equator","end2":"end2","end1":"offset","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"5d2f89c8-13ab-11e5-a71c-67459c2a1b55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[],"tindex":"5d2f89c9-13ab-11e5-a71c-27f374109aa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[311,312,313,314,315,316,6,317,318,319,320,321,322,323,324,325,326,327,7,12,328,8,9,10,11,329,330,4,331,332,333,334],"tindex":"5d2f89ca-13ab-11e5-a71c-c7410a15324c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"5d2fb0db-13ab-11e5-a71c-e97f0e52edb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"5d2fb0dc-13ab-11e5-a71c-7d53f8eb6303","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"node","current":"right","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"5d2fb0dd-13ab-11e5-a71c-b543c93b0141","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[335],"tindex":"5d2fb0de-13ab-11e5-a71c-b99fc58405c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"5d2fb0df-13ab-11e5-a71c-5730c7144a4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":0},{"failures":[140,139,141,142,143,144],"tindex":"5d2fb0e0-13ab-11e5-a71c-c90339957a25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[336],"tindex":"5d2fb0e1-13ab-11e5-a71c-93f0b518af51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"variableMap":{"lengthInBits":"endIndexInBits","root":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"5d2fb0e2-13ab-11e5-a71c-117a19fdcc41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[337,338,339,240,241,242,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,243,355,356,357,358,359,360,244,245,361,246,362,363,247,248,364,365,249,250,251,252,253],"tindex":"5d2fd7f3-13ab-11e5-a71c-e3ccc6e6bcb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"5d2fd7f4-13ab-11e5-a71c-93b401c1fe20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"5d2fd7f5-13ab-11e5-a71c-395e7b794d0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-2},{"failures":[178,74,75,80,81,91,92,97,98,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,170,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295],"tindex":"5d2fd7f6-13ab-11e5-a71c-0735869496c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"5d2fd7f7-13ab-11e5-a71c-4fa20c4f372e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"variableMap":{"maximumCacheSize":"length","cacheSize":"largestKey","this":"nextP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-2},{"failures":[],"tindex":"5d2fd7f8-13ab-11e5-a71c-9350e0c2a003","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"length","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"5d2fd7f9-13ab-11e5-a71c-356e04c94daa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[],"tindex":"5d2fd7fa-13ab-11e5-a71c-436333eac4e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"siblingNode","dataElement":"dataElement","child":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"5d2fff0b-13ab-11e5-a71c-3d515e876bb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"leftChild","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"5d2fff0c-13ab-11e5-a71c-2960ef8e9230","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"key1","defaultValue":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[366],"tindex":"5d31378d-13ab-11e5-a71c-5154726689be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[],"tindex":"5d31378e-13ab-11e5-a71c-b57f346dbca3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":0},{"failures":[367,368,369,370,371,372,373,374,375,376,377,378],"tindex":"5d31378f-13ab-11e5-a71c-99044a6e2c15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[139,140,141,142,143,144],"tindex":"5d313790-13ab-11e5-a71c-1b24580941c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"5d315ea1-13ab-11e5-a71c-63cd37ae36a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[379,380],"tindex":"5d315ea2-13ab-11e5-a71c-9f036bb59e89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[],"tindex":"5d315ea3-13ab-11e5-a71c-f9f8fb3fa3e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[],"tindex":"5d315ea4-13ab-11e5-a71c-3982011c17a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"node","current":"node","tree":"child","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[381],"tindex":"5d315ea5-13ab-11e5-a71c-f367fd1f2da0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[382,383,384,385,386,381,387,388],"tindex":"5d315ea6-13ab-11e5-a71c-0bd5c4dc058a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-1},{"failures":[389],"tindex":"5d315ea7-13ab-11e5-a71c-8ff4a87f61a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hashCode","listSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"5d315ea8-13ab-11e5-a71c-b72b988f5b29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"cmp","expectedModCount":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[390,391,392,393,306,394,395,396,397,398,399,400,401,402,403,108,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,309,427,428,429,430,431,432,433,434,435,436,110,437,438,439,440,441,442,443,444,445,446,447,448,449,310,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,384,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,388,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,367,370],"tindex":"5d315ea9-13ab-11e5-a71c-9513594bc7c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate))"},"status":-1},{"failures":[147,148,149,150,151,153,670,154,671,155,156,672,673,674],"tindex":"5d3185ba-13ab-11e5-a71c-d98f8a4ebd16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"5d3185bb-13ab-11e5-a71c-cf946a2e1c0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:423","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[675,676],"tindex":"5d3185bc-13ab-11e5-a71c-a5b9b7344823","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5d3185bd-13ab-11e5-a71c-5d5af72d4a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"parent","node":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"5d3185be-13ab-11e5-a71c-2f6268c19f3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"5d3185bf-13ab-11e5-a71c-1df71b02a185","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index1","currentIndex":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"5d3185c0-13ab-11e5-a71c-591fde343fda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"5d3185c1-13ab-11e5-a71c-954cfaf26003","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"5d3185c2-13ab-11e5-a71c-a39d2da7e715","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"5d3185c3-13ab-11e5-a71c-5bb68e9c2889","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"5d3185c4-13ab-11e5-a71c-65278a27be51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"5d31acd5-13ab-11e5-a71c-9bff8c4ec3b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"5d31acd6-13ab-11e5-a71c-5fea96f67976","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1084","type":"CtIfImpl","sourcecode":"if (java.util.Iterator.java.util.Iterator.isAssignableFrom(java.lang.reflect.Method.getReturnType())) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.reflect.Method.invoke(java.lang.Object, ((java.lang.Object[])(null)))));\n    if (java.util.Iterator<?> != null) {\n        return java.util.Iterator<?>;\n    } \n} "},"variableMap":{"java.util.Iterator.class":"key","method":"key","obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"5d31acd7-13ab-11e5-a71c-cde80aee4177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[677,120,121,122,123,124,678],"tindex":"5d31acd8-13ab-11e5-a71c-d1f03d281120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"5d31acd9-13ab-11e5-a71c-096d99e6de53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"5d31acda-13ab-11e5-a71c-13e396747bfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"current","parent":"entry","left":"current","h":"path","right":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}