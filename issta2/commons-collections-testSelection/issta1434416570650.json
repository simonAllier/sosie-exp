{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":818,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":385,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":698,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":1052,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":672,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":80,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":803,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":130,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":580,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":1062,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":905,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":624,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":906,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":474,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":545,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":510,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":946,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":826,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":519,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":1033,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":746,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":275,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":453,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":477,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":529,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":110,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":1030,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":866,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":460,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":859,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":874,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":163,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":919,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":822,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":855,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":851,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":727,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":1061,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":690,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":711,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":684,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":1056,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":849,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":190,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":1010,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":205,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":921,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":705,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":673,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":1037,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":447,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":244,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":558,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":612,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":991,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":469,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":738,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":749,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.CollectionUtilsTest.intersection":18,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":663,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":683,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":795,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":901,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":835,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":1017,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":523,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":768,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":513,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":372,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":507,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":146,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":225,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":827,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":148,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":587,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":804,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":691,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":357,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":294,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":598,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":641,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":819,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":554,"org.apache.commons.collections4.map.CompositeMapTest.testPut":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":865,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":1031,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":262,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":729,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":982,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":1090,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":575,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":935,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":923,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":896,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":1025,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":162,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":337,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":434,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":665,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":965,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":959,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":552,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":347,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":38,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":658,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":343,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":341,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":415,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":1086,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":1044,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":884,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":689,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":996,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":846,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":21,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":1045,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":403,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":165,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":79,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":642,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":949,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":227,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":407,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":975,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":394,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":123,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":1078,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":579,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":940,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":1039,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":1018,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":655,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":932,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":1019,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":428,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":509,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":187,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":622,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":68,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":880,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":834,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":388,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":584,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":595,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":170,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":911,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":97,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":892,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":759,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":261,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":1075,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":27,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":366,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":806,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":718,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":619,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":675,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":976,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":798,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":1072,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":1073,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":1074,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":45,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":922,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":1035,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":375,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":1005,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":660,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":864,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":525,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":282,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":1041,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":854,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":958,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":81,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":1051,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":302,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":688,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":971,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":929,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":476,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":927,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":1079,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":815,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":997,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":877,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":904,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":336,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":875,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":824,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":180,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":1002,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":817,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":553,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":1036,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":943,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":301,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":300,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":299,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":551,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":977,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":770,"org.apache.commons.collections4.map.LRUMapTest.testReset":269,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":1014,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":448,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":654,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":924,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":467,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":177,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":912,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":947,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":548,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":1029,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":96,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":812,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":998,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":769,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":962,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":109,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":910,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":270,"org.apache.commons.collections4.map.LinkedMapTest.testReset":167,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":593,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":209,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":285,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":942,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":334,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":371,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":978,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":221,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":773,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":724,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":926,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":1058,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":594,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":530,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":780,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":252,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":703,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":1081,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":520,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":550,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":941,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":1042,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":680,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":420,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":482,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":606,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":231,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":452,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":681,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":493,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":968,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":913,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":335,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":1006,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":66,"org.apache.commons.collections4.map.HashedMapTest.testClone":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":1027,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":808,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":766,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":384,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":955,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":591,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":589,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":755,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":504,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":23,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":266,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":59,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":1063,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":457,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":596,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":787,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":543,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":617,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":649,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":614,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":915,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":573,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":94,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":195,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":194,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":14,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":196,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":124,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":821,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":172,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":367,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":1034,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":862,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":557,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":1070,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":1071,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":1069,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":666,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":206,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":161,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":590,"org.apache.commons.collections4.map.LinkedMapTest.testClone":164,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":1009,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":710,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":360,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":1020,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":809,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":238,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":239,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":426,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":362,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":276,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":468,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":728,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":993,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":879,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":141,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":1043,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":273,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":734,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":401,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":894,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":995,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":1054,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":458,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":883,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":481,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":376,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":870,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":570,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":185,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":928,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":316,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":873,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":872,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":1088,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":871,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":555,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":235,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":574,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":743,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":531,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":461,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":881,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":908,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":271,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":753,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":72,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":888,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":566,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":564,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":1057,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":1047,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":1087,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":229,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":796,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":790,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":330,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":60,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":974,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":699,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":981,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":1004,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":757,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":944,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":484,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":751,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":620,"org.apache.commons.collections4.map.LRUMapTest.testLRU":257,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":717,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":659,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":502,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":138,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":1021,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":1022,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":1085,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":953,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":801,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":1023,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":52,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":630,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":936,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":49,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":295,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":1011,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":800,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":610,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":626,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":820,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":495,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":127,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":810,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":267,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":319,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":1082,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":868,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":586,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":721,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":890,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":623,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":756,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":20,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":774,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":292,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":1046,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":402,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":41,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":454,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":333,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":1015,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":744,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":830,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":621,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":283,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":793,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":994,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":937,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":22,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":797,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":999,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":639,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":546,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":350,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":725,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":760,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":1012,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":802,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":948,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":508,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":478,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":643,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":709,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":838,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":669,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":964,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":832,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":833,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":950,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":328,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":28,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":785,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":224,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":694,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":945,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":377,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":222,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":970,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":860,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":517,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":762,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":237,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":627,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":841,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":990,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":842,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":840,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":331,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":308,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":954,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":133,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":693,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":887,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":75,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":567,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":485,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":345,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":314,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":701,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":816,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":957,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":537,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.map.CompositeMapTest.testGet":9,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":315,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":814,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":183,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":805,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":885,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":979,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":1083,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":436,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":650,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":57,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":378,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":42,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":494,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":1091,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":192,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":272,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":487,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":987,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":988,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":989,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":380,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":697,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":369,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":776,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":1024,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":886,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":603,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":166,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":708,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":533,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":839,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":571,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":831,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":76,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":475,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":836,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":732,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":488,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":972,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":671,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":951,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":1016,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":823,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":1048,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":459,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":391,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":390,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":914,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":931,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":541,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":735,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":631,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":410,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":544,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":36,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":731,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":171,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":845,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":844,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":843,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":750,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":1076,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":1050,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":1068,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":992,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.map.LRUMapTest.testClone":256,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":514,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":969,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":98,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":193,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":667,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":632,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":895,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":761,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":1060,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":518,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":656,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":920,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":70,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":1089,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":792,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":829,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":984,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":985,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":986,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":685,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":411,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":1028,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":503,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":679,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":1065,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":1080,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":1007,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":909,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":967,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":310,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":581,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":1013,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":633,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":547,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":600,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":1067,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":857,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":775,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":848,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":12,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":327,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":1001,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":737,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":917,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":1066,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":1032,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":228,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":828,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":952,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":131,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":230,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":50,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":636,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":616,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":44,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":1038,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":811,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":199,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":500,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":63,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":191,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":198,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":784,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":197,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":396,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":189,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":456,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":720,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":742,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":1000,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":218,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":867,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":440,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":423,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":648,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":966,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":535,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":1040,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":31,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":1084,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":40,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":245,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":16,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":640,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":279,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":1026,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":592,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":105,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":13,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":106,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":521,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":889,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":419,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":7,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":893,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":43,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":233,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":583,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":763,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":772,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":722,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":37,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":736,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":609,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":289,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":891,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":422,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":365,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":176,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":850,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":89,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":861,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":24,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":480,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":960,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":670,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":764,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":265,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":1064,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":56,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":794,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":882,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":853,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":522,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":652,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":1003,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":464,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":704,"org.apache.commons.collections4.set.CompositeSetTest.testContains":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":46,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":151,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":291,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":577,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":938,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":782,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":983,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":323,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":786,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":1055,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":491,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":416,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":539,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":747,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":741,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":490,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":876,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":462,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":869,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":754,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":902,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":903,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":1008,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":916,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":647,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":618,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":856,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":278,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":505,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":511,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":78,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":112,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":332,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":678,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":963,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":712,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":730,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":878,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":559,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":611,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":791,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":934,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":847,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":576,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":1059,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":939,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":217,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":918,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":542,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":719,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":483,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":779,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":549,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":212,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":406,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":739,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":561,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":562,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":563,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":837,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":528,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":26,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":628,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":578,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":615,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":789,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":569,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":676,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":143,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":144,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":933,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":825,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":1053,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":358,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":288,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":1077,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":858,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":540,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":852,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":956,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":418,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":767,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":930,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":973,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":82,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":93,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":897,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":898,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":259,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":788,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":597,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":588,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":635,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":298,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":907,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":538,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":661,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":980,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":409,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":961,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":499,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":297,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":899,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":715,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":900,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":71,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":219,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":1049,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":925,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":286,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":657},"transformations":[{"failures":[],"tindex":"697f9f24-13c3-11e5-90a8-21410fd73167","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"69814cd5-13c3-11e5-90a8-273a73a594a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"current","current":"left","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[0,1,2,3],"tindex":"69814cd6-13c3-11e5-90a8-3b1c0a81993b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"69814cd7-13c3-11e5-90a8-e7580c031ca9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"69814cd8-13c3-11e5-90a8-c997b84b22b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"698173e9-13c3-11e5-90a8-17f4d3e0184c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:229","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-1},{"failures":[],"tindex":"698173ea-13c3-11e5-90a8-113ec877263a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30],"tindex":"6982fa8b-13c3-11e5-90a8-bd5d0068bdae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"6983219c-13c3-11e5-90a8-977f5f955d8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtIfImpl","sourcecode":"if ((int != (-1)) && (int != int)) {\n    super.remove(int);\n} "},"status":-1},{"failures":[],"tindex":"6983219d-13c3-11e5-90a8-27f5fa3c9a2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"6983219e-13c3-11e5-90a8-a9c9cc0f8271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[],"tindex":"6983219f-13c3-11e5-90a8-cb3e40811233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,0,1,2,3,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451],"tindex":"698348b0-13c3-11e5-90a8-29bd050e5108","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"6984f661-13c3-11e5-90a8-67e0527cde9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"69851d72-13c3-11e5-90a8-070a15da9913","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":0},{"failures":[452,453,454,455],"tindex":"69851d73-13c3-11e5-90a8-e3856aa408c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:73","type":"CtIfImpl","sourcecode":"if (((org.w3c.dom.NodeList) != null) && ((int) < (org.w3c.dom.NodeList.getLength()))) {\n    return org.w3c.dom.NodeList.item((int)++);\n} "},"status":-1},{"failures":[456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474],"tindex":"69851d74-13c3-11e5-90a8-d9cbb5e811e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"69851d75-13c3-11e5-90a8-1d000c116afd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:523","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:888","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"69851d76-13c3-11e5-90a8-c7bf442bf048","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"69851d77-13c3-11e5-90a8-89a1fe1e0893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"root","left":"root","h":"root","right":"root","child":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[475,476],"tindex":"69851d78-13c3-11e5-90a8-ffbae22cfab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"nextCalled","beforeFirst":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"698592a9-13c3-11e5-90a8-f123498b6e0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[477,478,479,480,481,482,483,484,485,486,487,488],"tindex":"698655fa-13c3-11e5-90a8-13640ee482a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"698655fb-13c3-11e5-90a8-65318051dee3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"root","right":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"69867d0c-13c3-11e5-90a8-2fc08707a415","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:278","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{"n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:256","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"69867d0d-13c3-11e5-90a8-475c78a0d09e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"69867d0e-13c3-11e5-90a8-4b8231a6ee91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"69867d0f-13c3-11e5-90a8-cde9b48eafd7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[489],"tindex":"69867d10-13c3-11e5-90a8-8d4c75ba7221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,457,458,459,460,461,462,463,464,465,466,467,469,471,472,505,506,507,508,509,510,511],"tindex":"69867d11-13c3-11e5-90a8-17fbc419dbbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[],"tindex":"69867d12-13c3-11e5-90a8-77b001b2a193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"6986a423-13c3-11e5-90a8-a12e10d10783","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"6986a424-13c3-11e5-90a8-bf30290b0b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6986a425-13c3-11e5-90a8-e1656cf04da1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"69876776-13c3-11e5-90a8-8144a9e72df3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"69876777-13c3-11e5-90a8-991b4f2927ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-2},{"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545],"tindex":"69876778-13c3-11e5-90a8-ad6d8f1c2951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"69876779-13c3-11e5-90a8-4d1048fa444d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"6987677a-13c3-11e5-90a8-0fbf6ca4fc2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[456,546,457,547,548,549,550,551,552,458,459,553,460,461,462,554,463,464,555,465,556,557,466,467,558,559,560,561,562,563,564,565,566,468,567,568,469,569,570,571,470,572,471,472,473,474],"tindex":"6987677b-13c3-11e5-90a8-87fb5c1d25c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"69878e8c-13c3-11e5-90a8-2fe0d9af0fa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[573,574],"tindex":"69878e8d-13c3-11e5-90a8-5911d49cff2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"69878e8e-13c3-11e5-90a8-3d48977ee857","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"69878e8f-13c3-11e5-90a8-e5ef784dc42f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"69878e90-13c3-11e5-90a8-3f56ced11ad3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:578","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"69878e91-13c3-11e5-90a8-f52c0e7a80e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"6987b5a2-13c3-11e5-90a8-374277962d87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"deletedNode","dataElement":"dataElement","child":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"6987b5a3-13c3-11e5-90a8-5dc12092b8e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":-2},{"failures":[575,576,577,578,579,580,581,582,583,584],"tindex":"6987b5a4-13c3-11e5-90a8-778d3496f9f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"x":"yFormerParent","yFormerParent":"y","dataElement":"dataElement","yWasLeftChild":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[547],"tindex":"6987b5a5-13c3-11e5-90a8-b725fb6eb112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"6987b5a6-13c3-11e5-90a8-d922e1f5d9eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"6987b5a7-13c3-11e5-90a8-5b7711ab4ef9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,357,767,768,769,369,370,371,372,373,374,375,377,379,382,383,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,451,790,791,792,793,794,795],"tindex":"6987dcb8-13c3-11e5-90a8-e5be8c6908dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[796,797,798,799,800,801],"tindex":"6987dcb9-13c3-11e5-90a8-0bae8829620e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"6987dcba-13c3-11e5-90a8-7d453eee237f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"6987dcbb-13c3-11e5-90a8-756db5cb9a31","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[802],"tindex":"6987dcbc-13c3-11e5-90a8-51ac9988f25b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-1},{"failures":[],"tindex":"6987dcbd-13c3-11e5-90a8-595c57170806","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:224","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"6987dcbe-13c3-11e5-90a8-3b2ee2237da5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"root","tree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[13,803,804,805,806],"tindex":"6987dcbf-13c3-11e5-90a8-5bd907621b21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"composite","i":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"698803d0-13c3-11e5-90a8-a9a38214089b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:664","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (C != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        C.execute(T);\n    }\n} "},"status":-2},{"failures":[],"tindex":"698803d1-13c3-11e5-90a8-0ffc0aa5f13e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"698803d2-13c3-11e5-90a8-fbaee24da75f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"variableMap":{"timeUnit":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,575,834,835,836,576,837,838,839,840,841,842,843,844,845,577,846,847,578,579,848,849,580,581,582,583,584,850,851,852,853,854,855,856,857,858,859,860,861,862,863,585,586,864,587,588,589,590,865,591,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885],"tindex":"698803d3-13c3-11e5-90a8-39e69f9c29da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[2],"tindex":"698803d4-13c3-11e5-90a8-11010c9e82b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:453","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"698803d5-13c3-11e5-90a8-6920278f4369","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[886,887],"tindex":"698803d6-13c3-11e5-90a8-a142f81d526c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"69882ae7-13c3-11e5-90a8-118988613a9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[888,889,890,890,891,891,892,893,894,895,896,897,898,899,900,901,886,902,903,904,887,905,906,907,908,909,910],"tindex":"69882ae8-13c3-11e5-90a8-e95c8a34d4e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[78,79,90],"tindex":"69882ae9-13c3-11e5-90a8-6353837026dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"69882aea-13c3-11e5-90a8-2de39afd8202","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"69882aeb-13c3-11e5-90a8-f15ff6c2c4cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"698aea0c-13c3-11e5-90a8-359f316b59b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"right","prior":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"698aea0d-13c3-11e5-90a8-b1aacb3b346d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[888],"tindex":"698aea0e-13c3-11e5-90a8-775c9f648538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtIfImpl","sourcecode":"if (java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"698aea0f-13c3-11e5-90a8-d5bf2522e2c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"698aea10-13c3-11e5-90a8-171c258cb3d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1047","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"698b1121-13c3-11e5-90a8-859b7765bb95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938],"tindex":"698b1122-13c3-11e5-90a8-e5910c7cecef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"variableMap":{"result":"result","coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"698b1123-13c3-11e5-90a8-f36c8460fd79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"698b1124-13c3-11e5-90a8-e7ccf95266ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[807,808,809,810,939,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,575,834,835,836,576,837,838,839,840,841,842,843,844,845,577,846,847,578,579,848,849,580,581,582,583,584,850,851,852,853,854,855,856,857,858,859,860,861,862,863,585,586,864,587,588,589,590,865,591,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885],"tindex":"698b1125-13c3-11e5-90a8-035ae6773d08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"cmp","index":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"698b8656-13c3-11e5-90a8-ed06db62ea08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:622","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()"},"status":-2},{"failures":[78,80,81,82,86,99,100,101],"tindex":"698b8657-13c3-11e5-90a8-df5970acea1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hash3","listSize":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[940,941,942,943,944,945,946,947,948,489,949],"tindex":"698b8658-13c3-11e5-90a8-21f85b5f343d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:371","type":"CtReturnImpl","sourcecode":"return !((java.util.ListIterator<?>.hasNext()) || (java.util.ListIterator<?>.hasNext()))"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[575,576,577,578,579,580,581,582,583,584],"tindex":"698bad69-13c3-11e5-90a8-759ec8a87a06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1123","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"698bad6a-13c3-11e5-90a8-ef7edf572012","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"698bad6b-13c3-11e5-90a8-15e9478f02f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,601,602,1014,603,604,605,606,1015,607,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086],"tindex":"698bad6c-13c3-11e5-90a8-8df946fd6ca0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-1},{"failures":[],"tindex":"698bad6d-13c3-11e5-90a8-61a6bd4d6ad5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"transformers":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[456,546,457,547,548,549,550,551,552,458,459,553,460,462,554,461,463,464,555,465,556,557,466,467,558,559,560,561,562,563,564,565,566,468,567,568,469,569,570,571,470,572,471,472,473,474],"tindex":"698bad6e-13c3-11e5-90a8-d78591f06b95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[1087,1088,1089,1090],"tindex":"698bd47f-13c3-11e5-90a8-91112a406407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[896],"tindex":"698bd480-13c3-11e5-90a8-0f190d285989","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"698bd481-13c3-11e5-90a8-693765372a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"698bd482-13c3-11e5-90a8-29a6f3a5c4fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[],"tindex":"698bd483-13c3-11e5-90a8-2f7e40140208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[5,6,1091,8],"tindex":"698bd484-13c3-11e5-90a8-b914a2c068e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-1},{"failures":[39,54,72],"tindex":"698bd485-13c3-11e5-90a8-c1726cd732ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:133","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}