{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":120,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":579,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":658,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":144,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":475,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":590,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":379,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":535,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":600,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":350,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":258,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":257,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":414,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":248,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":512,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":708,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":32,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":466,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":322,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":603,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":111,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":467,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":468,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":626,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":638,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":693,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":657,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":339,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":426,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":134,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":321,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":704,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":149,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":189,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":422,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":582,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":631,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":176,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":313,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":639,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.CollectionUtilsTest.select":289,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":689,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":138,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":438,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":457,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":387,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":672,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":645,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":270,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":701,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":254,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":398,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":308,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":183,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":385,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":649,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":279,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":304,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":66,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":293,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":150,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":207,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":348,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":208,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":349,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":206,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":410,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":547,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":256,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":496,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":187,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":507,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":215,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":266,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":617,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":647,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":479,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":644,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":427,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":200,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":583,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":195,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":421,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":182,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":666,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":478,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":185,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":375,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":432,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":517,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":622,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":264,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":592,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":670,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":699,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":407,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":408,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":550,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":406,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":100,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":393,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":676,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":36,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":65,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":484,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":365,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":501,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":229,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":506,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":546,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":623,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":323,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":589,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":240,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":694,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":430,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":597,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":429,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":573,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":49,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":690,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":362,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":516,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":526,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":198,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":125,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":611,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":166,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":338,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":97,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":167,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":433,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":515,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":687,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":423,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":537,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":62,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":528,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":325,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":416,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":351,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":668,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":529,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":685,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":249,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":648,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":268,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":356,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":476,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":707,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":363,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":197,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":34,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":307,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":214,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":280,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":252,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":604,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":678,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":295,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":72,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":591,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":578,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":667,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":703,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":260,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":412,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":263,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":286,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":296,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":388,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":602,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":294,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":605,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":130,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":251,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":259,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":641,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":673,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":436,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":326,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":482,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":127,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":394,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":493,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":152,"org.apache.commons.collections4.map.LinkedMapTest.testReset":420,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":696,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":242,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":640,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":121,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":599,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":315,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":575,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":209,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":383,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":107,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":664,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":552,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":446,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":306,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":147,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":303,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":654,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":684,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":188,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":540,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":661,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":669,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":192,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":431,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":538,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":536,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":448,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":28,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":381,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":367,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":173,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":241,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":498,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":453,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":627,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":90,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":465,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":636,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":630,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":489,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":491,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":400,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":662,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":679,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":461,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":201,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":390,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":462,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":504,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":105,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":35,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":665,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":659,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":160,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":224,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":170,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":702,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":299,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":697,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":165,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":671,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":112,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":434,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":336,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":581,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":126,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":63,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":357,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":698,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":633,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":311,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":563,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":680,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":162,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":186,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":352,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":502,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":587,"org.apache.commons.collections4.ListUtilsTest.testSelect":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":682,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":533,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":113,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":570,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":22,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":634,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":624,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":73,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":83,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":620,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":543,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":561,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":458,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":324,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":459,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":692,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":643,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":21,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":342,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":541,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":542,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":361,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":513,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":368,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":705,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":329,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":340,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":695,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":522,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":415,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":545,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":70,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":301,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":608,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":609,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":492,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":282,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":495,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":428,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":399,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":392,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":521,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":397,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":271,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":660,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":549,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":116,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":584,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":576,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":652,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":238,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":511,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":261,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":487,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":277,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":273,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":616,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":275,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":568,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":615,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":452,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":481,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":677,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":588,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":353,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":556,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":128,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":557,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":558,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":344,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":544,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":655,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":159,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":497,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":691,"org.apache.commons.collections4.map.LRUMapTest.testLRU":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":635,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":158,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":91,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":190,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":477,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":625,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":505,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":480,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":595,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":177,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":706,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":95,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":221,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":222,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":596,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":674,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":580,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":26,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":337,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":60,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":218,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":534,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":395,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":346,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":255,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":302,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":179,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":292,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":297,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":193,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":565,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":330,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":503},"transformations":[{"failures":[],"tindex":"23ad4040-13d0-11e5-a60e-d5d7f28c3931","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl","sourcecode":"final E E = E"},"status":-2},{"failures":[],"tindex":"23ad4041-13d0-11e5-a60e-35d916f443f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"23ad4042-13d0-11e5-a60e-c9a582212f18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[],"tindex":"23ad6753-13d0-11e5-a60e-931ed6543119","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"23ad6754-13d0-11e5-a60e-97c79048f4c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"23ad6755-13d0-11e5-a60e-0779290e97be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[36],"tindex":"23ad8e66-13d0-11e5-a60e-a724a5572f70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"23ad8e67-13d0-11e5-a60e-676f7bfc7b16","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"23ad8e68-13d0-11e5-a60e-b54d854ef67f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bound","newCapacity":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[],"tindex":"23ad8e69-13d0-11e5-a60e-778afdc43d8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:379","type":"CtLocalVariableImpl","sourcecode":"java.lang.ref.Reference<?> java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll()"},"status":-2},{"failures":[],"tindex":"23ad8e6a-13d0-11e5-a60e-8fb12917e0a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"23ad8e6b-13d0-11e5-a60e-a119c33567bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key4","entry":"entry","key2":"key3","hashCode":"hashCode","key3":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"23adb57c-13d0-11e5-a60e-afca5652b729","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":0},{"failures":[37,38,39,40,41],"tindex":"23adb57d-13d0-11e5-a60e-4d651d48fcd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52],"tindex":"23adb57e-13d0-11e5-a60e-0f5306aa7256","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[],"tindex":"23adb57f-13d0-11e5-a60e-cb2be8653efd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"23addc90-13d0-11e5-a60e-8db57dcba698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"offsetInBits","index":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"23addc91-13d0-11e5-a60e-69e1e9f21ea3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:461","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)))"},"status":-2},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"23addc92-13d0-11e5-a60e-2de889197290","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","data":"newEntries","hashIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"23ae03a3-13d0-11e5-a60e-c7187084cc45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"23ae03a4-13d0-11e5-a60e-b5a48fff4c08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[196,197,198,199,200,201,202,203,204],"tindex":"23ae03a5-13d0-11e5-a60e-9f16e9857616","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[17,205,18,19,20],"tindex":"23ae03a6-13d0-11e5-a60e-91d5909cfeb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"23ae2ab7-13d0-11e5-a60e-53d17e89bcbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":0},{"failures":[],"tindex":"23ae2ab8-13d0-11e5-a60e-bfa9c8ff9fc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[206,207,208,209,210,211],"tindex":"23ae2ab9-13d0-11e5-a60e-6f2ee625f940","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233],"tindex":"23ae2aba-13d0-11e5-a60e-6fe0ff9dc5d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"23ae2abb-13d0-11e5-a60e-770e137e826e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:130","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-2},{"failures":[],"tindex":"23ae2abc-13d0-11e5-a60e-c9581b28eaa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[234,235,236,237,238,239],"tindex":"23ae2abd-13d0-11e5-a60e-89310aeaf576","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}"},"variableMap":{"this":"this","lock":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-1},{"failures":[],"tindex":"23ae2abe-13d0-11e5-a60e-b3d73064e2a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"23ae2abf-13d0-11e5-a60e-1fdb03c02a64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"23ae2ac0-13d0-11e5-a60e-0f83bef046d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":0},{"failures":[],"tindex":"23ae51d1-13d0-11e5-a60e-ef4cf963369c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[240,241,242,243,244,245,246,247,248,249,250],"tindex":"23ae51d2-13d0-11e5-a60e-a1d42ece2d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"23ae51d3-13d0-11e5-a60e-83b6de72b2a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":0},{"failures":[251,252,253,254,255,256],"tindex":"23ae51d4-13d0-11e5-a60e-3515937123a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[257,258,259,7,260,261,262,263,264,8,9,265,10,11,12,266,13,14,267,15,268,269,16,17,270,271,272,273,274,275,276,277,278,205,279,280,18,281,282,283,284,285,19,20,286,287],"tindex":"23ae51d5-13d0-11e5-a60e-c7783738c06b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[288,289],"tindex":"23ae51d6-13d0-11e5-a60e-3f7991bee26f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"23ae9ff7-13d0-11e5-a60e-5fcffcfdbe73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"23b15f18-13d0-11e5-a60e-c925f2ba7959","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:115","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"23b18629-13d0-11e5-a60e-313e9803ad12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"23b1862a-13d0-11e5-a60e-2ba5566472f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[290],"tindex":"23b1862b-13d0-11e5-a60e-43789e511c86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"23b1862c-13d0-11e5-a60e-ed4bc5169ddd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"23b1862d-13d0-11e5-a60e-d192e8ec5802","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"23b1862e-13d0-11e5-a60e-5d257698a34f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[291,292,293,294,295,296,297,298,299,300,301,302],"tindex":"23b1862f-13d0-11e5-a60e-f90d7a17d005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-1},{"failures":[303,304,305,306],"tindex":"23b18630-13d0-11e5-a60e-9bae86af104c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[307,308,309,310,311,312],"tindex":"23b18631-13d0-11e5-a60e-47498d270624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"23b1ac42-13d0-11e5-a60e-5fc2fce3c12d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-2},{"failures":[313,53,54,55,56,57,58,59,60,61,62,63,314,64,65,315,66,67,68,69,70,71,316,72,317,318,73,74,319,320,321,75,76,77,78,79,80,322,323,324,81,325,326,327,328,329,330,331,332,333,334,335,336,82,83,337,84,85,86,87,88,89,338,90,339,340,91,92,341,342,343,344,345,346,347,348,349,350,351,352,93,353,354,355,356,357,358,359,360,361,94,95,96,97,98,362,363,364,365,99,100,366,101,102,103,104,105,106,367,107,368,369,108,109,370,371,372,373,374,375,376,377,378,379,380,381,110,382,383,384,385,386,387,388,389,390,391,392,393,394,395,111,112,396,113,114,115,116,117,118,397,119,398,399,120,121,400,401,402,403,404,405,406,407,408,409,410,411,122,412,413,414,415,416,417,418,419,420,421,422,36,123,423,424,124,125,126,127,128,425,129,130,426,131,132,133,134,427,135,428,136,429,430,137,138,431,432,433,139,140,434,141,142,143,144,435,436,145,437,438,439,440,441,442,443,444,445,446,447,448,449,146,147,450,148,149,150,151,451,152,452,153,453,454,154,155,455,456,457,458,459,460,461,462,463,464,465,466,156,467,468,469,470,471,472,473,474,475,476,477,478,157,158,479,159,160,161,162,163,164,480,165,481,482,166,167,483,484,485,486,487,488,489,490,491,492,493,494,168,495,496,497,498,499,500,501,502,169,170,171,172,173,174,175,176,177,178,179,180,182,183,184,503,185,504,186,187,188,505,189,190,191,192,194,195,506],"tindex":"23b1ac43-13d0-11e5-a60e-c967aaa5fe6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[507,508,509],"tindex":"23b1ac44-13d0-11e5-a60e-d9c0cd8c7c4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[510],"tindex":"23b1ac45-13d0-11e5-a60e-bbb2ee5b89c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} "},"status":-1},{"failures":[],"tindex":"23b1d356-13d0-11e5-a60e-8db8740c9f6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-2},{"failures":[511,512,513,514,515,516],"tindex":"23b1d357-13d0-11e5-a60e-a54ce6a42c10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[307,308,309,310,311,312],"tindex":"23b1d358-13d0-11e5-a60e-93df16a0007e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"23b1d359-13d0-11e5-a60e-b1acac2e5c0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"23b1d35a-13d0-11e5-a60e-837911cf2e11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[21,32,33,34,35],"tindex":"23b1d35b-13d0-11e5-a60e-d3f63063376a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"23b1d35c-13d0-11e5-a60e-938c97a04fdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"23b1d35d-13d0-11e5-a60e-d72403a20128","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[556,557,558,559,560,561,562,254,563,564,256],"tindex":"23b1d35e-13d0-11e5-a60e-677b8d542e5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"23b1d35f-13d0-11e5-a60e-89ea32161bcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"nextIndex":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"23b1fa70-13d0-11e5-a60e-b563c44c64e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[565,566,567,568],"tindex":"23b1fa71-13d0-11e5-a60e-97db7c436dc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"23b1fa72-13d0-11e5-a60e-93bf675cb318","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"23b1fa73-13d0-11e5-a60e-4547264b04b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":0},{"failures":[569,570,571,572,573,574,575],"tindex":"23b1fa74-13d0-11e5-a60e-9d1758ac5f0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594],"tindex":"23b1fa75-13d0-11e5-a60e-b91eef3c7a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"23b1fa76-13d0-11e5-a60e-f1e4f4d9efe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[595,596,597,598,599,600],"tindex":"23b1fa77-13d0-11e5-a60e-5150e03840bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"start2","vDown":"vUp","delta":"start1","end2":"start1","this":"this","i":"start2","end1":"start1","k":"end2","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[595,596,597,598,599,600],"tindex":"23b22188-13d0-11e5-a60e-49dbf5fdcce2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"offset","d":"end2","vDown":"vDown","delta":"delta","end2":"start2","this":"this","i":"delta","end1":"end1","k":"start2","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"23b22189-13d0-11e5-a60e-cf238448981b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[17,205,18,21,22,32,601,33,34,35],"tindex":"23b2218a-13d0-11e5-a60e-9d6982a106da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"root","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"23b2218b-13d0-11e5-a60e-c74eb699113c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[602,603],"tindex":"23b2218c-13d0-11e5-a60e-551950292a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[257,258,7,260,261,262,263,8,9,10,11,12,266,13,14,15,16,17,273,274,276,277,278,18,281,285,287],"tindex":"23b2218d-13d0-11e5-a60e-993637840dac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"23b2218e-13d0-11e5-a60e-5b33dcefd8e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"23b2489f-13d0-11e5-a60e-a1c07ed99696","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"methodName","defaultValue":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[583,584,588],"tindex":"23b248a0-13d0-11e5-a60e-b59de536d4c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"23b248a1-13d0-11e5-a60e-7391804a7fcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"variableMap":{"cursors":"cursors"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"23b248a2-13d0-11e5-a60e-0b5c75d6afa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"23b248a3-13d0-11e5-a60e-6ffe03f3438f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"23b248a4-13d0-11e5-a60e-d5cd0e6f210a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"leftChild","dataElement":"dataElement","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[576,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594],"tindex":"23b248a5-13d0-11e5-a60e-cb6478f19692","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"23b26fb6-13d0-11e5-a60e-4fdad0453ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"23b26fb7-13d0-11e5-a60e-0dba625e9d58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[604],"tindex":"23b26fb8-13d0-11e5-a60e-9f6ece010750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-1},{"failures":[605,606,607,608,609,610,611,212,612],"tindex":"23b26fb9-13d0-11e5-a60e-276bae1a878d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"23b26fba-13d0-11e5-a60e-dfe17a6dd07d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[583,584,588,589,590,591,592,593,594],"tindex":"23b26fbb-13d0-11e5-a60e-d7e5c1fa4425","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[613,212,213,214,215,216,217,218,219,220,614,615,616,617,618,619,620,621,622,623],"tindex":"23b26fbc-13d0-11e5-a60e-db6dca65022b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"variableMap":{"all":"all"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[624,625,42,43,626,627,628,629,44,630,45,631,632,46,633,634,47,635,636,637,48,638,49,639,640,50,51,641,642,643,644,52],"tindex":"23b26fbd-13d0-11e5-a60e-b7d45fef44f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"23b296ce-13d0-11e5-a60e-872ff6cc35d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[],"tindex":"23b296cf-13d0-11e5-a60e-b3f9bc85b94e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"variableMap":{"f":"k","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","i":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","k":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":0},{"failures":[],"tindex":"23b296d0-13d0-11e5-a60e-19bf609f7f65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"23b296d1-13d0-11e5-a60e-9366327d209c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:195","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708],"tindex":"23b296d2-13d0-11e5-a60e-6bde03bc8a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[583,584,589,591],"tindex":"23b2bde3-13d0-11e5-a60e-f3388615e0f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}