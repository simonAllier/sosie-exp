{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":339,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":229,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":193,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":310,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":427,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":425,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":488,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":321,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":378,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":485,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":265,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":401,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":514,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":390,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":504,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":494,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":326,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":94,"org.apache.commons.collections4.CollectionUtilsTest.get":250,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":406,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":424,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":320,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":460,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":370,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":227,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":141,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":483,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":287,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":103,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":420,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":222,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":97,"org.apache.commons.collections4.CollectionUtilsTest.select":502,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":363,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":348,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":413,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":451,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":423,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":371,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":52,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":461,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":209,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":162,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":309,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":449,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":331,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":207,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":223,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":20,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":465,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":233,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":304,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":165,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":435,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":467,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":268,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":187,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":11,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":62,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":85,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":398,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":457,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":411,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":41,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":344,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":171,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":32,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":251,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":164,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":395,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":433,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":410,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":346,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":369,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":56,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":247,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":105,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":415,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":15,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":126,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":471,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":206,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":454,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":478,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":285,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":208,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":479,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":468,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":122,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":135,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":243,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":258,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":391,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":30,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":95,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":242,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":19,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":88,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":288,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":177,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":458,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":226,"org.apache.commons.collections4.ListUtilsTest.testSubtract":116,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":522,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":66,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":418,"org.apache.commons.collections4.CollectionUtilsTest.get1":254,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":107,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":359,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":302,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":477,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":438,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":76,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":472,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":383,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":377,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":334,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":112,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":24,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":450,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":257,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":354,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":200,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":237,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":150,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":519,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":373,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":482,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":296,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":357,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":69,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":430,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":403,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":255,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":521,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":6,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":412,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":127,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":235,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":428,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":367,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":507,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":270,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":462,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":278,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":219,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":120,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":481,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":119,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":220,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":314,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":241,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":198,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":380,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":225,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":381,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":492,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":358,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":342,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":400,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":464,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":230,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":432,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":163,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":416,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":210,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":394,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":36,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":195,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":330,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":252,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":178,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":245,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":355,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":49,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":217,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":487,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":356,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":319,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":379,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":501,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":515,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":240,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":340,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":402,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":429,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":328,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":365,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":175,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":282,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":347,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":51,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":256,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":130,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":421,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":25,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":170,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":368,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":295,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":513,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":1,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":37,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":439,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":409,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":84,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":190,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":146,"org.apache.commons.collections4.ListUtilsTest.testSelect":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":366,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":510,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":496,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":201,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":332,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":271,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":448,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":408,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":404,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":516,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":305,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":131,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":387,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":453,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":172,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":125,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":293,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":264,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":329,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":29,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":341,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":143,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":138,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":419,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":239,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":93,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":443,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":323,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":444,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":266,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":452,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":474,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":475,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":253,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":476,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":336,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":182,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":484,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":39,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":189,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":317,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":181,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":211,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":327,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":3,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":263,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":284,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":184,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":303,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":276,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":277,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":396,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":399,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":511,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":236,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":185,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":191,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":33,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":188},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"e6bbd6bd-13e0-11e5-869b-6be2d313c1f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[118],"tindex":"e6c0b8be-13e0-11e5-869b-c14d5dec1a93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e6c0dfcf-13e0-11e5-869b-919fa5858661","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e6c74870-13e0-11e5-869b-9b847b214a05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"variableMap":{"next":"entry","data":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[119,120,121,122,123,124,125,126],"tindex":"e6c74871-13e0-11e5-869b-bbe9826013d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"e6c74872-13e0-11e5-869b-b526f17c71ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"e6c76f83-13e0-11e5-869b-978788c6480e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key5","entry":"next","key2":"key4","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[127,128,129,130,131,132,133],"tindex":"e6c79694-13e0-11e5-869b-0387783cee19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e6c79695-13e0-11e5-869b-715960511cd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[134,135],"tindex":"e6cc5186-13e0-11e5-869b-079c8f248aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[],"tindex":"e6cc5187-13e0-11e5-869b-1714ee85d91a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:59","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super E>[])"},"variableMap":{"predicates":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"e6cc5188-13e0-11e5-869b-55d8b986ba2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"current","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e6cc7899-13e0-11e5-869b-1f3869ef0c97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"e6cc789a-13e0-11e5-869b-9f2c7d2e86b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[136,137],"tindex":"e6d9bf0b-13e0-11e5-869b-e3a56460cbd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"e6d9e61c-13e0-11e5-869b-0d6ffe2a31f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e6da0d2d-13e0-11e5-869b-d175b70ab194","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"key1","i":"hashCode","value":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249],"tindex":"e6da0d2e-13e0-11e5-869b-c76dcf264222","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[250,251,252],"tindex":"e6da343f-13e0-11e5-869b-8bb4a2ea50a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"e6da3440-13e0-11e5-869b-933b56f2746b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[253,250,254,255,256,257],"tindex":"e6da3441-13e0-11e5-869b-4975d71740f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"variableMap":{"org.apache.commons.collections4.functors.DefaultEquator.INSTANCE":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"e6da5b52-13e0-11e5-869b-1327ea5ea95d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"e6da5b53-13e0-11e5-869b-4da44b6ff3aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":0},{"failures":[258,259,260,261,262,263],"tindex":"e6da8264-13e0-11e5-869b-3598ef3372b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,136,279,280,281,282,283,284,285,286,287,288,289,137,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,131,307,308,132,309,310,311,312,313,314,315,316,317,133,318,319,320,321,322,323,324,325,326,327,328,329,330,331],"tindex":"e6da8265-13e0-11e5-869b-438704b05fe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"e6daa976-13e0-11e5-869b-9fe16858a00c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e6daf797-13e0-11e5-869b-c37b331799c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-2},{"failures":[],"tindex":"e6daf798-13e0-11e5-869b-0fab8cebf01b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:259","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[],"tindex":"e6daf799-13e0-11e5-869b-b7a3d68cd78d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"e6db1eaa-13e0-11e5-869b-bf79bb28ae53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379],"tindex":"e6db1eab-13e0-11e5-869b-971a7ba5735e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[380,381,382,383],"tindex":"e6db1eac-13e0-11e5-869b-2bc5dc1d3365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[253,254],"tindex":"e6db45bd-13e0-11e5-869b-ed83a7b0a3f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[384,385,198,386],"tindex":"e6db45be-13e0-11e5-869b-4b5decaf7e8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"e6ebc07f-13e0-11e5-869b-df64caad0a97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[],"tindex":"e6ebe790-13e0-11e5-869b-0dc6a4ef22b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:339","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413],"tindex":"e6ebe791-13e0-11e5-869b-d519cac4610a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-1},{"failures":[],"tindex":"e6ebe792-13e0-11e5-869b-110699b9cbc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)"},"status":-2},{"failures":[414],"tindex":"e6ec0ea3-13e0-11e5-869b-8907ac32c91e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[415,4,416,19,417,34,418,419,49,420,63,74,421,83,95,422,423,106],"tindex":"e6ec0ea4-13e0-11e5-869b-71d48f2053a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[174,188,199,209,219,424,228,240],"tindex":"e6ec0ea5-13e0-11e5-869b-c9e08f4917f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[143,146,147,148,149,150,151,152,153,142],"tindex":"e6f0f0a6-13e0-11e5-869b-4dc7474c879d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[425,426,427,428,429,430,431,432,403,433,404,405,434,406,407,408,435,436,409,437,410,438,439,411,412,413,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459],"tindex":"e6fa6687-13e0-11e5-869b-7bc30c8df3c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"e6fa8d98-13e0-11e5-869b-7da15a2e8c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e6fe5e29-13e0-11e5-869b-d5b38ac16d85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[460,461],"tindex":"e6fe5e2a-13e0-11e5-869b-fdfd6bd25ce0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"proposedCapacity","removeIndex":"newCapacity","currentIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"e6fe853b-13e0-11e5-869b-c715674ab5c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[462,463,464,465,466],"tindex":"e6fe853c-13e0-11e5-869b-1577fa278b74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[13,28,43,58,467],"tindex":"e6fe853d-13e0-11e5-869b-336ef3c6c7f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"e6fe853e-13e0-11e5-869b-1d8cf1aabcfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:769","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"e6fefa6f-13e0-11e5-869b-a3ecda3388d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"e6fefa70-13e0-11e5-869b-43e029855d81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"e6fefa71-13e0-11e5-869b-bd95ba274f7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[],"tindex":"e7019282-13e0-11e5-869b-93d387d86a25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"left","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e7019283-13e0-11e5-869b-cbd826c7e3f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[],"tindex":"e7019284-13e0-11e5-869b-cf369ebf7620","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[468,469,470,471],"tindex":"e701b995-13e0-11e5-869b-cfda014a31ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e701b996-13e0-11e5-869b-05cea4a55357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"parent","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e701b997-13e0-11e5-869b-5166bceccb5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"e701b998-13e0-11e5-869b-ebfa7420c9ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","maxElements":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[304,132,309,311,312,314,315,133,318,319],"tindex":"e701b999-13e0-11e5-869b-3f771dda2279","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"e701e0aa-13e0-11e5-869b-377851a45428","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[472,473,147,149,151,152,153],"tindex":"e701e0ab-13e0-11e5-869b-4155207fcd3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"parent","y":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[474,475,476],"tindex":"e701e0ac-13e0-11e5-869b-bd73388d2197","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[477,478,479,480,481,482,483],"tindex":"e701e0ad-13e0-11e5-869b-5f1396bef321","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"e701e0ae-13e0-11e5-869b-ff5c7d919ddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e70207bf-13e0-11e5-869b-b747aa520a9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[],"tindex":"e70207c0-13e0-11e5-869b-7b60b0e46e26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"e70207c1-13e0-11e5-869b-d55ba0ffbf94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[477,478,479,480,481,482,484,483,485,486,487,488,489],"tindex":"e70207c2-13e0-11e5-869b-e34a2af9df87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"e70207c3-13e0-11e5-869b-8b17f6916dae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[490],"tindex":"e70207c4-13e0-11e5-869b-bda23e38021a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"status":-1},{"failures":[],"tindex":"e7022ed5-13e0-11e5-869b-23f263d59a78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")"},"status":-2},{"failures":[],"tindex":"e7022ed6-13e0-11e5-869b-5b2fec95005e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"e7022ed7-13e0-11e5-869b-3b2f34a7db25","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"e7022ed8-13e0-11e5-869b-f5f2d328d447","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"e7022ed9-13e0-11e5-869b-5371320c164f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[425,426,427,429,430,431,432,403,435,436,404,405,406,407,408,409,410,411,412,442,443,445,446,447,451,452,456],"tindex":"e70255ea-13e0-11e5-869b-ad83d1f89508","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[491],"tindex":"e70255eb-13e0-11e5-869b-67c705ba781d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"e70255ec-13e0-11e5-869b-9f37486f92e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"child","left":"child","h":"child","right":"child","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[387,388,389,390,391,492,392,493,494,495,496,393,394,395,396,397,497,398,399,400,401,498,499,500,501,429,430,404,405,406,407,408,435,409,410,411,412,452,456,457,458],"tindex":"e70255ed-13e0-11e5-869b-295e7d2f4672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e70255ee-13e0-11e5-869b-cd6177179d8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"e7027cff-13e0-11e5-869b-3d21af368e5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:324","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.ListIterator<java.util.Map.Entry<K, V>>.previous()"},"variableMap":{"iterator":"iterator","last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":-2},{"failures":[],"tindex":"e7038e70-13e0-11e5-869b-19ea3d9515a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[382,383,380,381],"tindex":"e7038e71-13e0-11e5-869b-c16b3df9bb5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index","proposedCapacity":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[502,503],"tindex":"e7038e72-13e0-11e5-869b-4fcc378d9764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-1},{"failures":[],"tindex":"e703b583-13e0-11e5-869b-9f926ff4de2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"lock","s1":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:94","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().remove(java.lang.Object, int);\n}"},"status":-2},{"failures":[332,336,337,338,339,340,341,342,343,351,352,353,354,355,345,346,347,348,349,350,357,358,359,360,361,362,363,364,365,366,374,375,376,377,378,368,369,370,371,372,373],"tindex":"e703b584-13e0-11e5-869b-ab473d137310","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[495,496,401,504,505,498,506,499,500,501,507,431,432,403,412,445,446,448,451,452,455,456,457,458,459],"tindex":"e703b585-13e0-11e5-869b-d1c6299292fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"h","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[508,296,509,510,511,512,513,514],"tindex":"e703b586-13e0-11e5-869b-aba7718ab710","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"e703dc97-13e0-11e5-869b-2190ea9bdb3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"e703dc98-13e0-11e5-869b-358ea6426bf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e703dc99-13e0-11e5-869b-9318700889e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[515,383],"tindex":"e703dc9a-13e0-11e5-869b-0146e54e5c9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[495,496,401,504,505,500,501,412,445,446,448,451,457,458],"tindex":"e703dc9b-13e0-11e5-869b-13e109d58b62","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[516,517,518,519,520,521,522,523,524,525],"tindex":"e70403ac-13e0-11e5-869b-071dd4018c86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"e70403ad-13e0-11e5-869b-bfcd439a534e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[425,426,427,428,429,430,431,432,403,452,453,454,455,456,457,458,459,433,404,405,434,406,407,408,435,436,409,437,410,438,439,411,412,413,440,441,442,443,444,445,446,447,448,449,450,451],"tindex":"e70403ae-13e0-11e5-869b-edd3abbda572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"endIndex1","modifications":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"e70403af-13e0-11e5-869b-7d6c6f1bd791","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}