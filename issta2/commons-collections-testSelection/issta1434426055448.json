{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":178,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":362,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":277,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":58,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":157,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":125,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":436,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":186,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":315,"org.apache.commons.collections4.CollectionUtilsTest.collect":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":114,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":435,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":442,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":420,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":452,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":276,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":193,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":239,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":305,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":159,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":165,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":259,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":55,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":79,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":126,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":396,"org.apache.commons.collections4.CollectionUtilsTest.transform2":329,"org.apache.commons.collections4.CollectionUtilsTest.select":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":226,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":300,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":212,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":285,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":431,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":360,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":130,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":446,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":344,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":262,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":385,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":469,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":176,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":439,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":105,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":133,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":107,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":106,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":164,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":366,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":104,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":283,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":123,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":371,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":372,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":370,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":85,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":427,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":207,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":144,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":336,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":456,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":191,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":210,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":499,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":325,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":167,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":267,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":495,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":98,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":122,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":169,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":217,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":298,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":324,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":473,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":397,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":379,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":497,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":496,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":275,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":232,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":312,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":81,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":487,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":488,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":250,"org.apache.commons.collections4.IteratorUtilsTest.testToList":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":332,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":291,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":177,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":308,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":294,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":494,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":491,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":319,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":405,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":172,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":348,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":132,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":4,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":188,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":363,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":113,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":94,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":395,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":72,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":386,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":437,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":149,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":392,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":421,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":17,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":326,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":457,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":90,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":339,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":429,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":417,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":401,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":297,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":292,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":414,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":272,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":415,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":416,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":238,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":335,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":278,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":143,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":478,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":479,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":466,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":227,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":284,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":351,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":255,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":228,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":16,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":221,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":445,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":41,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":498,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":39,"org.apache.commons.collections4.set.CompositeSetTest.testContains":489,"org.apache.commons.collections4.CollectionUtilsTest.isFull":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":236,"org.apache.commons.collections4.ListUtilsTest.testSelect":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":293,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":353,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":273,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":411,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":145,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":428,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":252,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":222,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":162,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":243,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":0,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":361,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":346,"org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure":168,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":245,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":358,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":244,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":251,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":279,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":134,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":355,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":354,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":465,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":461,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":342,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":321,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":78,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":142,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":220,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":88,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":316,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":23,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":381,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":53,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":430,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":234,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":476,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":287,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":77,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":8,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":31,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":59,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":472,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":231,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":67,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":131},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"83a5cc92-13d9-11e5-b6fa-3b881aaa4fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:161","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[8,9,10,11],"tindex":"83a927f3-13d9-11e5-b6fa-5d602df9f97d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"83a927f4-13d9-11e5-b6fa-5184eac42f27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[24,25,26,27,28,29],"tindex":"83a927f5-13d9-11e5-b6fa-cfdf2017ef12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[30],"tindex":"83a927f6-13d9-11e5-b6fa-33f9af252f02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} "},"status":-1},{"failures":[31,32,33,34],"tindex":"83a927f7-13d9-11e5-b6fa-618fa977716f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-1},{"failures":[35],"tindex":"83a94f08-13d9-11e5-b6fa-e71e3a19b728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"83aa8789-13d9-11e5-b6fa-afddd955433e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"83aa878a-13d9-11e5-b6fa-1b0a1db71f79","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"83aa878b-13d9-11e5-b6fa-6da95c664abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:189","type":"CtTryImpl","sourcecode":"try {\n    if (java.io.ByteArrayInputStream != null) {\n        java.io.ByteArrayInputStream.close();\n    } \n} catch (final java.io.IOException ex) {\n}"},"variableMap":{"bais":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"83aa878c-13d9-11e5-b6fa-27474dbe1464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"83aaae9d-13d9-11e5-b6fa-6f30888dc452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[],"tindex":"83aaae9e-13d9-11e5-b6fa-ffde44fdecb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"83aaae9f-13d9-11e5-b6fa-b74adae4189d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"83aaaea0-13d9-11e5-b6fa-d9ce1b7a441b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[],"tindex":"83aaaea1-13d9-11e5-b6fa-b91b25df9296","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[120,121,122,123,124,125],"tindex":"83aad4b2-13d9-11e5-b6fa-c5db67572b4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"83aad4b3-13d9-11e5-b6fa-c51571188f2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"83aad4b4-13d9-11e5-b6fa-5fd0377d3445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"83aad4b5-13d9-11e5-b6fa-178dffcf0100","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"83aad4b6-13d9-11e5-b6fa-1fee5bc302e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"variableMap":{"total":"nCopies","map":"map","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"83aad4b7-13d9-11e5-b6fa-a7e8a6acc53f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"83aafbc8-13d9-11e5-b6fa-6921227484bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:317","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[] , int , int)"},"status":-2},{"failures":[],"tindex":"83aafbc9-13d9-11e5-b6fa-97ccacdae88a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[],"tindex":"83aafbca-13d9-11e5-b6fa-43fa53cbc899","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"83aafbcb-13d9-11e5-b6fa-2167661ec0ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"83aafbcc-13d9-11e5-b6fa-7f5ceb88702d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"h","buckets":"key1","length":"h","cnt":"h","locks":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[92,126,127,128,129,130,131,132],"tindex":"83aafbcd-13d9-11e5-b6fa-6b979706f025","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"83ab22de-13d9-11e5-b6fa-6f0b8dbeafe2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key3","this":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"83ab22df-13d9-11e5-b6fa-95c377097348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:216","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(java.lang.Object)"},"status":-2},{"failures":[120,121,122,123,124,125],"tindex":"83ac8270-13d9-11e5-b6fa-776dcffaf937","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"d","modifications":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[133,134],"tindex":"83ac8271-13d9-11e5-b6fa-cb1645ff5fb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[135,136],"tindex":"83ac8272-13d9-11e5-b6fa-f509eaa9bb86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[137],"tindex":"83aca983-13d9-11e5-b6fa-07f09cb0cbf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146],"tindex":"83aca984-13d9-11e5-b6fa-1d485aeedcdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:519","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[79,88,108,111,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"83aca985-13d9-11e5-b6fa-4d1ea8fdc5dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"value","type":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"83aca986-13d9-11e5-b6fa-0bd20a95e725","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"83aca987-13d9-11e5-b6fa-7729f37f28b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:576","type":"CtForEachImpl","sourcecode":"for (final V V : this) {\n    java.util.List<V>.add(V);\n}"},"variableMap":{"list":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[162,163],"tindex":"83acd098-13d9-11e5-b6fa-81af9da23ddd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[164,165,166,167],"tindex":"83acd099-13d9-11e5-b6fa-458ca7181b7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[168],"tindex":"83acd09a-13d9-11e5-b6fa-0bfad7c17c48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"status":-1},{"failures":[169,8,170,9,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,133,194,195,196,134,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,10,221,11,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"tindex":"83acd09b-13d9-11e5-b6fa-e9aadf8314b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[259,260,261,262],"tindex":"83ae091c-13d9-11e5-b6fa-21d3f5e5f4d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"83ae091d-13d9-11e5-b6fa-5da677ba375a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"83ae091e-13d9-11e5-b6fa-07b427b9b7d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"83ae302f-13d9-11e5-b6fa-a33bf04e67d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"h","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"83ae3030-13d9-11e5-b6fa-bd09775dc1b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[263,264,265,266,267],"tindex":"83ae3031-13d9-11e5-b6fa-5b31f635bca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[268],"tindex":"83ae3032-13d9-11e5-b6fa-59f612dd9e6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"83ae3033-13d9-11e5-b6fa-e55f751ac658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"83ae3034-13d9-11e5-b6fa-a3b0846163ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"83ae5745-13d9-11e5-b6fa-bb1e4518c72d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"83ae5746-13d9-11e5-b6fa-7f06a2078ae3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"83ae5747-13d9-11e5-b6fa-9154e2de86dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"83ae5748-13d9-11e5-b6fa-2d0104a713e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:139","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null ? 0 : -1;\n} else if (K == null) {\n    return 1;\n} "},"status":0},{"failures":[269,270,271,272],"tindex":"83ae5749-13d9-11e5-b6fa-ab13fb813d59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"83ae574a-13d9-11e5-b6fa-a1effd0bc314","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313],"tindex":"83ae7e5b-13d9-11e5-b6fa-29e6f8a4c3e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[314,315,316,317,318,319,320,321,322,323,324],"tindex":"83ae7e5c-13d9-11e5-b6fa-ab09decaf034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"83aea56d-13d9-11e5-b6fa-3d7a31c8e0c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-2},{"failures":[325,326,327,28],"tindex":"83aea56e-13d9-11e5-b6fa-45748dbac6f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-1},{"failures":[76],"tindex":"83aea56f-13d9-11e5-b6fa-efee1c2987ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1498","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"83aea570-13d9-11e5-b6fa-c304a55f963e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"root","root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":-2},{"failures":[328,142],"tindex":"83aecc81-13d9-11e5-b6fa-491dcf8784f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[329,142,330],"tindex":"83b2eb32-13d9-11e5-b6fa-abc735218546","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[331],"tindex":"83b31243-13d9-11e5-b6fa-7b0e313f3e1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll2","list2":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"83b31244-13d9-11e5-b6fa-852f7803b003","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":0},{"failures":[269,270,271],"tindex":"83b31245-13d9-11e5-b6fa-edbd472ee0f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"83b31246-13d9-11e5-b6fa-af58eff8c23b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"h","buckets":"key4","length":"h","locks":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"83b31247-13d9-11e5-b6fa-7d06675f7fa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"83b8b798-13d9-11e5-b6fa-a9390dfc2ed7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"83b8b799-13d9-11e5-b6fa-43a09f7ffe17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"83b8b79a-13d9-11e5-b6fa-8b2f308a2469","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[120,121,123,124],"tindex":"83b8b79b-13d9-11e5-b6fa-a74544fa5ab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[332,333,334,335,336,337,338,339,340],"tindex":"83b8b79c-13d9-11e5-b6fa-09c15963c2f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[],"tindex":"83b8b79d-13d9-11e5-b6fa-b3e050c2b744","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"83b8b79e-13d9-11e5-b6fa-431a364990e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[341,342,343],"tindex":"83b8deaf-13d9-11e5-b6fa-6ff089f21eec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[193],"tindex":"83b8deb0-13d9-11e5-b6fa-07c20337be9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[263,264,265,266,267],"tindex":"83b8deb1-13d9-11e5-b6fa-dffddfca3d1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"83b8deb2-13d9-11e5-b6fa-19bceb71e0f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"83b8deb3-13d9-11e5-b6fa-69af89223320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:554","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[344,345,346,347,348,349,350,351,352,353,152,354,355,356,129,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,153,373,374,154,375,376,377,378,379,380,381,382,383,384,385,386,387,388,158,389,390,391,392,393,394,395,396,397,159,398,399,400,132,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,160,417,418,161,419,420,421,422,423,424,425,426,427,428,429,430],"tindex":"83b8deb4-13d9-11e5-b6fa-0dffc6457aa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"83b8deb5-13d9-11e5-b6fa-317ed0dcf825","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"83b8deb6-13d9-11e5-b6fa-998eca164307","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[280],"tindex":"83b8deb7-13d9-11e5-b6fa-d532dfb1174f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[120,121,122,123,124,125],"tindex":"83b905c8-13d9-11e5-b6fa-e1a8838e891b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"end2","vDown":"vUp","delta":"end1","end2":"end2","this":"this","i":"delta","end1":"delta","k":"end1","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"83b905c9-13d9-11e5-b6fa-2f8383baf53c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"variableMap":{"comparator":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":0},{"failures":[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464],"tindex":"83b905ca-13d9-11e5-b6fa-8def5d851fc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:396","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Iterator<E>.hasNext()"},"status":-1},{"failures":[],"tindex":"83b905cb-13d9-11e5-b6fa-e7938611b57f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[465],"tindex":"83bc883c-13d9-11e5-b6fa-79db09f05435","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:265","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"nodeCount":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:221","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"83bc883d-13d9-11e5-b6fa-010b0fd375de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"object","defaultValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,163,486],"tindex":"83bc883e-13d9-11e5-b6fa-ab256cd8636d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[269,272,270,271],"tindex":"83bc883f-13d9-11e5-b6fa-9139d99b7d8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"h","listSize":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[487,488,466,467,468,469,470,471,472,473,474,489,490,477,481,483,485,491,492,486],"tindex":"83bc8840-13d9-11e5-b6fa-7500ce7e6e81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"83bc8841-13d9-11e5-b6fa-e73f504b72bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[493,494,495,496,497,498,499,500,501,502],"tindex":"83bc8842-13d9-11e5-b6fa-1197d4133d84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[13,14,15,16,18,19,20,21,22,23],"tindex":"83bc8843-13d9-11e5-b6fa-5b5f2f1ccf0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}