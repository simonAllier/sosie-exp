{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":608,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":438,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":781,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":369,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":639,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":31,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":707,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":704,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":620,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":774,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":544,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":762,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":658,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":9,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":761,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":277,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":800,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":211,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":536,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":655,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":668,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":644,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":123,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":309,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":805,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":511,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":638,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":162,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":448,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":794,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":382,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":706,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":72,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":66,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":287,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":622,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":579,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":750,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":321,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":415,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":553,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":609,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":103,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":350,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":535,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":788,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":267,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":443,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":484,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":575,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":228,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":777,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":738,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":787,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":592,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":446,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":314,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":305,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":743,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":744,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":742,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":806,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":678,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":691,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":265,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":633,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":685,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":780,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":793,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":375,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":187,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":528,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":636,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":537,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":519,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":411,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":422,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":547,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":215,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":621,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":88,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":224,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":434,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":643,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":390,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":461,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":6,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":548,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":319,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":710,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":588,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":436,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":659,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":782,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":433,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":733,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":614,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":288,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":671,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":485,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":335,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":549,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":365,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":607,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":133,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":560,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":559,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":558,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":177,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":313,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":590,"org.apache.commons.collections4.map.LRUMapTest.testReset":530,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":705,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":363,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":264,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":510,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":611,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":752,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":791,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":520,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":755,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":799,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":539,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":357,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":401,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":172,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":589,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":208,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":248,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":149,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":214,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":576,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":563,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":45,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":498,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":445,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":722,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":732,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":260,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":594,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":770,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":419,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":223,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":231,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":442,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":330,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":225,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":730,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":731,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":402,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":715,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":385,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":754,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":23,"org.apache.commons.collections4.SetUtilsTest.testHashCode":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":465,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":389,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":506,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":286,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":468,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":497,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":29,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":587,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":651,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":18,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":12,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":209,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":808,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":380,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":431,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":521,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":25,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":605,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":726,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":727,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":728,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":545,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":673,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":121,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":540,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":531,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":475,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":677,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":192,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":769,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":377,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":664,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":681,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":495,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":737,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":657,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":667,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":665,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":168,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":792,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":96,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":675,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":541,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":600,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":432,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":399,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":271,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":720,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":384,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":803,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":772,"org.apache.commons.collections4.map.LRUMapTest.testLRU":538,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":299,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":181,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":293,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":58,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":117,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":420,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":496,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":747,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":33,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":713,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":554,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":306,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":131,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":615,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":522,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":603,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":662,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":684,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":240,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":480,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":562,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":628,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":682,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":686,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":683,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":487,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":515,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":218,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":766,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":624,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":392,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":437,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":585,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":398,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":368,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":488,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":183,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":508,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":302,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":122,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":582,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":680,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":577,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":310,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":104,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":243,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":463,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":725,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":145,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":10,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":626,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":280,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":567,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":418,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":387,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":690,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":303,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":773,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":127,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":736,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":593,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":714,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":802,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":366,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":395,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":696,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":606,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":518,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":165,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":85,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":412,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":112,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":613,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":687,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":367,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":679,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":294,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":748,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":599,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":542,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":764,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":523,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":213,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":641,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":388,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":469,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":261,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":372,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":175,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":776,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":625,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":301,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":340,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":507,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":343,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":765,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":100,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":740,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":739,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":619,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":154,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":741,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":73,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":751,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":182,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":250,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":410,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":266,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":464,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":171,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":692,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":627,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":255,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":391,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":82,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":543,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":578,"org.apache.commons.collections4.ListUtilsTest.testSubtract":327,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":130,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":459,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":477,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":139,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":499,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":500,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":322,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":39,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":194,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":454,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":379,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":640,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":473,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":312,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":637,"org.apache.commons.collections4.CollectionUtilsTest.filter":483,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":466,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":717,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":505,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":354,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":580,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":338,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":424,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":597,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":489,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":409,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":724,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":285,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":711,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":441,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":661,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":756,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":804,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":80,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":689,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":41,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":47,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":184,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":257,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":329,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":796,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":797,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":798,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":455,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":504,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":642,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":701,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":746,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":176,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":550,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":270,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":274,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":408,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":164,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":320,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":230,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":276,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":566,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":645,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":386,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":226,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":262,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":252,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":52,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":697,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":447,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":768,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":393,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":695,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":676,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":278,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":232,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":648,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":156,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":784,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":115,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":159,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":513,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":30,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":694,"org.apache.commons.collections4.set.CompositeSetTest.testContains":503,"org.apache.commons.collections4.CollectionUtilsTest.isFull":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":84,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":360,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":632,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":456,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":394,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":700,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":268,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":69,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":595,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":413,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":206,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":334,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":281,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":663,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":239,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":212,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":753,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":652,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":430,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":693,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":258,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":708,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":352,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":779,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":801,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":778,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":514,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":718,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":79,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":672,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":440,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":634,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":344,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":591,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":758,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":167,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":93,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":551,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":771,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":785,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":786,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":795,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":242,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":767,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":760,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":623,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":222,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":516,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":251,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":790,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":435,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":234,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":359,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":646,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":405,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":210,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":699,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":383,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":428,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":783,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":26,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":789,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":427,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":476,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":348,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":451,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":546,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":512,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":178,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":573,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":557,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":107,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":502,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":364,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":376,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":688,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":533,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":735,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":244,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":358},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"a882a80f-13a3-11e5-a932-e70e2f884ce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"a882cf20-13a3-11e5-a932-4d3ed9dff785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"start","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[50],"tindex":"a882cf21-13a3-11e5-a932-053b65db06b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hashCode","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode","otherOffsetInBits":"hashCode","otherLengthInBits":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"a882cf22-13a3-11e5-a932-49ac09a05604","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"a882cf23-13a3-11e5-a932-cf120de1a782","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"a882f634-13a3-11e5-a932-09932cc8b6db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a882f635-13a3-11e5-a932-9d35e12a598e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"tindex":"a882f636-13a3-11e5-a932-6df345f08d6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351],"tindex":"a8831d47-13a3-11e5-a932-e9460dbff96c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421],"tindex":"a8831d48-13a3-11e5-a932-fb898aac50a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"a8831d49-13a3-11e5-a932-c5bf614f7bf6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":-2},{"failures":[422,423,424,425,426,427],"tindex":"a8831d4a-13a3-11e5-a932-0182a47718b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start1","n":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"a8831d4b-13a3-11e5-a932-557e1bf487c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49],"tindex":"a883445c-13a3-11e5-a932-93db458148bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"full","nextCalled":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[428,429,430],"tindex":"a883445d-13a3-11e5-a932-6d4096131450","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"a883445e-13a3-11e5-a932-e37a74927eaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-2},{"failures":[],"tindex":"a883445f-13a3-11e5-a932-91a44b6ccdb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a8834460-13a3-11e5-a932-7150e70a0c5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"a8836b71-13a3-11e5-a932-b362c49edf41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[479,480,481,482],"tindex":"a8836b72-13a3-11e5-a932-fb19cbf08360","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[483,484],"tindex":"a8836b73-13a3-11e5-a932-032d08042186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[485],"tindex":"a8836b74-13a3-11e5-a932-c1eed88779ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a8836b75-13a3-11e5-a932-6327a86bf8a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"a8839286-13a3-11e5-a932-99232292c9e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.ArrayStack<E>.push(E)"},"status":-2},{"failures":[486],"tindex":"a8839287-13a3-11e5-a932-19acccd51eda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[487],"tindex":"a8839288-13a3-11e5-a932-29914ebd0004","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478],"tindex":"a8839289-13a3-11e5-a932-37fb246a4c74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a883928a-13a3-11e5-a932-a5e7b63588e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[488,489,490,375,379,385,389,491,395,399,492,405,409,493,415,419,494],"tindex":"a883928b-13a3-11e5-a932-196cc22c1d46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[495,496,497,498],"tindex":"a883b99c-13a3-11e5-a932-95be9c4006d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"a883b99d-13a3-11e5-a932-9d47e23d3583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"a883b99e-13a3-11e5-a932-134b9d0851b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"a883b99f-13a3-11e5-a932-1db957a4edba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"status":-2},{"failures":[499,500,52,53,55,56,57,501,502,59,60,503,504,505,506,507,508,509,510,511],"tindex":"a883b9a0-13a3-11e5-a932-970dc45ffc0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a883b9a1-13a3-11e5-a932-133eb57d5630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":0},{"failures":[],"tindex":"a883b9a2-13a3-11e5-a932-e594602f57f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a883b9a3-13a3-11e5-a932-737aff63ef5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a883b9a4-13a3-11e5-a932-dbf583123d89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"otherValue","i":"size","key":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-2},{"failures":[],"tindex":"a883e0b5-13a3-11e5-a932-99c29bd38dce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[512,513],"tindex":"a883e0b6-13a3-11e5-a932-436f42cf3d24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.TransformedQueue:80","type":"CtInvocationImpl","sourcecode":"java.util.Queue<E>.clear()"},"variableMap":{"queue":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[422,423,424,425,426,427],"tindex":"a883e0b7-13a3-11e5-a932-0d9cf4423f8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"a883e0b8-13a3-11e5-a932-d321696e033c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"a883e0b9-13a3-11e5-a932-53b0aa70f651","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:442","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"a883e0ba-13a3-11e5-a932-97ad5eddc1b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"a883e0bb-13a3-11e5-a932-79e0f8b8b078","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"endIndex1","removeIndex":"endIndex1","currentIndex":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"a883e0bc-13a3-11e5-a932-0582260b442f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[514,515,516,517,518,519,520,521,522,523,524,525,526,52,53,55,56,57,501,502,59,60],"tindex":"a88407cd-13a3-11e5-a932-b593ef2bcf7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"variableMap":{"all":"all"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[],"tindex":"a88407ce-13a3-11e5-a932-01d9c65e6353","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":0},{"failures":[],"tindex":"a88407cf-13a3-11e5-a932-e117ca07d9c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[527,528,529],"tindex":"a88407d0-13a3-11e5-a932-cdb3dd7bfa99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:259","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,352,353,548,354,355,356,357,358,549,359,550,551,360,361,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"a88407d1-13a3-11e5-a932-9b87093b7e15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[574,575,576,577,578,488,579,580,489,581,582,583,556,352,353,548,354,355,356,358,359,360,361,584,585,362,363,586,364,365,366,368,369,370,371,587,588,372,373,589,374,375,376,378,379,380,381,590,382,383,384,385,386,388,389,390,391,591,392,393,592,394,395,396,398,399,400,401,593,594,402,403,595,404,405,406,408,409,410,411,596,597,412,413,598,414,415,416,418,419,420,421,599],"tindex":"a88407d2-13a3-11e5-a932-97f61c009000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a8842ee3-13a3-11e5-a932-9f66b1b1cb4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"a8873c24-13a3-11e5-a932-754fe6515fed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"a8873c25-13a3-11e5-a932-613dacb47e83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[1,600,601,2,3,5,6],"tindex":"a8873c26-13a3-11e5-a932-23becef1e5b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,335,336,620,337,338,339,340,341,486,342,621,622,343,344,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,345,346,659,347,348,349,350,351,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679],"tindex":"a8873c27-13a3-11e5-a932-ff429443bbc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[680,385,389,681,491,405,409,682,493,415,419,683,494],"tindex":"a8876338-13a3-11e5-a932-25abedd78a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a8876339-13a3-11e5-a932-8b61037c2531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"predecessor","right":"predecessor","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"a887633a-13a3-11e5-a932-af1559181005","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"variableMap":{"array":"key","map":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"a887633b-13a3-11e5-a932-43358cd1fb01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"a887633c-13a3-11e5-a932-f7b48761c548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[684,685,686,439,445,446,447,448,450,453,687,461,468,469,470,471,473,476,688],"tindex":"a887633d-13a3-11e5-a932-fbb03998b55c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"variableMap":{"node":"header","this":"this","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721],"tindex":"a887633e-13a3-11e5-a932-bbbdd9df949f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:150","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.contains(E)) == false) {\n    super.add(int, E);\n    java.util.Set<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"a8878a4f-13a3-11e5-a932-9fac7d8400bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[],"tindex":"a8878a50-13a3-11e5-a932-e5bd85c0213f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"node","current":"node","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a8878a51-13a3-11e5-a932-7343757c61fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[],"tindex":"a8878a52-13a3-11e5-a932-27b99b98d54b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":0},{"failures":[],"tindex":"a8878a53-13a3-11e5-a932-61bf4261bf0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a8878a54-13a3-11e5-a932-d5c62b07f6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"leftChild","dataElement":"dataElement","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a8878a55-13a3-11e5-a932-f7f086966030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"a8878a56-13a3-11e5-a932-1dfa4fe51f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"status":-2},{"failures":[],"tindex":"a8878a57-13a3-11e5-a932-833f590c5e67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[722,723,724,574,575,576,577,578,488,579,580,489,581,582,725,726,727,728,729,730,731,732,733,734,735,736,737,591,392,393,592,394,395,396,398,399,400,401,738,739,740,741,742,743,744,745,746,747,748],"tindex":"a887b168-13a3-11e5-a932-71afa2be3e13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"a887b169-13a3-11e5-a932-c73f1733469b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"a887b16a-13a3-11e5-a932-437cfee2422e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"leftChild","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[342,344],"tindex":"a887b16b-13a3-11e5-a932-71c5fa16c389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"a887b16c-13a3-11e5-a932-63ecadc40f7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[],"tindex":"a887b16d-13a3-11e5-a932-e72479827772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"a887d87e-13a3-11e5-a932-b73da7c416e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"variableMap":{"result":"key1","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[749,750,751,752,753,754,755,756,757],"tindex":"a887d87f-13a3-11e5-a932-ffb22669050c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"a887d880-13a3-11e5-a932-b748b9a2c6bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","replacement":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"a887d881-13a3-11e5-a932-abf03429686d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:536","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)"},"status":-2},{"failures":[],"tindex":"a887d882-13a3-11e5-a932-c729e3789dbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"a887d883-13a3-11e5-a932-d13df67c0aa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"a887ff94-13a3-11e5-a932-51f57615c8e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a887ff95-13a3-11e5-a932-5b7cd7ddc3de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[602,603,604,605,758,610,611,612,613,614,606,607,608,609,615,616,617,618,619,335,336,620,337,338,339,340,341,486,342,621,622,343,344,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,652,653,654,655,656,650,651,657,658,345,346,659,347,348,349,350,351,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679],"tindex":"a887ff96-13a3-11e5-a932-2b3a92c15866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"a887ff97-13a3-11e5-a932-79a47393ba1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,759,760,505,509,761],"tindex":"a887ff98-13a3-11e5-a932-c13c589b3e82","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[632,635,636,640,641,642,342,344],"tindex":"a887ff99-13a3-11e5-a932-c156f4540287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[485],"tindex":"a887ff9a-13a3-11e5-a932-03a377bdf361","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a887ff9b-13a3-11e5-a932-f985245e1042","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-2},{"failures":[],"tindex":"a88826ac-13a3-11e5-a932-a1be5d667258","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[762,763,764,765,766,767,768,769,770,771,772,773],"tindex":"a88826ad-13a3-11e5-a932-2b1b3af49099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[774],"tindex":"a88826ae-13a3-11e5-a932-53493d1a9391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1428","type":"CtReturnImpl","sourcecode":"return !org.apache.commons.collections4.CollectionUtils.(org.apache.commons.collections4.CollectionUtils.isEmpty(java.util.Collection<?>))"},"variableMap":{"coll":"coll1","this":"aColl2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:418","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[537,775,776,777],"tindex":"a88826af-13a3-11e5-a932-59f7d8c6b095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[778,779,780,781,782,783,784,785,786,787,382,383,788,384,385,386,387,388,789,389,790,791,390,391,792,793,794,795,796,797,798,681,799,800,491,801,802,803,804,805,806,807,808],"tindex":"a88826b0-13a3-11e5-a932-3d66bb4ac2f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"a88826b1-13a3-11e5-a932-41f4c3102759","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}