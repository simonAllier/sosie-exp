{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":304,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":423,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":14,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":35,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":89,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":95,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":471,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":167,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":506,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":514,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":193,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":532,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":469,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":312,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":392,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":326,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":359,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":485,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":482,"org.apache.commons.collections4.CollectionUtilsTest.get":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":159,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":355,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":461,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":351,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":505,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":529,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":347,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":107,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":160,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":476,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":356,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":340,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":72,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":19,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":390,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":462,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":543,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":328,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":175,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":100,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":13,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":157,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":132,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":513,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":313,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":53,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":363,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":144,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":178,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":234,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":69,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":516,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":540,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":302,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":367,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":409,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":231,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":300,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":282,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":135,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":191,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":206,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":185,"org.apache.commons.collections4.map.Flat3MapTest.testEmptyMapCompatibility":180,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":203,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":548,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":431,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":165,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":460,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":335,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":179,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":224,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":327,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":546,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":172,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":401,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":81,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":338,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":547,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":524,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":551,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":62,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":44,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":256,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":263,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":483,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":262,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":383,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":321,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":507,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":80,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":228,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":229,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":247,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":451,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":241,"org.apache.commons.collections4.ListUtilsTest.testSubtract":563,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":549,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":553,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":518,"org.apache.commons.collections4.CollectionUtilsTest.get1":558,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":362,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":534,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":94,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":315,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":468,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":515,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":4,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":12,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":562,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":103,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":464,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":527,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":447,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":269,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":559,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":537,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":339,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":147,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":66,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":442,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":434,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":472,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":58,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":16,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":475,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":314,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":517,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":538,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":114,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":417,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":448,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":426,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":481,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":265,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":267,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":408,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":205,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":189,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":497,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":119,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":33,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":494,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":92,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":501,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":230,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":398,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":450,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":440,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":488,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":233,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":133,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":522,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":368,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":83,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":365,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":424,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":227,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":508,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":26,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":266,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":414,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":463,"org.apache.commons.collections4.SetUtilsTest.testHashCode":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":457,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":432,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":561,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":459,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":105,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":358,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":176,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":441,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":59,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":118,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":153,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":202,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":122,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":34,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":452,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":560,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":400,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArrayNull":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":366,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":458,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":186,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":406,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":542,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":479,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":177,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":404,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":173,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":445,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":382,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":490,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":466,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":11,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":544,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":25,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":352,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":171,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":373,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":150,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":223,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":381,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":425,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":324,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":88,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":296,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":413,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":405,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":199,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":40,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":273,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":274,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":275,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":523,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":402,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":168,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":169,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":170,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":396,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":420,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":30,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":528,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":455,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":354,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":261,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":519,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":493,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":226,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":235,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":443,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":480,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":163,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":218,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":496,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":467,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":245,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":364,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":162,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":435,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":295,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":520,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":371,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":192,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":219,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":246,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":106,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":502,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":495,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":96},"transformations":[{"failures":[0],"tindex":"6f9c08da-13ea-11e5-9bfc-99cc71d625e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"status":-1},{"failures":[],"tindex":"6f9c2feb-13ea-11e5-9bfc-bf22f8784ba0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"length","composite":"composite","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"6f9c2fec-13ea-11e5-9bfc-335fa801be57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[1,2,3,4],"tindex":"6f9c56fd-13ea-11e5-9bfc-8f5c0d12c405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[5,5,6,6,7,8,9,10,11,12,13,14,15,16],"tindex":"6f9c56fe-13ea-11e5-9bfc-738360183235","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"6f9c56ff-13ea-11e5-9bfc-75eff50617d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[29,30],"tindex":"6f9c5700-13ea-11e5-9bfc-99067281e2cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"6f9c5701-13ea-11e5-9bfc-954ea56af742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[31],"tindex":"6f9c5702-13ea-11e5-9bfc-f9912cfa8a3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"6f9c7e13-13ea-11e5-9bfc-63948be1c63e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,3,39,40,41,42],"tindex":"6f9c7e14-13ea-11e5-9bfc-c55c85da82f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.setValue(V)"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,35,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"6f9c7e15-13ea-11e5-9bfc-bd0057037b3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"6f9c7e16-13ea-11e5-9bfc-d5832a44830c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-2},{"failures":[],"tindex":"6f9c7e17-13ea-11e5-9bfc-990dc11dcd22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[100,101],"tindex":"6f9ca528-13ea-11e5-9bfc-87ec4f66a445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"6f9ca529-13ea-11e5-9bfc-53701cad6c52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[156,157,70,158,96,159,160,161],"tindex":"6f9ca52a-13ea-11e5-9bfc-f78e7b4f4536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[162,163,164,165,166,167],"tindex":"6f9ca52b-13ea-11e5-9bfc-5dd961c27a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"d","end2":"start1","this":"this","i":"start1","end1":"end2","k":"d","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"6f9ccc3c-13ea-11e5-9bfc-5ba64e3f8380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1157","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"6f9ccc3d-13ea-11e5-9bfc-27650a7b19b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[162,163,164,165,166,167],"tindex":"6f9ccc3e-13ea-11e5-9bfc-df46a19cf6e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"end1","d":"delta","vDown":"vUp","delta":"end2","end2":"start2","this":"this","i":"end2","end1":"delta","k":"delta","start2":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[168,169,170,171,172,173,174,175,176,177,178],"tindex":"6f9ccc3f-13ea-11e5-9bfc-a11b4945802b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"6f9ccc40-13ea-11e5-9bfc-b3b20ebc59a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"6f9cf351-13ea-11e5-9bfc-6b942cd8ef0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"entry","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"6f9cf352-13ea-11e5-9bfc-1169a7b8d10e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:133","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"6f9cf353-13ea-11e5-9bfc-312530cd1f06","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends I>.hasNext()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":0},{"failures":[179,180,181,182],"tindex":"6f9d1a64-13ea-11e5-9bfc-6d3b7df2a1a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"count","lengthInBits":"count","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"count","otherOffsetInBits":"count","otherLengthInBits":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-1},{"failures":[],"tindex":"6f9d1a65-13ea-11e5-9bfc-dda62e4d2135","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":0},{"failures":[],"tindex":"6f9d1a66-13ea-11e5-9bfc-952f3d02fb60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[183,184,185,69,186,187,188,95,189,190,191,192,193,194,195],"tindex":"6f9d1a67-13ea-11e5-9bfc-7d63024c331f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"6f9d1a68-13ea-11e5-9bfc-174c0a9edf89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"6f9d1a69-13ea-11e5-9bfc-610608878af1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"6f9d1a6a-13ea-11e5-9bfc-f57071608465","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:175","type":"CtReturnImpl","sourcecode":"return java.lang.System.identityHashCode(java.lang.Object)"},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(java.lang.Object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)"},"status":-2},{"failures":[],"tindex":"6f9d417b-13ea-11e5-9bfc-6fd32c8f9159","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6f9d417c-13ea-11e5-9bfc-1d32891ee9e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[196,197,198,199,200,201,202,203,204],"tindex":"6f9d417d-13ea-11e5-9bfc-05c9e9f98d88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"6f9d417e-13ea-11e5-9bfc-3597718d975f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"6f9d417f-13ea-11e5-9bfc-93068f9a4fcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"6f9d4180-13ea-11e5-9bfc-eb650d8f1155","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6f9d6891-13ea-11e5-9bfc-09da271e4e3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,30,227,183,156,32,228,229,230,231,232,233,234,184,157,33,235,236,237,65,66,67,68,69,70,35,71,72,238,239,240,241,242,187,158,37,243,244,245,246,247,248,91,92,93,94,95,96,97,98,99,249,3,250,251,252,253,192,160,39,254,255,256,40,257,258,259,260,261,194,161,42,262,263,264],"tindex":"6f9d6892-13ea-11e5-9bfc-6fbc36e116e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[265,266,267,268,269,43,44,270,45,46,47,271,272,48,49,50,51,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289],"tindex":"6f9d6893-13ea-11e5-9bfc-7d2306b5e1ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"6f9d6894-13ea-11e5-9bfc-c555e766461c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:66","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"6f9d6895-13ea-11e5-9bfc-a7981b50e00e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6f9d6896-13ea-11e5-9bfc-af2b833744f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"6f9d6897-13ea-11e5-9bfc-3539aae7a2ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-2},{"failures":[],"tindex":"6f9d8fa8-13ea-11e5-9bfc-4da315210b46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"6f9d8fa9-13ea-11e5-9bfc-41b9da84a561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"6f9d8faa-13ea-11e5-9bfc-85e1bc4413c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":0},{"failures":[],"tindex":"6f9d8fab-13ea-11e5-9bfc-7fac652f873a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)"},"status":-2},{"failures":[129,131],"tindex":"6f9d8fac-13ea-11e5-9bfc-b1fd6b4e98ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":-1},{"failures":[290],"tindex":"6f9d8fad-13ea-11e5-9bfc-337fe1c44f8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"6f9d8fae-13ea-11e5-9bfc-8b3303400cd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"oldCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[227,32,234,33,261,42],"tindex":"6f9d8faf-13ea-11e5-9bfc-ad4d04ebcc2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"6f9d8fb0-13ea-11e5-9bfc-c5c8767a741e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[291],"tindex":"6f9db6c1-13ea-11e5-9bfc-ef83fa178f53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"6f9db6c2-13ea-11e5-9bfc-01dc94fdbb20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","this":"this","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"6f9db6c3-13ea-11e5-9bfc-ad6dd06e0445","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"6f9db6c4-13ea-11e5-9bfc-f770eb22c5a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[],"tindex":"6f9db6c5-13ea-11e5-9bfc-9ddb781af0f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"6f9db6c6-13ea-11e5-9bfc-7f3b8a246bff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[],"tindex":"6f9db6c7-13ea-11e5-9bfc-f399b5e5e971","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[],"tindex":"6f9db6c8-13ea-11e5-9bfc-afeba2aed531","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":0},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"tindex":"6f9dddd9-13ea-11e5-9bfc-a118be2183b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[296,324,334,337,338,341,342,345],"tindex":"6f9dddda-13ea-11e5-9bfc-f1feab502778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"6f9ddddb-13ea-11e5-9bfc-01e85b2ec060","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-2},{"failures":[389,15],"tindex":"6f9ddddc-13ea-11e5-9bfc-3506a2f05c9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6f9ddddd-13ea-11e5-9bfc-7fc604ca2938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"6f9dddde-13ea-11e5-9bfc-db8b78a07ac5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[296,320,324,331,332,337,341,343,344,345],"tindex":"6f9ddddf-13ea-11e5-9bfc-6d34084d56db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"6f9e04f0-13ea-11e5-9bfc-47c9a8d1ba1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:588","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"6f9e04f1-13ea-11e5-9bfc-8d00cc56089f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"6f9e04f2-13ea-11e5-9bfc-e51f581478a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[227,32,470,234,33,471,36,242,37,472,473,38,474,253,39,261,42,475],"tindex":"6f9e04f3-13ea-11e5-9bfc-87c191a91a89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"6f9e04f4-13ea-11e5-9bfc-413afa34652d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"6f9e04f5-13ea-11e5-9bfc-2560027c22f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"6f9e2c06-13ea-11e5-9bfc-fba01408f1ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6f9e2c07-13ea-11e5-9bfc-3367fb7c3243","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"6f9e2c08-13ea-11e5-9bfc-b7e60e56ec42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"6f9e2c09-13ea-11e5-9bfc-b9bb7806676d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":0},{"failures":[508,509,510,511],"tindex":"6f9e2c0a-13ea-11e5-9bfc-f9cd7d5b7593","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"6f9e2c0b-13ea-11e5-9bfc-c77a8327ce54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-2},{"failures":[],"tindex":"6f9e2c0c-13ea-11e5-9bfc-6b3c5caad51c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"6f9e2c0d-13ea-11e5-9bfc-1113a95d9ee7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"6f9e2c0e-13ea-11e5-9bfc-29165a28e85c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"6f9e2c0f-13ea-11e5-9bfc-29e2237b9f0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"6f9e5320-13ea-11e5-9bfc-6fb887d86e12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-2},{"failures":[162,163,164,165,166,167],"tindex":"6f9e5321-13ea-11e5-9bfc-29ba9365b43b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"offset","vDown":"vUp","delta":"delta","end2":"offset","this":"this","i":"d","end1":"offset","k":"start1","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[524,525,526,527,528,529,530,531,532,533,534,535],"tindex":"6f9e5322-13ea-11e5-9bfc-c31608b36812","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-1},{"failures":[536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555],"tindex":"6f9e5323-13ea-11e5-9bfc-45f15030e2ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[556,557,558,559,560,561,562],"tindex":"6f9e5324-13ea-11e5-9bfc-e135bc847302","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"6f9e5325-13ea-11e5-9bfc-19c437b35a7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:130","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(0, java.util.List<T>.size(), 0, java.util.List<T>.size(), org.apache.commons.collections4.sequence.EditScript<T>)"},"status":-2},{"failures":[],"tindex":"6f9e5326-13ea-11e5-9bfc-07f314e83288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[102,123,124,133,136,137,138,145,147],"tindex":"6f9e5327-13ea-11e5-9bfc-853a3d6aed51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"6f9e5328-13ea-11e5-9bfc-7f150b045fc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"6f9e5329-13ea-11e5-9bfc-a945030a0064","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"6f9e7a3a-13ea-11e5-9bfc-452facd4c9e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[563,564],"tindex":"6f9e7a3b-13ea-11e5-9bfc-755298fe3ca1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}