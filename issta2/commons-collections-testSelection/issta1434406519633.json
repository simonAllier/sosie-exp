{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":216,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":255,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":132,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":281,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":360,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":50,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":126,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":225,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":338,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":441,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":418,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":419,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":386,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":359,"org.apache.commons.collections4.CollectionUtilsTest.collect":345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":391,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":254,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":301,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":274,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":26,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":160,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":404,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":424,"org.apache.commons.collections4.CollectionUtilsTest.transform2":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":307,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":271,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":99,"org.apache.commons.collections4.ListUtilsTest.testEquals":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":232,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":293,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":240,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":37,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":101,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":13,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":415,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":287,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":59,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":163,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":407,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":304,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":16,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":457,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":176,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":44,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":285,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":167,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":22,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":389,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":12,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":15,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":341,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":454,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":372,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":230,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testReset":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":238,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":329,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":394,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":226,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":147,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":148,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":309,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":168,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":351,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":146,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":354,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":77,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":103,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":392,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":130,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":76,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testReset":246,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":272,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":88,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":137,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":448,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":248,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":151,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":89,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":236,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":25,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":433,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":450,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":334,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":347,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":425,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":312,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":268,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":190,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":276,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":282,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":210,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":324,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":214,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":420,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":432,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":365,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":266,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":399,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":332,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":192,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":348,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":201,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":472,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":352,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":402,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":193,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":470,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":92,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":290,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":393,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":300,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":28,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":48,"org.apache.commons.collections4.ListUtilsTest.testHashCode":342,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":164,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":327,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":29,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":400,"org.apache.commons.collections4.functors.AllPredicateTest.emptyArrayToGetInstance":446,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":24,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":267,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":257,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":229,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":247,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":449,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":383,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":306,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":426,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":142,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":460,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":188,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":297,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":269,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":263,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":34,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":317,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":463,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":8,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":318,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":158,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":335,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":211,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":174,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":447,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":228,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":458,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":84,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":473,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":118,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":231,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":384,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":381,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":124,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":349,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":19,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":474,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":114,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":113,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":286,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":109,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":350,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":112,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":111,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":106,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":108,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":371,"org.apache.commons.collections4.CollectionUtilsTest.isFull":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":315,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":310,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":178,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":265,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":133,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":434,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":406,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":251,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":120,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":435,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":431,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":395,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":138,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":184,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":275,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":368,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":422,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":416,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":363,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":429,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":299,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":79,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":303,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":280,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":245,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":430,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":169,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":302,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":213,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":291,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":367,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":443,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":149,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":396,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":313,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":452,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":362,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":380,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":67,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":377,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":252,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":83,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":305,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":72,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":459,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":408,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":336,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":128,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":283,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":316,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":121,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":288,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":411,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":436,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":413,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":437,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":127,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":466,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":183,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":414,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":61,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":445,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":465,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":243,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":467,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":468,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":122,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":227,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":135,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":314},"transformations":[{"failures":[0,1,2,3],"tindex":"02ad437b-13ac-11e5-813d-539d01b07b65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"02aeca1c-13ac-11e5-813d-b7b55e5ceab5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"02aef12d-13ac-11e5-813d-e598fea45dd2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"02af8d6e-13ac-11e5-813d-874f7fe61eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"02afb47f-13ac-11e5-813d-458e333bdeaf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"02afb480-13ac-11e5-813d-077f05abe64f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:275","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"02afb481-13ac-11e5-813d-976915defb53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"02afb482-13ac-11e5-813d-6b6bf288dc32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[4],"tindex":"02afb483-13ac-11e5-813d-1bcfc359b6b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"02afb484-13ac-11e5-813d-5b331445fe96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"02afb485-13ac-11e5-813d-c58fb7100b3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"left","previous":"left","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"02afda96-13ac-11e5-813d-8db575733251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"02afda97-13ac-11e5-813d-8b8fb23874c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"02afda98-13ac-11e5-813d-dd567a592dbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[],"tindex":"02afda99-13ac-11e5-813d-770f5dc87f69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[101],"tindex":"02b001aa-13ac-11e5-813d-c7d5b6fe062c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"02b001ab-13ac-11e5-813d-0bf5022a2919","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"02b001ac-13ac-11e5-813d-3f82ef8ee65e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"02b001ad-13ac-11e5-813d-11efc412bc30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:110","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.Class<? extends T> == null) {\n        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n    } \n    final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = java.lang.Class<? extends T>.getConstructor(java.lang.Class<?>[]);\n    return java.lang.reflect.Constructor<? extends T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n} catch (final java.lang.InstantiationException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"02b001ae-13ac-11e5-813d-f1320e9d4f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"02b001af-13ac-11e5-813d-a78b15ce673d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[143,144,145,146,147,148],"tindex":"02b028c0-13ac-11e5-813d-27338f8d94cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[149,150,151],"tindex":"02b028c1-13ac-11e5-813d-0b26bb9a6173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"02b028c2-13ac-11e5-813d-9139133b0e1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"02b028c3-13ac-11e5-813d-17ce1172658b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"02b028c4-13ac-11e5-813d-8797feb9a40b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[171,172],"tindex":"02b028c5-13ac-11e5-813d-7ff3be55ee7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1},{"failures":[173],"tindex":"02b04fd6-13ac-11e5-813d-c53c703c5d35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":-1},{"failures":[],"tindex":"02b04fd7-13ac-11e5-813d-a911b2925d5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"proposedCapacity","removeIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","currentIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"02b04fd8-13ac-11e5-813d-79dd744313d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"02b04fd9-13ac-11e5-813d-bd487b232c03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:231","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"02b04fda-13ac-11e5-813d-6581d3dc9480","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"maxElements","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":0},{"failures":[],"tindex":"02b04fdb-13ac-11e5-813d-2d5f4caec3c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,45,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"02b076ec-13ac-11e5-813d-8f32dfd14b74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key","entryValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[174],"tindex":"02b076ed-13ac-11e5-813d-c3030735c7d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"variableMap":{"entry":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:254","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-1},{"failures":[],"tindex":"02b076ee-13ac-11e5-813d-93b067feffa3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"a","larger":"a","smaller":"a","list2":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-2},{"failures":[175],"tindex":"02b076ef-13ac-11e5-813d-9541f3cc25b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[153,154,155,156,157,176,158,161,162,163,164,165,177,166,167,168,169],"tindex":"02b076f0-13ac-11e5-813d-29ad523836b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"nodeCount","newCapacity":"nodeCount","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[178,179,180,181,182],"tindex":"02b09e01-13ac-11e5-813d-5fd0783979e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:169","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion) {\n    case EQUAL :\n        boolean = int == 0;\n        break;\n    case GREATER :\n        boolean = int > 0;\n        break;\n    case LESS :\n        boolean = int < 0;\n        break;\n    case GREATER_OR_EQUAL :\n        boolean = int >= 0;\n        break;\n    case LESS_OR_EQUAL :\n        boolean = int <= 0;\n        break;\n    default :\n        throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));\n}"},"status":-1},{"failures":[],"tindex":"02b09e02-13ac-11e5-813d-bf8d3dcd0c8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:278","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.calculateHashCode(K[])"},"status":-2},{"failures":[3,183,184,185,186,187,188,189,190,191,192],"tindex":"02b09e03-13ac-11e5-813d-356e4d81e1f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-1},{"failures":[193,194,195,196,197,198,199,200,201,4,202,203,204,205,206,207,208,209,210,211,212],"tindex":"02b0ec24-13ac-11e5-813d-177704db1002","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[213,214,215,216,167,169,217,218,219,220,221,222,223,224],"tindex":"02b0ec25-13ac-11e5-813d-130c9f6a0911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"02b299d6-13ac-11e5-813d-a30b5349b0fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[244,245,246,247,248,249,250],"tindex":"02b2c0e7-13ac-11e5-813d-ef6ecfe76fa4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[251,252,253,254,255,228,256,257,258,229,230,231,232,259,233,260,261,234,262,263,264,265,266,267,268,269,236,270,271,272,237,238,239,240,273,241,274,275,242,276,277],"tindex":"02b2c0e8-13ac-11e5-813d-cbf34a8b28c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"02b2c0e9-13ac-11e5-813d-3f6ee5b72fb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"cacheSize","index":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":0},{"failures":[],"tindex":"02b2c0ea-13ac-11e5-813d-39b50ac3ab7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"02b2c0eb-13ac-11e5-813d-31a9becea41e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"02b2e7fc-13ac-11e5-813d-a5cf412a1433","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"02b2e7fd-13ac-11e5-813d-1f610224626a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":0},{"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"02b2e7fe-13ac-11e5-813d-57f9ec2905da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"02b2e7ff-13ac-11e5-813d-e18a83d4b534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-2},{"failures":[167,169,219,220,221,222,223,278,279,224],"tindex":"02b2e800-13ac-11e5-813d-913b85a77081","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[280,79,80,281,282,283,284,81,82,285,83,84,85,286,287,86,288,87,289,290,88,89,291,292,293,294,295,296,297,298,90,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"02b30f11-13ac-11e5-813d-770ddc3747fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"02b30f12-13ac-11e5-813d-098fbc162241","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"currentNode","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[311,7,312,313,314,315,16,316,31,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,40,338,339,340,341],"tindex":"02b86643-13ac-11e5-813d-9970d889160d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[342],"tindex":"02b86644-13ac-11e5-813d-cd60990557a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:288","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[179],"tindex":"02b86645-13ac-11e5-813d-65266b40d437","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:177","type":"CtAssignmentImpl","sourcecode":"boolean = int < 0"},"status":-1},{"failures":[214,215,216,167,169,220,221,222,223,278,279,224],"tindex":"02b86646-13ac-11e5-813d-1f10301b584d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","rightChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[343,344,345],"tindex":"02b88d57-13ac-11e5-813d-f34b477d46ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[],"tindex":"02b88d58-13ac-11e5-813d-c95156557b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"02b88d59-13ac-11e5-813d-150c157509c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[346],"tindex":"02b88d5a-13ac-11e5-813d-6143705698cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:55","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1},{"failures":[347,348,349,350,351,352,353,354,355,356],"tindex":"02b88d5b-13ac-11e5-813d-2749d68d4c4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[357],"tindex":"02b88d5c-13ac-11e5-813d-6782421040a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-1},{"failures":[],"tindex":"02b88d5d-13ac-11e5-813d-9d8d18ae730c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"02b88d5e-13ac-11e5-813d-cb2d58feb001","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"02b88d5f-13ac-11e5-813d-f16bda4ff462","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"newCapacity","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[153,154,155,156,157,358,158,161,162,359,163,164,165,360,166,167,168,169,361],"tindex":"02b88d60-13ac-11e5-813d-2f22234c5b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[362,363,364,365,366,367,368,369,370,371,372,373,193,374,375,376,377,378,379,380,194,195,198,199,200,201,381,382,383,384,385,386],"tindex":"02b8b471-13ac-11e5-813d-f1d5d030bb42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[387,388,389],"tindex":"02b8b472-13ac-11e5-813d-e304c16a24c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:430","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"02b8b473-13ac-11e5-813d-b722080c2e7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[390],"tindex":"02b8b474-13ac-11e5-813d-21e07bfd06f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-1},{"failures":[],"tindex":"02b8b475-13ac-11e5-813d-657adbb0b0ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:135","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[391],"tindex":"02b8b476-13ac-11e5-813d-cbb891c5e045","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll2","list2":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[392,347,393,394,348,395,396,397,398,349,399,400,350,351,401,402,403,404,352,353,405,406,354,355,407,408,409,356,410],"tindex":"02b8b477-13ac-11e5-813d-35c6fc43175e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"uniqueSet","subSet":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"02b9ecf8-13ac-11e5-813d-2d78939b2eb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"02b9ecf9-13ac-11e5-813d-c3354448cc6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"02b9ecfa-13ac-11e5-813d-590dd1317c71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"variableMap":{"nextObjectSet":"modified","this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[423,424,425,426,427],"tindex":"02bafe6b-13ac-11e5-813d-d715a2c63f37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[428,429,430,431,1,432,433,2,434,183,435],"tindex":"02bafe6c-13ac-11e5-813d-93c4ff487138","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[436,411,412,437,413,414,415,438,439,416,417,440,101,441,418,419,442,443,420,444,445,445,446,447,447,448,449,421,422,450,451,452,453],"tindex":"02bafe6d-13ac-11e5-813d-9b40707a89a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"02bafe6e-13ac-11e5-813d-c7b52bbfe748","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node","replacement":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"02bafe6f-13ac-11e5-813d-a1eacf667b6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[454,455],"tindex":"02bafe70-13ac-11e5-813d-93b954c66136","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:207","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-1},{"failures":[456,457,173,458],"tindex":"02bafe71-13ac-11e5-813d-1bbd581881b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[459,460],"tindex":"02bafe72-13ac-11e5-813d-a9a763cf8a92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"02bb2583-13ac-11e5-813d-cfd5a593ba68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"02bb2584-13ac-11e5-813d-25e8c0663c63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[473,474],"tindex":"02bb2585-13ac-11e5-813d-a584dfd855e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"variableMap":{"a":"inputCollection","b":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"02bb2586-13ac-11e5-813d-235b817b8c56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FalsePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate))"},"variableMap":{"org.apache.commons.collections4.functors.FalsePredicate.INSTANCE":"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate))"},"status":-2},{"failures":[49,52,94,97],"tindex":"02bb2587-13ac-11e5-813d-db7dcee57497","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"02bb2588-13ac-11e5-813d-5350fa85ce1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"02bb2589-13ac-11e5-813d-f3e75015d4da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"02bb258a-13ac-11e5-813d-b53a5c5b5852","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"02bb258b-13ac-11e5-813d-472c546b73b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":0},{"failures":[178,179,180,181,182],"tindex":"02bb4c9c-13ac-11e5-813d-d79c35bafae4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:169","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion) {\n    case EQUAL :\n        boolean = int == 0;\n        break;\n    case GREATER :\n        boolean = int > 0;\n        break;\n    case LESS :\n        boolean = int < 0;\n        break;\n    case GREATER_OR_EQUAL :\n        boolean = int >= 0;\n        break;\n    case LESS_OR_EQUAL :\n        boolean = int <= 0;\n        break;\n    default :\n        throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}