{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":180,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":941,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":774,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":680,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":703,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":981,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":452,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":732,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":733,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":1013,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":55,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":642,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":738,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":139,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":932,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":766,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":367,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":685,"org.apache.commons.collections4.CollectionUtilsTest.get":717,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":810,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":1050,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":34,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":129,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":456,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":658,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":929,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":494,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":821,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":960,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":177,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":789,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":672,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":975,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":572,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":948,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":543,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":611,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":1008,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":135,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":809,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":613,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":945,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":273,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":823,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":477,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":381,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":89,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":375,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":479,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":729,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":916,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":142,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":302,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":228,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":739,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":217,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":243,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":330,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":374,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":441,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":748,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":569,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":405,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":238,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":881,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":618,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":322,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":1005,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":484,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":930,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":106,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":788,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":861,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":459,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":576,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":895,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":520,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":841,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":1000,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":801,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":640,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":924,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":963,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":160,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":103,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":635,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":846,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":511,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":164,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":395,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":560,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":360,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":552,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":561,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":258,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":575,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":608,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":936,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":542,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":864,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":593,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":753,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":833,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":999,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":662,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":99,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":119,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":327,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":980,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":438,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":679,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":917,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":346,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":313,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":918,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":334,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":410,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":499,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":706,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":366,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":453,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":398,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":806,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":507,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":614,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":839,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":684,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":878,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":1019,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":1017,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":26,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":607,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":310,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":858,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":566,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":934,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":401,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":307,"org.apache.commons.collections4.CollectionUtilsTest.get1":718,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":323,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":150,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":519,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":1046,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":977,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":845,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":940,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":838,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":855,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":448,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":647,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":952,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":865,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":480,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":505,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":994,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":990,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":736,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":1058,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":269,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":764,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":351,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":254,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":623,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":429,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":559,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":719,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":807,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":908,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":1055,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":551,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":188,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":871,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":340,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":418,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":877,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":915,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":267,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":643,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":592,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":928,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":972,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":808,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":612,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":115,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":219,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":817,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":1040,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":622,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":755,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":756,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":875,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":754,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":424,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":181,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":785,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":419,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":536,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":804,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":329,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":498,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":276,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":1033,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":714,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":585,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":876,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":889,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":148,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":891,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":890,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":389,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":295,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":163,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":1023,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":1031,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":1051,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":587,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":954,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":1043,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":866,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":379,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":826,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":337,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":912,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":506,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":987,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":515,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":868,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":416,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":852,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":1018,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":156,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":633,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":237,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":508,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":897,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":426,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":317,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":926,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":311,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":695,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":752,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":377,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":750,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":894,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":907,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":108,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":797,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":830,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":1016,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":668,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":879,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":959,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":964,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":113,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":800,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":1001,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":478,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":671,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":701,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":933,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":825,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":694,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":693,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":690,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":689,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":692,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":691,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":688,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":687,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":490,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":988,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":751,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":836,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":919,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":818,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":352,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":699,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":185,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":504,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":609,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":935,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":53,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":50,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":600,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":724,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":863,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":943,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":444,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":425,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":812,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":768,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":762,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":605,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":910,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":348,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":118,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":1052,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":581,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":962,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":1039,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":578,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":906,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":547,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":837,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":946,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":761,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":663,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":958,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":414,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":982,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":284,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":857,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":843,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":716,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":1038,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":107,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":133,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":957,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":961,"org.apache.commons.collections4.map.LRUMapTest.testLRU":178,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":546,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":433,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":485,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":308,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":606,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":965,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":920,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":921,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":705,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":922,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":904,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":802,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":369,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":503,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":971,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":553,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":168,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":621,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":902,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":376,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":819,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":458,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":75,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":704,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":194,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":955,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":573,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":654,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":747,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":984,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":215,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":1034,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":530,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":660,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":937,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":811,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":355,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":710,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":1042,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":827,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":913,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":708,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":742,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":1014,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":250,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":707,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":862,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1030,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":1029,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":905,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":644,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":790,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":989,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":814,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":502,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":887,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":537,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":500,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":743,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":884,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":278,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":1015,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":61,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":434,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":805,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":869,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":549,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":541,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":911,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":339,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":450,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":282,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":616,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":968,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":1020,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":343,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":556,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":364,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":854,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":531,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":1036,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":966,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":325,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":896,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":393,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":997,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":686,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":46,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":464,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":91,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":471,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":65,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":550,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":770,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":402,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":76,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":615,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":96,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":132,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":1041,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":781,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":991,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":305,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":212,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":565,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":816,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":345,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":595,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":787,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":431,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":601,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":627,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":1009,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":534,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":799,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":776,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":859,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":486,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":1006,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":265,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":300,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":290,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":1003,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":293,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":179,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":314,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":406,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":25,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":682,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":979,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":590,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":71,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":824,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":43,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":483,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":588,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":324,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":914,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":923,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":332,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":427,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":1002,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":909,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":1007,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":1054,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":548,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":624,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":758,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":759,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":803,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":205,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":820,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":744,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":1048,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":856,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":359,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":974,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":380,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":757,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":938,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":603,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":421,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":538,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":31,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":457,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":473,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":420,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":1053,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":675,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":554,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":886,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":712,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":1025,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":853,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":873,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":956,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":371,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":197,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":828,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":527,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":277,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":698,"org.apache.commons.collections4.ListUtilsTest.testSubtract":630,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":648,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":639,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":501,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":629,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":619,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":870,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":1037,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":763,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":779,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":141,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":741,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":664,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":533,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":316,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":777,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":927,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":570,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":481,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":341,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":304,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":882,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":315,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":437,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":892,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":586,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":883,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":512,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_remove":645,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":950,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":953,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":1028,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":722,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":172,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":186,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":734,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":851,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":231,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":771,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":901,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":976,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":681,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":1035,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":696,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":899,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":21,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":636,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":773,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":885,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":318,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":336,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":558,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":951,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":436,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":79,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":1004,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":167,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":72,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":526,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":495,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":715,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":931,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":888,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":796,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":37,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":634,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":574,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":740,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":280,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":602,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":262,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":996,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":476,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":83,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":665,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":571,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":391,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":274,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":157,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":272,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":874,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":196,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":221,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":850,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":1056,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":292,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":711,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":370,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":435,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":583,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":791,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":632,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":247,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":735,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":769,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":925,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":978,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":126,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":650,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":786,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":1032,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":173,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":793,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":488,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":723,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":489,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":1011,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":281,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":683,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":428,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":462,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":567,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":651,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":513,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":468,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":767,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":970,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":993,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":266,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":358,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":328,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":822,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":509,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":589,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":577,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":568,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":967,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":983,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":872,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":517,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":721,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":408,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":373,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":949,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":447,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":299,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":995,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":772,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":326,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":469,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":467,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":516,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":1021,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":1010,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":297,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":1044,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":985,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":110,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":604,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":338,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":835,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":702,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":252,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":392,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":844,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":27,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":677,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":1047,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":383,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":709,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1027,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":944,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":460,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":378,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":798,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":487,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":95,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":236,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":415,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":409,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":514,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":973,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":454,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":423,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":1059,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":472,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":969,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":528,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":713,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":201,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":746,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":1045,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":730,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":731,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":523,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":496,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":220,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":829,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":432,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":84,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":782,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":784,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":584,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":783,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":98,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":131,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":848,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":813,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":451,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":387,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":628,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":357,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":893,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":697,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":867,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":947,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":669,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":347,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":470,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":145,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":1026,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":122,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":123,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":385,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":656,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":255,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":529,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":765,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":792,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":1049,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":312,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":114,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":540,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":259,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":903,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":678,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":80,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":81,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":82,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":737,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":942,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":518,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":251,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":1022,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":1057,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":260,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":832,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":102,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":831,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":700,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":112,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":725,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":0,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":726,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":175,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":780,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":794,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":749,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":795,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":840,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":1024,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":834,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":430,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":860,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":847,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":992,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":998,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":174,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":727,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":368,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":309,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":728,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":1012,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":92,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":898,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":54,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":214,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":288,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":475,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":986,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":564,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":939,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":417,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":532,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":298,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":66},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"da6e8830-13c5-11e5-a667-8bc0bdff74f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"da6e8831-13c5-11e5-a667-85843db89da5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[6,7],"tindex":"da6eaf42-13c5-11e5-a667-67a0f7f5cc9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[8,9,10,11,12],"tindex":"da6eaf43-13c5-11e5-a667-679149ca7dcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"da6eaf44-13c5-11e5-a667-4bcc79ffdd51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[57,58,59,60,61,62,63],"tindex":"da6eaf45-13c5-11e5-a667-9bed2b6af156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"da6ed656-13c5-11e5-a667-c7e0f49e75e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[],"tindex":"da6ed657-13c5-11e5-a667-4b81bb85bb7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"da6ed658-13c5-11e5-a667-d7323eed5390","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[],"tindex":"da6ed659-13c5-11e5-a667-c5222f70cdc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"da6ed65a-13c5-11e5-a667-317d958d45bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"da6efd6b-13c5-11e5-a667-1d88b90c6312","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[],"tindex":"da6efd6c-13c5-11e5-a667-d35f786530ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"nCopies","cacheSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>.getBag().add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E), int)"},"status":-2},{"failures":[],"tindex":"da6efd6d-13c5-11e5-a667-bd744b14af60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"da6efd6e-13c5-11e5-a667-4ff7c1788e32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[64,65,66,67,68,69,70,71],"tindex":"da6f247f-13c5-11e5-a667-475602f265ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[],"tindex":"da6f4b90-13c5-11e5-a667-1146ef3012cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"da6f4b91-13c5-11e5-a667-b19230a04d9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"da6f4b92-13c5-11e5-a667-1d57848a0468","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"da6f72a3-13c5-11e5-a667-dfe84bf78132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[],"tindex":"da6f72a4-13c5-11e5-a667-b93e2d1fe185","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[72],"tindex":"da6f72a5-13c5-11e5-a667-f54fe6f7a174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:826","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        int++;\n    } \n}"},"status":-1},{"failures":[62],"tindex":"da6f72a6-13c5-11e5-a667-3173f7d513e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[73],"tindex":"da6f72a7-13c5-11e5-a667-6f80e42d289b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"da6f72a8-13c5-11e5-a667-1f94406bdd2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"da6f72a9-13c5-11e5-a667-c70138eb616c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"da6f72aa-13c5-11e5-a667-c769ec13e3a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"da6f99bb-13c5-11e5-a667-d3bb3d74825d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":0},{"failures":[74,75,76,77,78,79],"tindex":"da6f99bc-13c5-11e5-a667-1762d4f7fc97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"da6f99bd-13c5-11e5-a667-5170e3180e8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"da6f99be-13c5-11e5-a667-8f6ea0ebecdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,71,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"da6f99bf-13c5-11e5-a667-1961890e1d07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"da6f99c0-13c5-11e5-a667-8f1e20018007","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()"},"status":0},{"failures":[],"tindex":"da6f99c1-13c5-11e5-a667-9b4f23071f36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1233","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"da6f99c2-13c5-11e5-a667-47d9967815a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"value","newCapacity":"value","proposedCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,13,16,19,21,22,23,24,26,27,29,31,32,33,34,35,36,37,38,42,43,45,46,47,48,49,50,51,52,55],"tindex":"da6fc0d3-13c5-11e5-a667-3db2c9ccad7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[174,175,176,177,178],"tindex":"da6fc0d4-13c5-11e5-a667-f30a83934ee2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)"},"variableMap":{"entry":"reuse","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"da6fc0d5-13c5-11e5-a667-558620f71393","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1377","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[179,180,8,181,182,183,184,185,9,186,187,188,189,190,10,191,192,193,194,195,196,197,198,199,200,201,202,203,11,204,205,12,206,207,208,209,210,211,212,213],"tindex":"da6fc0d6-13c5-11e5-a667-4736a29223f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[214,215,76,77,78,79],"tindex":"da6fc0d7-13c5-11e5-a667-8fa5f662d896","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-1},{"failures":[98,136,137],"tindex":"da6fc0d8-13c5-11e5-a667-c36c6472bf53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"da6fc0d9-13c5-11e5-a667-2b4856fa89bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"this","newSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"da6fe7ea-13c5-11e5-a667-01fe9b008543","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[],"tindex":"da6fe7eb-13c5-11e5-a667-f1c3c3fb81db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"da6fe7ec-13c5-11e5-a667-299cc05d01b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224],"tindex":"da6fe7ed-13c5-11e5-a667-b55fab27c168","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[225,226,227,228,229,230,64,231,232,233,234,235,236,237,238,239,65,240,241,242,243,175,244,245,176,246,247,248,249,250,66,251,252,253,254,255,256,257,258,259,260,261,67,262,263,264,265,266,267,268,269,270,69,271,272,273,274,275,276,277,278,279,70,280,281,282,98,99,104,105,107,108,109,71,113,116,117,126,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300],"tindex":"da6fe7ee-13c5-11e5-a667-f19d1423b8d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"key","o2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[301,302,303,304,305,306,307,308,309,310,311,312,313,314],"tindex":"da6fe7ef-13c5-11e5-a667-35cef37be6c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"da6fe7f0-13c5-11e5-a667-27a367b560fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"proposedCapacity","maxElements":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-2},{"failures":[],"tindex":"da70f961-13c5-11e5-a667-c30601e060c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"root","parent":"h","left":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"da70f962-13c5-11e5-a667-81f17d0c35c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638],"tindex":"da70f963-13c5-11e5-a667-57bf236b3500","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[639,640],"tindex":"da70f964-13c5-11e5-a667-3fb5e5a88308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>.execute(E)"},"status":-1},{"failures":[],"tindex":"da70f965-13c5-11e5-a667-1ba0204be050","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":0},{"failures":[57,58,59,60,641,61,642,643,644,62,63],"tindex":"da70f966-13c5-11e5-a667-53fa5c4c9e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[86,645,90,92,96],"tindex":"da70f967-13c5-11e5-a667-3d8a85eeaa8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[],"tindex":"da712078-13c5-11e5-a667-112c9c76d750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"da712079-13c5-11e5-a667-9381106bd245","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[230,239,250,261,646,270,279,109],"tindex":"da71207a-13c5-11e5-a667-193e4009627f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"da71207b-13c5-11e5-a667-c5e51d37fa96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"da71207c-13c5-11e5-a667-ff695e5b52e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[647,648,649,650,651,652,322,376,497,547,653,654,655,656,657,658,659,660,661],"tindex":"da71207d-13c5-11e5-a667-494c4e32179f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[1,0,2,3,4,5],"tindex":"da71207e-13c5-11e5-a667-2972aadfafc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:94","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"variableMap":{"pendingDeletions":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[662],"tindex":"da71207f-13c5-11e5-a667-fb7e3d2a6023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"key","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[663,664,665,666],"tindex":"da712080-13c5-11e5-a667-fde079c2c359","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"da712081-13c5-11e5-a667-dd4307272060","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-2},{"failures":[667,668],"tindex":"da714792-13c5-11e5-a667-9f3c2d4e8aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"da714793-13c5-11e5-a667-a3880add81a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"da714794-13c5-11e5-a667-2fd690b6da34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"da714795-13c5-11e5-a667-f9480ffcb670","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684],"tindex":"da714796-13c5-11e5-a667-7fc3782c97cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"replacement","to":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715],"tindex":"da714797-13c5-11e5-a667-a56e8038d875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[716,717,718,719,720,721,722],"tindex":"da714798-13c5-11e5-a667-efdd2bf1eef4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"da716ea9-13c5-11e5-a667-1520f7ee1c57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[723,724,725,726,727,728,729,730,731,732,733,734],"tindex":"da716eaa-13c5-11e5-a667-7b200d733629","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[735],"tindex":"da716eab-13c5-11e5-a667-25d6006fcfc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"da716eac-13c5-11e5-a667-b9da713a1c42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[736,737,738,739,740,741,742,743,673,744,674,745,746,747,748,749,750,751,752],"tindex":"da716ead-13c5-11e5-a667-3d4ea04a63d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[179,182,183,185,9,186,187,188,189,10,193,194,12,210],"tindex":"da716eae-13c5-11e5-a667-d1aee25d0b13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:280","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V"},"status":-1},{"failures":[],"tindex":"da716eaf-13c5-11e5-a667-fb73e69e6a9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[97,753,754,755,756,757,758,759,113,116],"tindex":"da716eb0-13c5-11e5-a667-0d78fa275027","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:219","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n}"},"status":-1},{"failures":[760,761,762,763],"tindex":"da716eb1-13c5-11e5-a667-79ce36053921","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[],"tindex":"da716eb2-13c5-11e5-a667-b930adc11ebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"variableMap":{"indexOfLargestMobileInteger":"h","keys":"key2","largestKey":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"da7195c3-13c5-11e5-a667-59c5635eccdb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-2},{"failures":[764,765,766,667,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,301,302,303,304,305,787,306,307,788,308,309,310,311,789,790,791,792,793,794,795,796,797,798,668,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,312,815,816,313,817,818,819,314,820],"tindex":"da7195c4-13c5-11e5-a667-c3e8e4d65867","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[821,822,823,824,825,826,827,828,829,830,831,832],"tindex":"da7195c5-13c5-11e5-a667-33be4485637f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[833,154,27],"tindex":"da7195c6-13c5-11e5-a667-2d5843f71ff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[],"tindex":"da7195c7-13c5-11e5-a667-bba709d7ccde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"proposedCapacity","currentIndex":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"da7195c8-13c5-11e5-a667-bb66d04de019","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"da7195c9-13c5-11e5-a667-f3c38875dc8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"node","rightChild":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[834,835],"tindex":"da7195ca-13c5-11e5-a667-31ddcd2e6a7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[836,837,838,839,149,150,151,152,153,154,155,156,840,841,842,163,164,843,165,166,167,168,169,170,171,172,173,19,21,22,23,24,26,27,29,31,38,844,40,41,42,43,44,45,46,47,48,49,50,51,52,55],"tindex":"da71bcdb-13c5-11e5-a667-45a19dabf4d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"da71bcdc-13c5-11e5-a667-2f360940bc33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"da71bcdd-13c5-11e5-a667-0dba7a35c184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[],"tindex":"da71bcde-13c5-11e5-a667-e1923b57e7f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022],"tindex":"da71bcdf-13c5-11e5-a667-89d1a07fc32c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[764,765,766,667,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,301,302,303,304,305,787,306,307,788,308,309,310,311,789,790,791,792,793,794,795,796,797,798,668,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,312,815,816,313,817,818,819,314,820],"tindex":"da71bce0-13c5-11e5-a667-0b0c7994ebe2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"da71bce1-13c5-11e5-a667-4b7a0aa3c7c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[147,1023,1024,139,1025,833,140,1026,1027,1028,1029,1030,1031,1032,836,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,141,1043,1044,142,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,143,1057,144,145,146,1058,1059,841,842,163,14,39,40,41,42],"tindex":"da71bce2-13c5-11e5-a667-cf1cff89f83a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:325","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"da71e3f3-13c5-11e5-a667-db0412e51ab9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}