{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":500,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":301,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":412,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":437,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":513,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":474,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":368,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":122,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":417,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":341,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":292,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":77,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":240,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":78,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":158,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":339,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":372,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":239,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":180,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":137,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":156,"org.apache.commons.collections4.CollectionUtilsTest.get":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":300,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":506,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":507,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":321,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":261,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":357,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":359,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":127,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":356,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":521,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":131,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":370,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":414,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":323,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":185,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":482,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":528,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":103,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":255,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":283,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":98,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":547,"org.apache.commons.collections4.CollectionUtilsTest.intersection":238,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":360,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":61,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":366,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":488,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":523,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":440,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":540,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":318,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":411,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":183,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":42,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":393,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":420,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":8,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":509,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":176,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":349,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":49,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":519,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":473,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":472,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":333,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":496,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":469,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":470,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":224,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":35,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":154,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":309,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":245,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":324,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":281,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":130,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":295,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":315,"org.apache.commons.collections4.CollectionUtilsTest.union":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":189,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":115,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":197,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":335,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":205,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":226,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":386,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":486,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":211,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":252,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":181,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":187,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":380,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":175,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":209,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":427,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":169,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":108,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":37,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":155,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":138,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":390,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":274,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":385,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":160,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":422,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":367,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":70,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":328,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":503,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":522,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":347,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":157,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":297,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":402,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":398,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":450,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":62,"org.apache.commons.collections4.IteratorUtilsTest.testToList":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":285,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":34,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":493,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":483,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":50,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":229,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":253,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":408,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":29,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":312,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":442,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":3,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":397,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":362,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":401,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":207,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":208,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":135,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":206,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":501,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":113,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":246,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":487,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":306,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":543,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":269,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":303,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":305,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":524,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":413,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":460,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":326,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":458,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":96,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":120,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":527,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":15,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":228,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":344,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":159,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":400,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":214,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":457,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":320,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":230,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":43,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":415,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":431,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":459,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":330,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":218,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":407,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":322,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":392,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":277,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":310,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":495,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":296,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":186,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":146,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":508,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":258,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":375,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":263,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":424,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":44,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":405,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":379,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":0,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":497,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":100,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":455,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":260,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":491,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":510,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":388,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":307,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":541,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":287,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":36,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":153,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":329,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":443,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":545,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":399,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":336,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":65,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":203,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":202,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":425,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":421,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":171,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":198,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":86,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":499,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":436,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":68,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":384,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":391,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":59,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":447,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":56,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":381,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":534,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":316,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":64,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":248,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":249,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":275,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":389,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":17,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":151,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":352,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":529,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":515,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":332,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":331,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":265,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":217,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":4,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":243,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":416,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":313,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":227,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":118,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":182,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":346,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":511,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":267,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":350,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":536,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":489,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":291,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":467,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":111,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":532,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":162,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":358},"transformations":[{"failures":[],"tindex":"6b109f12-139e-11e5-bf1e-d50abc971a28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"6b10c623-139e-11e5-bf1e-d9ba38120eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","left":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"6b10ed34-139e-11e5-bf1e-85b4358ec38f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[0,1,2],"tindex":"6b10ed35-139e-11e5-bf1e-fb6921d5c80e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[],"tindex":"6b10ed36-139e-11e5-bf1e-1d0ff8adb005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"variableMap":{"coll":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"6b10ed37-139e-11e5-bf1e-3d7f691cebec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"6b10ed38-139e-11e5-bf1e-536bc2ac8dd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"parent","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"6b111449-139e-11e5-bf1e-3169860c75a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"6b11144a-139e-11e5-bf1e-4fa80f0fe8e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"6b11144b-139e-11e5-bf1e-ffc701a66bce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1},{"failures":[8],"tindex":"6b11144c-139e-11e5-bf1e-5d02701c6577","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"6b11144d-139e-11e5-bf1e-bfb6f531bf72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"6b113b5e-139e-11e5-bf1e-c9fa7f7d2092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[],"tindex":"6b113b5f-139e-11e5-bf1e-01fc9e0931cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"6b113b60-139e-11e5-bf1e-0113128a7fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"6b113b61-139e-11e5-bf1e-5918080fc553","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[73,74],"tindex":"6b113b62-139e-11e5-bf1e-a10c0be64d0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-1},{"failures":[75,76,77,78,79,80],"tindex":"6b116273-139e-11e5-bf1e-6dd36ec214a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"6b116274-139e-11e5-bf1e-9921928b51dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:57","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[],"tindex":"6b116275-139e-11e5-bf1e-df8b802c7f77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"6b116276-139e-11e5-bf1e-d91e5f11c8ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"6b118987-139e-11e5-bf1e-fd4d1682d312","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"6b1225c8-139e-11e5-bf1e-ffb2817cd6fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[196,197,198],"tindex":"6b1225c9-139e-11e5-bf1e-c9694fa71378","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[],"tindex":"6b124cda-139e-11e5-bf1e-697fc1c1e2c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[199,200,201],"tindex":"6b124cdb-139e-11e5-bf1e-67e2c2ed0a07","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"6b124cdc-139e-11e5-bf1e-ffc9dc94b18f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"6b124cdd-139e-11e5-bf1e-63a88fa18972","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":0},{"failures":[],"tindex":"6b124cde-139e-11e5-bf1e-01e34453e29b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":0},{"failures":[202,203,204,205,206,207,208,209,210,211,212,25,213,214],"tindex":"6b124cdf-139e-11e5-bf1e-d5a00cee8b96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"6b124ce0-139e-11e5-bf1e-f1b32471eefe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"6b124ce1-139e-11e5-bf1e-112270db58bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[215,216,217,218,219,220],"tindex":"6b124ce2-139e-11e5-bf1e-51a9fce34449","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"6b1273f3-139e-11e5-bf1e-810411ec08db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"6b1273f4-139e-11e5-bf1e-d5eb93218c31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"6b1273f5-139e-11e5-bf1e-e74b533b77ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"6b1273f6-139e-11e5-bf1e-af32a4a540be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[221],"tindex":"6b1273f7-139e-11e5-bf1e-8fa731d3596f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"6b1273f8-139e-11e5-bf1e-c7d3469e8b95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"6b1273f9-139e-11e5-bf1e-3d25ac6937ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[222,223],"tindex":"6b1273fa-139e-11e5-bf1e-bbd658433207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1272","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1262","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object))"},"status":-1},{"failures":[],"tindex":"6b1273fb-139e-11e5-bf1e-430ebc343e02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:207","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":0},{"failures":[],"tindex":"6b1273fc-139e-11e5-bf1e-53e44a266863","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[],"tindex":"6b129b0d-139e-11e5-bf1e-95b1229675c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233,234,235,222,236,237,238,239,240,241],"tindex":"6b129b0e-139e-11e5-bf1e-8d14b01d5e10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[242,243,244,245,246,247],"tindex":"6b129b0f-139e-11e5-bf1e-77f17746c7ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"end1","n":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"6b129b10-139e-11e5-bf1e-b1545e633392","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[32,33,34,50,57,58,64,68,75,76,77,78,79,80],"tindex":"6b129b11-139e-11e5-bf1e-9d0168fe84b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"6b129b12-139e-11e5-bf1e-23674e1258b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"6b129b13-139e-11e5-bf1e-d539f1c06c1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[],"tindex":"6b129b14-139e-11e5-bf1e-3722445fa64e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"6b129b15-139e-11e5-bf1e-a1283f1393b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"value","defaultValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[102,107,117,129,134,144,157,170,175,186],"tindex":"6b12c226-139e-11e5-bf1e-c1e3d3e52c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"6b12c227-139e-11e5-bf1e-1f58477a51ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"6b12c228-139e-11e5-bf1e-d9f4954c05ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:431","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"current":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[261,262],"tindex":"6b12c229-139e-11e5-bf1e-9d3db8813f38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"size","bitIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-1},{"failures":[27,28,30,31,32,33,34,36,37,39,40,41,42,43,44,46,49,50,54,55,57,58,59,63,64,68,72],"tindex":"6b12c22a-139e-11e5-bf1e-ed5bb06ea791","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[263,264,265,266,267,268,269,270,271,272,196,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,198,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"6b12c22b-139e-11e5-bf1e-4184f53723a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"6b12c22c-139e-11e5-bf1e-211d1a7245ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:67","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"6b12e93d-139e-11e5-bf1e-aba6fe39e489","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"6b12e93e-139e-11e5-bf1e-07b8b5e44e66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[321,322,323,324,325,326,327,328,329,330,331,332],"tindex":"6b12e93f-139e-11e5-bf1e-6f546fe98af9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[221,333,334,335],"tindex":"6b12e940-139e-11e5-bf1e-a782e0afa2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"index","index":"index","beyond":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,76,352,353,354],"tindex":"6b12e941-139e-11e5-bf1e-01739c9f181e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"node","parent":"node","left":"child","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[196,197,198],"tindex":"6b12e942-139e-11e5-bf1e-cdf495294f9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"variableMap":{"node":"header","this":"this","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[],"tindex":"6b131053-139e-11e5-bf1e-5d5b77946d89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6b131054-139e-11e5-bf1e-15fff6bfe395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"variableMap":{"total":"total","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":0},{"failures":[],"tindex":"6b131055-139e-11e5-bf1e-7d873a7331a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[],"tindex":"6b131056-139e-11e5-bf1e-c50a7197c85c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"siblingNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"6b131057-139e-11e5-bf1e-83f2215bbd6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"6b131058-139e-11e5-bf1e-e11c16ddd0a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[355],"tindex":"6b131059-139e-11e5-bf1e-9f8a7c8c4210","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6b13105a-139e-11e5-bf1e-798d66037ba7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"6b13376b-139e-11e5-bf1e-2fa1bfaed780","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[50,57,58,63,69,70,76,77,78,352,353,354],"tindex":"6b13376c-139e-11e5-bf1e-ef715dc89e0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"6b13376d-139e-11e5-bf1e-77ede07495b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[],"tindex":"6b13376e-139e-11e5-bf1e-67c044282b91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6b13376f-139e-11e5-bf1e-4b49105814b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-2},{"failures":[356,357,358,359,360,361,362,363],"tindex":"6b133770-139e-11e5-bf1e-e5681360e3f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[],"tindex":"6b133771-139e-11e5-bf1e-53e3c1b1244e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"6b133772-139e-11e5-bf1e-2bedc0e542ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,293,393,394],"tindex":"6b133773-139e-11e5-bf1e-855c7155889c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[85,86,90,92,395,396,94],"tindex":"6b135e84-139e-11e5-bf1e-0dc474785365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"6b135e85-139e-11e5-bf1e-0b4a2cbf4b50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":0},{"failures":[397,398],"tindex":"6b135e86-139e-11e5-bf1e-df9bd546ccbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[36,37,39,40,41,44,46,49,50,399,400,401,402,403,358,404,405,406,407,408,409,410,411,359,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"tindex":"6b135e87-139e-11e5-bf1e-e5a915ab14c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[242,243,244,245,246,247],"tindex":"6b135e88-139e-11e5-bf1e-a5c0bf709eac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[27,30,36,37,39,40,41,43,44,46,49,50,63,69,70,72],"tindex":"6b135e89-139e-11e5-bf1e-b18b24ccf6f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"current","start":"left","this":"this","predecessor":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[96,151],"tindex":"6b135e8a-139e-11e5-bf1e-97a4441f839a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[446,447,448,449,450,451,452,453,454,455,456,17,457,458,459,361,460,18,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,19,477,478,479,480,481,482,483,484],"tindex":"6b13859b-139e-11e5-bf1e-23ac8138089d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[485,486,487,488,9,489,490,356,10,491,492,493,494,495,496,497,11,498,499,357,12,500,501,502,399,400,503,401,402,403,504,358,404,405,406,505,407,408,506,409,410,411,507,359,412,413,414,508,509,510,511,512,14,513,514,360,15,515,516,517,453,454,455,456,17,457,458,361,18,463,464,518,519,520,521,522,21,523,524,362,22,525,526,527,528,529,212,24,530,363,25,213,531],"tindex":"6b13859c-139e-11e5-bf1e-1db0e35a88d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[532,533,534,535],"tindex":"6b13859d-139e-11e5-bf1e-adb107110601","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"6b13859e-139e-11e5-bf1e-c1fb32131bcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:769","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[536,537,538,539,540,541,542,543,544],"tindex":"6b13859f-139e-11e5-bf1e-d3840cfb13c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"6b1385a0-139e-11e5-bf1e-9b452fdd6b92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"6b1385a1-139e-11e5-bf1e-47e85e05fdc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"6b1385a2-139e-11e5-bf1e-339a6a3ff6fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"6b1385a3-139e-11e5-bf1e-ab81c75e34e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[249,250,545,252,546,255,547,258],"tindex":"6b13acb4-139e-11e5-bf1e-07ba17eebafa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}