{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":308,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":247,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":205,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":494,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":122,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":123,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":414,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":255,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":454,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":584,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":88,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":87,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":325,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":589,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":603,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":569,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":362,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":502,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":597,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":332,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":365,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":201,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":618,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":281,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":228,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":392,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":514,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":94,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":495,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":588,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":340,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":379,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":545,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":36,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":525,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":486,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":338,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":286,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":193,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":404,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":63,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":419,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":353,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":216,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":463,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":360,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":109,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":458,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":81,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":306,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":28,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":4,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":225,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":461,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":174,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":203,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":142,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":594,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":481,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":238,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":341,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":57,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":240,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":573,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":320,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":630,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":85,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":221,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":283,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":578,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":541,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":176,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":565,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":299,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":633,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":606,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":378,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":259,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":111,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":451,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":397,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":574,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":160,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":187,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":213,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":452,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":551,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":383,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":312,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":532,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":487,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":450,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":406,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":611,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":264,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":489,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":64,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":317,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":318,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":287,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":431,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":515,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":380,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":381,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":479,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":271,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":466,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":564,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":188,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":552,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":482,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":199,"org.apache.commons.collections4.list.TreeListTest.testRemove":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":503,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":217,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":314,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":313,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":607,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":147,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":315,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":501,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":499,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":401,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":557,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":37,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":443,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":497,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":428,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":127,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":191,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":387,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":268,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":165,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":269,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":377,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":407,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":477,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":112,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":339,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":327,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":539,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":628,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":178,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":528,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":624,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":577,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":19,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":143,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":18,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":429,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":30,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":575,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":576,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":207,"org.apache.commons.collections4.IteratorUtilsTest.testToList":560,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":121,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":149,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":172,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":311,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":224,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":488,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":592,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":446,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":595,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":625,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":323,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":91,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":352,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":626,"org.apache.commons.collections4.CollectionUtilsTest.filter":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":464,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":302,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":391,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":558,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":348,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":156,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":192,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":507,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":59,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":131,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":267,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":389,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":623,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":295,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":167,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":125,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":280,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":181,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":344,"org.apache.commons.collections4.map.LinkedMapTest.testReset":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":457,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":570,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":309,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":480,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":39,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":459,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":582,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":520,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":159,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":544,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":83,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":334,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":206,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":337,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":538,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":531,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":215,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":413,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":405,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":521,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":548,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":411,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":403,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":336,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":324,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":456,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":439,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":66,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":522,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":145,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":563,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":436,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":347,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":534,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":590,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":227,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":361,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":601,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":276,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":277,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":278,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":310,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":583,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":435,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":613,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":220,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":357,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":631,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":204,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":358,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":468,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":537,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":493,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":437,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":516,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":571,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":467,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":42,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":438,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":445,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":35,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":70,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":476,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":184,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":562,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":232,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":517,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":214,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":599,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":261,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":173,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":157,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":186,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":409,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":408,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":296,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":410,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":253,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":321,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":388,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":478,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":426,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":550,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":12,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":593,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":153,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":27,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":65,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":490,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":547,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":519,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":262,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":98,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":126,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer":553,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":540,"org.apache.commons.collections4.list.TreeListTest.testBug35258":135,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":243,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":289,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":198,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":635,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":471,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":84,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":133,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":491,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":609,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":629,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":474,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":465,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":233,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":636,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":441,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":119,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":31,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":208,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":60,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":69,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":76,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":485,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":579,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":632,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":581,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":110,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":282,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":399,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":620,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":307,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":168,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":293,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":600,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":602,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":634,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":21,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":301,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":300,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":508,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":124,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":622,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":530,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":274,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":106,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":105,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":605,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":162,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":591,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":596,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":200,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":604,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":345,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":433,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":150,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":245,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":518,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":73,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":74,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":390,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":195,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":235,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":236,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":260,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":284,"org.apache.commons.collections4.map.LRUMapTest.testLRU":374,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":434,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":587,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":258,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":627,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":230,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":209,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":71,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":257,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":546,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":598,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":543,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":265,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":561,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":616,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":527,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":115,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":375,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":155,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":180,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":219,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":158,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":475,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":43,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":331,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":117,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":237,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":529,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":376,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":372,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":447,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":619,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":535},"transformations":[{"failures":[],"tindex":"01fc3912-13a0-11e5-ab74-f5326f91b795","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"0204c493-13a0-11e5-ab74-ab56e8382ea7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"0204c494-13a0-11e5-ab74-e100fddd0611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:133","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[0,1,2],"tindex":"0204c495-13a0-11e5-ab74-a3a213524c2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0204c496-13a0-11e5-ab74-a5d5f37d478e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[],"tindex":"02089527-13a0-11e5-ab74-576967caf8a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"maxElements","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-2},{"failures":[3,4],"tindex":"02089528-13a0-11e5-ab74-23b084c75d9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"02089529-13a0-11e5-ab74-cf1b2697d83e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"right","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0208952a-13a0-11e5-ab74-97a29eba4c06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":0},{"failures":[],"tindex":"0208952b-13a0-11e5-ab74-c39411702599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"variableMap":{"this":"setOrder","out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"0208952c-13a0-11e5-ab74-e1d127e5a51b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[5],"tindex":"0208bc3d-13a0-11e5-ab74-0db9218a8156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13],"tindex":"0208bc3e-13a0-11e5-ab74-c766eb2369fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[14,15,16,17,18],"tindex":"0208bc3f-13a0-11e5-ab74-3dad1ec769be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"0208bc40-13a0-11e5-ab74-bbccaa88a5d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"0208bc41-13a0-11e5-ab74-2568f9645892","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"0208bc42-13a0-11e5-ab74-251e9e7e395e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"child","parent":"parent","left":"parent","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:517","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[19],"tindex":"0209f4c3-13a0-11e5-ab74-6130935e8195","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[],"tindex":"020a1bd4-13a0-11e5-ab74-91f5dc69fbb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[],"tindex":"020a1bd5-13a0-11e5-ab74-a9cb6710bcd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"left","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"020a1bd6-13a0-11e5-ab74-55dfa7d681f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[20,21,22,23,24,25,26],"tindex":"020a1bd7-13a0-11e5-ab74-3f2b51da57d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"020a1bd8-13a0-11e5-ab74-f36e18bb1950","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[27,28,29,30,31,32],"tindex":"020a1bd9-13a0-11e5-ab74-0b2d279fed19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[33,34,35],"tindex":"020a1bda-13a0-11e5-ab74-b7ca56950a18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[36,37,38,39,40,41,42],"tindex":"020a1bdb-13a0-11e5-ab74-172659a9d501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"020a42ec-13a0-11e5-ab74-8f820827e11e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[43,44,45,46,47,48,49,50,51],"tindex":"020a42ed-13a0-11e5-ab74-afb6cebdf7ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60],"tindex":"020a42ee-13a0-11e5-ab74-25e89682e034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"020a42ef-13a0-11e5-ab74-4f1b2e9f0992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"newNode","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"020ab820-13a0-11e5-ab74-25f69dd279a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"020ab821-13a0-11e5-ab74-6b3fc59a2002","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"020ab822-13a0-11e5-ab74-9f167db8a3e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":0},{"failures":[],"tindex":"020ab823-13a0-11e5-ab74-29cb20b28e9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[],"tindex":"020ab824-13a0-11e5-ab74-55f733d6bd5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"020adf35-13a0-11e5-ab74-a1140a11336d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"020adf36-13a0-11e5-ab74-9d6393d16c65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"variableMap":{"this":"this","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"020adf37-13a0-11e5-ab74-b93080cb42c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"020adf38-13a0-11e5-ab74-430de20b6054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"020adf39-13a0-11e5-ab74-5fc5e950138d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"020adf3a-13a0-11e5-ab74-17c259b43b37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[114,115,116,117,118,119,120,121,4,122,123,124,125,126,126,127,128,128,129,130],"tindex":"020adf3b-13a0-11e5-ab74-49d2f4fb507f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"020adf3c-13a0-11e5-ab74-0305ed6799d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[73,74,75,76,77,79,80,81,82,84,85],"tindex":"020adf3d-13a0-11e5-ab74-0ffa8ee0ca1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139,140],"tindex":"020adf3e-13a0-11e5-ab74-ed416a3626d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:890","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setRight(org.apache.commons.collections4.list.TreeList.AVLNode<E>, null)"},"variableMap":{"otherTreeMin":"root","otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[141,142,143,144],"tindex":"020b064f-13a0-11e5-ab74-93b6eb8bfe21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170],"tindex":"020b0650-13a0-11e5-ab74-1dee3db38591","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[171,172,173,174,175,176,177,178,1,179,2,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"020b0651-13a0-11e5-ab74-d30b31e49907","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"020b0652-13a0-11e5-ab74-5f27d9d67a2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"entry","predecessor":"entry","bitIndex":"lengthInBits","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"020b0653-13a0-11e5-ab74-39dbb1f1b4d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[194,195,196,197,198,199,200,201,202,203],"tindex":"020b0654-13a0-11e5-ab74-fff87167b8bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"020b0655-13a0-11e5-ab74-8b6690f5880e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtIfImpl","sourcecode":"if (int < 4) {\n    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n        org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    }\n} else {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>);\n}"},"status":-2},{"failures":[],"tindex":"020b0656-13a0-11e5-ab74-ad830794165c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"previous","entry":"next","key2":"key1","hashCode":"hashCode","key3":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[204,205,206,207],"tindex":"020b2d67-13a0-11e5-ab74-5f09b48cac2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"020b2d68-13a0-11e5-ab74-534d04772080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":0},{"failures":[208,209,210,211],"tindex":"020b2d69-13a0-11e5-ab74-7515049009dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"020b2d6a-13a0-11e5-ab74-6fa0dff22aa3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[212,213],"tindex":"020b2d6b-13a0-11e5-ab74-91b101077edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[86,87,214,92,93,94,95,96,97,98,99,100,101,108,109,110,111,112,113],"tindex":"020b2d6c-13a0-11e5-ab74-c3aaa253ffee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,35,261,262,263,264,265,33,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,34,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,204,205,207,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552],"tindex":"020b2d6d-13a0-11e5-ab74-5be36ee407c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:568","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"variableMap":{"entry":"entry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"020b547e-13a0-11e5-ab74-cdb9e6f57278","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[553],"tindex":"020b547f-13a0-11e5-ab74-215b8522abce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-1},{"failures":[],"tindex":"020b5480-13a0-11e5-ab74-bb8c3f8d5fba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[225,264,303,344,554,398,438,486],"tindex":"020b5481-13a0-11e5-ab74-673231751da2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[],"tindex":"020b5482-13a0-11e5-ab74-894939e95610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"variableMap":{"inverse":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[206,515,479,481,482,483,484,486,492,555,556],"tindex":"020b5483-13a0-11e5-ab74-ef40b3799589","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"020b5484-13a0-11e5-ab74-ef249cbc4f9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()"},"status":-2},{"failures":[231,241,244,250,251,269,279,34,287,288,309,316,317,319,322,323,326,327,328,329,330,350,357,358,360,363,364,367,368,369,370,371],"tindex":"020cdb25-13a0-11e5-ab74-ed91592c7b46","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"020cdb26-13a0-11e5-ab74-83d28f7b053f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-2},{"failures":[],"tindex":"020cdb27-13a0-11e5-ab74-a79d900cc2b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"020cdb28-13a0-11e5-ab74-599e55fe5db9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[],"tindex":"020cdb29-13a0-11e5-ab74-4fac8e9607f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[557],"tindex":"020d294a-13a0-11e5-ab74-27ed0f34ff4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"total","removeIndex":"total","currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1342","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int++;\n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[],"tindex":"020d294b-13a0-11e5-ab74-8f8e46984974","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"020d294c-13a0-11e5-ab74-69d4b1c83c6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"h","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[558],"tindex":"020d294d-13a0-11e5-ab74-8d88bb88a005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-1},{"failures":[559,560,561,562,563,564],"tindex":"020d294e-13a0-11e5-ab74-6b6430a3bda4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"020d294f-13a0-11e5-ab74-9f0393c61d37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[565,566,567,568,569,570,571,211],"tindex":"020d2950-13a0-11e5-ab74-2f681a5737bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[572,573,574,575,576,577,0,578,579,580,581,582,583,173,174,584,175,176,585,177,178,586,587,1,179,2,588,589,590,591,592,593,7,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,180,614,181,182,615,184,185,186,187,616,188,189,190,191,617,192,193,618,619,620],"tindex":"020d5061-13a0-11e5-ab74-eb98e78f6450","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"020d5062-13a0-11e5-ab74-3b8859c10fdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"020d5063-13a0-11e5-ab74-c55a6a50037d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyMapIterator:46","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.MapIterator))"},"status":-2},{"failures":[],"tindex":"020d5064-13a0-11e5-ab74-07ad558c90ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"020d5065-13a0-11e5-ab74-d526a0abbb4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"020d5066-13a0-11e5-ab74-4798160873d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[621,622,623,624,625,626,627,628,629,630,631],"tindex":"020d5067-13a0-11e5-ab74-3b9872f19011","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1030","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-1},{"failures":[],"tindex":"020d5068-13a0-11e5-ab74-2925d4d129d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"variableMap":{"predicates":"preds","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-2},{"failures":[632,633,634],"tindex":"020d5069-13a0-11e5-ab74-8fd10989213f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"020d506a-13a0-11e5-ab74-25c34dabae62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[],"tindex":"020d777b-13a0-11e5-ab74-63c6ab41f826","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"020d777c-13a0-11e5-ab74-332a8eeda68f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"deletedNode","currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"020d777d-13a0-11e5-ab74-f53b62266568","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"020d777e-13a0-11e5-ab74-cf198c5a09b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null)"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"020d777f-13a0-11e5-ab74-b59c833cb70b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[635,636],"tindex":"020d7780-13a0-11e5-ab74-875eb40aa76b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"020d7781-13a0-11e5-ab74-7b81d76acaa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"020d7782-13a0-11e5-ab74-5b968724327d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"020d7783-13a0-11e5-ab74-fd7cd542bfd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"020d9d94-13a0-11e5-ab74-151ad07c3722","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}