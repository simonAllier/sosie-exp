{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":669,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":17,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":328,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":362,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":611,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":672,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":447,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":529,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":528,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":11,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":412,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":491,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":671,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":486,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":350,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":466,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":503,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":641,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":67,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":397,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":361,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":591,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":655,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":659,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":540,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":516,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":648,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":660,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":404,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":287,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":701,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":507,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":687,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":499,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":217,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":512,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":665,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":224,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":225,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":271,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":65,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":203,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":393,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":273,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":464,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":663,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":518,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":29,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":624,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":376,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":552,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":583,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":564,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":226,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":144,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":676,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":674,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":159,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":336,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":56,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":454,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":353,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":562,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":460,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":713,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":428,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":508,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":126,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":438,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":610,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":652,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":658,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":300,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":645,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":26,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":313,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":543,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":692,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":49,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":274,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":91,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":115,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":260,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":570,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":550,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":712,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":431,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":166,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":504,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":617,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":643,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":496,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":326,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":536,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":327,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":490,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":554,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":547,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":374,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":337,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":519,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":403,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":62,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":220,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":251,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":333,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":241,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":267,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":631,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":711,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":594,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":207,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":111,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":255,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":494,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":501,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":673,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":216,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":282,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":567,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":24,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":598,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":473,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":340,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":283,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":589,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":2,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":693,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":398,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":538,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":118,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":639,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":175,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":210,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":355,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":138,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":707,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":478,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":184,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":339,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":679,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":421,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":459,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":391,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":523,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":571,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":620,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":316,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":506,"org.apache.commons.collections4.ListUtilsTest.testSubtract":286,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":234,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":177,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":97,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":465,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":389,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":195,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":690,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":471,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":101,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":430,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":714,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":411,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":205,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":237,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":45,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":590,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":299,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":122,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":425,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":563,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":704,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":335,"org.apache.commons.collections4.IteratorUtilsTest.testToList":442,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":657,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":680,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":578,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":539,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":407,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":387,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":488,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":281,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":532,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":535,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":227,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":605,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":581,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":551,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":654,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":530,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":423,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":280,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":509,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":621,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":400,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":593,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":4,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":502,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":223,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":429,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":651,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":108,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":345,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":612,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":596,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":261,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":302,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":637,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":718,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":16,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":715,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":157,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":33,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":174,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":505,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":588,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":716,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":89,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":388,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":685,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":666,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":573,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":694,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":534,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":521,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":480,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":500,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":120,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":495,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":614,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":183,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":288,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":191,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":619,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":383,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":289,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":168,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":185,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":609,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":511,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":544,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":682,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":307,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":630,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":142,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":369,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":363,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":311,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":416,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":525,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":190,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":148,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":531,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":653,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":517,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":357,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":186,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":252,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":296,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":401,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":420,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":375,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":642,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":100,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":84,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":125,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":82,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":484,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":402,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":709,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":150,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":664,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":147,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":689,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":549,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":384,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":545,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":169,"org.apache.commons.collections4.CollectionUtilsTest.isFull":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":90,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":691,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":386,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":482,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":584,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":644,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":75,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":603,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":607,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":332,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":104,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":452,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":577,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":293,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":354,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsSelfHashCode":586,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":561,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":153,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":706,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":470,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":703,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":696,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":537,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":199,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":710,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":128,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":172,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":576,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":524,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":109,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":697,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":618,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":338,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":566,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":513,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":700,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":699,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":698,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":705,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":553,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":364,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":433,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":647,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":646,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":57,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":151,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":310,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":477,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":708,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":356,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":717,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":533,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":560,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":559,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":497,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":555,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":556,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":557,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":347,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":474,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":211,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":246,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":381,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":649,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":565,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":492,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":395,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":194,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":626,"org.apache.commons.collections4.map.LRUMapTest.testLRU":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":463,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":214,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":325,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":686,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":117,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":165,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":634,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":303,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":170,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":265,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":414,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":615,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":527,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":587,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":53,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":63,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":443,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":69,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":179,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":410,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":294,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":221,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":439,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":187,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":670,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":114,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":608,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":498,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":319,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":483,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":585,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":437,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":448,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":330,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":628,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":58,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":105,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":204,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":493,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":625},"transformations":[{"failures":[],"tindex":"560915c1-13f1-11e5-b26e-b3bd8674b404","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"value","maxElements":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[],"tindex":"56093cd2-13f1-11e5-b26e-97d56cd66b42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-2},{"failures":[0,1],"tindex":"56093cd3-13f1-11e5-b26e-a3eaa4f8bbeb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-1},{"failures":[],"tindex":"56093cd4-13f1-11e5-b26e-81c06b5237f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"560963e5-13f1-11e5-b26e-bbde1c731a7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"560963e6-13f1-11e5-b26e-5b767c43b38d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"560963e7-13f1-11e5-b26e-e5fda900c93b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[15],"tindex":"560963e8-13f1-11e5-b26e-b546b68a6b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[16,17,18],"tindex":"560963e9-13f1-11e5-b26e-95d1b1b7b9a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hashCode","key":"key2","bitIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[19,20,21],"tindex":"56098afa-13f1-11e5-b26e-b3a80e9c094b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"modCount","maxElements":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"56098afb-13f1-11e5-b26e-a5315fcef457","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"5609b20c-13f1-11e5-b26e-1d3f24903c09","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":0},{"failures":[],"tindex":"5609b20d-13f1-11e5-b26e-ad636c70e4ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"5609b20e-13f1-11e5-b26e-9becafa0d625","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"5609b20f-13f1-11e5-b26e-67fa775674e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[306,307],"tindex":"5609d920-13f1-11e5-b26e-5f7c57e5f4ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[308,41,309,310,311,55,312,313,314,88,315,316,317,100,318,319,320,124,321,322,323,155,324,325,326,188,327,328,329,202,330,331,332,230,333,334,335,242,336,337,338,274,339,340],"tindex":"5609d921-13f1-11e5-b26e-01338c384d99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"5609d922-13f1-11e5-b26e-e7eb590d471a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":0},{"failures":[],"tindex":"5609d923-13f1-11e5-b26e-f3de7cb07341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:325","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[],"tindex":"5609d924-13f1-11e5-b26e-47d3f0640ac2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"560a0035-13f1-11e5-b26e-51ec1b261a21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"status":-2},{"failures":[341,342,343,344,345,346],"tindex":"560a0036-13f1-11e5-b26e-d99116431ab1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start2","end2":"start1","this":"this","i":"end2","end1":"start1","k":"start1","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"560a0037-13f1-11e5-b26e-d75211304dad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":0},{"failures":[347,348],"tindex":"560a0038-13f1-11e5-b26e-2fd902eadcc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"560a0039-13f1-11e5-b26e-478885b618d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set1","subSet":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-2},{"failures":[],"tindex":"560a003a-13f1-11e5-b26e-5ff0fb7b5bae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:112","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<V> java.util.Set<V> = super.values()"},"status":-2},{"failures":[],"tindex":"560a003b-13f1-11e5-b26e-0d3004a48e73","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":0},{"failures":[],"tindex":"560a003c-13f1-11e5-b26e-050cd075ef97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412],"tindex":"560a003d-13f1-11e5-b26e-ff9990128041","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[413,414,415,416,417,418,419,420,421,422],"tindex":"560a274e-13f1-11e5-b26e-073f6f4d8102","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[423,424,425,426,427,428,429,430,306,431,432,433,434,435,436,437,438,439,440,307],"tindex":"560a274f-13f1-11e5-b26e-03610c40da87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"560a2750-13f1-11e5-b26e-95543834641e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"560a2751-13f1-11e5-b26e-6f83bb45e768","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.MapIterator<? extends K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n} "},"status":-2},{"failures":[441,442,443,444,445,14],"tindex":"560a2752-13f1-11e5-b26e-7f9a7f78c964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[446,447,448,363,373,374,375,376,378,381,449,391,402,403,404,405,407,410,450],"tindex":"560a2753-13f1-11e5-b26e-43417db342dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"560cbf64-13f1-11e5-b26e-536e6b34d932","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"560cbf65-13f1-11e5-b26e-43617598c6d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[92,102,234,243,278],"tindex":"560cbf66-13f1-11e5-b26e-4312c3c7bc2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"560cbf67-13f1-11e5-b26e-cd897d846e94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[451,452,453,454,455,456],"tindex":"560cbf68-13f1-11e5-b26e-032b88388858","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[13],"tindex":"560cbf69-13f1-11e5-b26e-3de1e6462fab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[349,457,458,350,459,351,460,461,462,463,355,356,357,464,465,466,467,468,469,353,470,471,472,473,474,475,476,477,478,479,480,354],"tindex":"560cbf6a-13f1-11e5-b26e-0f61f78d1cac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[],"tindex":"560cbf6b-13f1-11e5-b26e-b1215dcbcb98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"560ce67c-13f1-11e5-b26e-c3bbf1d6c3ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"560ce67d-13f1-11e5-b26e-691a1c5c58c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:455","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"560ce67e-13f1-11e5-b26e-6178917304b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"560ce67f-13f1-11e5-b26e-ff2c40a6c7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"lengthInBits","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"560ce680-13f1-11e5-b26e-6dbeb59603a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"560ce681-13f1-11e5-b26e-af0643ad9977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[2,3,4,5,6,7,11,12,13,14],"tindex":"560ce682-13f1-11e5-b26e-d712c8f5d652","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl","sourcecode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"560ce683-13f1-11e5-b26e-57e8f519f7c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"count","closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":0},{"failures":[481,482,483,484,485,486,487,488],"tindex":"560ce684-13f1-11e5-b26e-6f8efb2abef2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[489],"tindex":"560d0c95-13f1-11e5-b26e-c1b1533bc806","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[490,491],"tindex":"560d0c96-13f1-11e5-b26e-a77f2b97d371","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-1},{"failures":[492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515],"tindex":"560d0c97-13f1-11e5-b26e-c5af814047af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[516,517,518,519,520,521,522,523,524,525,526,527],"tindex":"560d0c98-13f1-11e5-b26e-51fafc5d6ca4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"560d0c99-13f1-11e5-b26e-0767ea925374","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[574,575,576,577,578,579,580,581,582,583,584,585,586,587],"tindex":"560d0c9a-13f1-11e5-b26e-05b5d417d896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"hashCode","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[431,433],"tindex":"560d0c9b-13f1-11e5-b26e-1fe0b24d7572","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"560d0c9c-13f1-11e5-b26e-6bcd4a45fc5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"560d33ad-13f1-11e5-b26e-53a5836e3b33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[528,529,530,531,532,533,534,535,537,538,540,541,542,543,544,545,547,550,551,555,556,557,558,559,560,561,564,568,572,573],"tindex":"560d33ae-13f1-11e5-b26e-f931026f99bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"560d33af-13f1-11e5-b26e-f7f55430c2f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"current","left":"current","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[441,443,444,442,445,14],"tindex":"560d33b0-13f1-11e5-b26e-1914815e4b80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"560d33b1-13f1-11e5-b26e-674689102907","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[23,22,35,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,82,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,118,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,149,138,139,140,141,142,143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,182,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,224,213,214,215,216,217,218,219,220,221,222,223,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,268,257,258,259,260,261,262,263,264,265,266,267,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293],"tindex":"560d33b2-13f1-11e5-b26e-e12c7770e7e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"560d5ac3-13f1-11e5-b26e-c98e33ffef71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"560d5ac4-13f1-11e5-b26e-fb2f641fdc54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(V)) {\n    java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V));\n} "},"status":-2},{"failures":[],"tindex":"560d5ac5-13f1-11e5-b26e-e5eb07ca81c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"560d5ac6-13f1-11e5-b26e-9971c3fbf599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"560d5ac7-13f1-11e5-b26e-8fd130f16099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[489],"tindex":"560d5ac8-13f1-11e5-b26e-97f46753045e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"560d5ac9-13f1-11e5-b26e-ef7e9e775498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"next","key2":"key1","hashCode":"hashCode","key3":"key2","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"560d5aca-13f1-11e5-b26e-7d01abe44ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[],"tindex":"560d5acb-13f1-11e5-b26e-afb0423a8c16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-2},{"failures":[],"tindex":"560d81dc-13f1-11e5-b26e-b1ff23b57c2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"560d81dd-13f1-11e5-b26e-6b21905f5fb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"560d81de-13f1-11e5-b26e-4bef7d959f52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"560d81df-13f1-11e5-b26e-89e8ab1592c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"560d81e0-13f1-11e5-b26e-810730bcf0ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"nextElement","defaultValue":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[516,517,518,519,520,588,521,522,523,524,525,526,527],"tindex":"560d81e1-13f1-11e5-b26e-2b8fabe8f26f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[589,590,591,592],"tindex":"560d81e2-13f1-11e5-b26e-41d21ced9953","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"560d81e3-13f1-11e5-b26e-4d3866084f07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"560d81e4-13f1-11e5-b26e-e5641044a274","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"t","predecessor":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int)"},"status":-2},{"failures":[],"tindex":"560da8f5-13f1-11e5-b26e-156c7a450e04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[593],"tindex":"560da8f6-13f1-11e5-b26e-9bb127cb91f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"iCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:80","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int) ; int++) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,500,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,504,505,665,506,507,508,666,509,510,511,512,667,413,414,415,416,417,419,420,421,422],"tindex":"560da8f7-13f1-11e5-b26e-2bc1d21f23da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-1},{"failures":[668,17],"tindex":"560da8f8-13f1-11e5-b26e-97551a2ffde8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"560da8f9-13f1-11e5-b26e-45c1a58add01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[669,670,426,427,671,428,429,430,672,306,431,432,433,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,455,456,688,689,436,437,690,438,439,440,691,692,307,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712],"tindex":"560da8fa-13f1-11e5-b26e-550d4cd9a160","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"560da8fb-13f1-11e5-b26e-51139d88712e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"right","tree":"node","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"560da8fc-13f1-11e5-b26e-8fa504b9e849","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":0},{"failures":[713,714,715,716],"tindex":"560da8fd-13f1-11e5-b26e-6da3594244cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"560dd00e-13f1-11e5-b26e-8f6c5625a5f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"560dd00f-13f1-11e5-b26e-a90948ec7111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-2},{"failures":[],"tindex":"560dd010-13f1-11e5-b26e-070e07712185","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[717],"tindex":"560dd011-13f1-11e5-b26e-6925480fe3a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"i","modifications":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573],"tindex":"560dd012-13f1-11e5-b26e-950348f6ae90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[301,718],"tindex":"560dd013-13f1-11e5-b26e-adf93b9effe7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"560dd014-13f1-11e5-b26e-9b79a4e23544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}