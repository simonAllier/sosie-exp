{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":696,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":574,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":668,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":161,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":17,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":656,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":122,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":308,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":391,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":759,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":275,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":486,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":676,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":180,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":498,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":746,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":203,"org.apache.commons.collections4.map.Flat3MapTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":548,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":34,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":403,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":232,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":415,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":532,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":186,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":101,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":534,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":5,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":270,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":455,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":715,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":394,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":306,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":586,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":508,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":475,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":728,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":213,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":287,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":215,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":646,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":427,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":766,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":538,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":436,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":483,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":513,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":60,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":489,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":572,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":775,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":687,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":564,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":231,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":340,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":164,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":325,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":379,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":381,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":350,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":600,"org.apache.commons.collections4.functors.EqualPredicateTest.testPredicateTypeCanBeSuperClassOfObject":684,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":420,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":411,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":481,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":345,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":346,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":344,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":187,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":431,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":528,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":421,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":627,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":662,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":228,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":690,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":289,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":729,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":643,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":192,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":772,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":88,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":459,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":448,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":252,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":552,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":770,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":735,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":736,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":657,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":602,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":777,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":560,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":519,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":704,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":235,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":67,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":32,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":233,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":527,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":130,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":616,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":109,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":437,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":1,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":713,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":652,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":694,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":509,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":557,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":339,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":504,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":245,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":695,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":542,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":763,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":723,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":351,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":722,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":419,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.map.LRUMapTest.testReset":755,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":83,"org.apache.commons.collections4.CollectionUtilsTest.exists":769,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":395,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":242,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":294,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":626,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":100,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":533,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":168,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":238,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":179,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":757,"org.apache.commons.collections4.map.LinkedMapTest.testReset":230,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":274,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":761,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":629,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":764,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":613,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":470,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":776,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":283,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":491,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":621,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":69,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":573,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":595,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":463,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":622,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":585,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":266,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":221,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":451,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":589,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":293,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":72,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":559,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":567,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":338,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":518,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":659,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":197,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":631,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":450,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":405,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":583,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":376,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":768,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":771,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":773,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":144,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":96,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":260,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":507,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":259,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":82,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":261,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":193,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":592,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":237,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":645,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":240,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":647,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":749,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":271,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":546,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":753,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.LinkedMapTest.testClone":754,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":673,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":445,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":733,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":556,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":530,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":208,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":707,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":520,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":401,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":521,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":739,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":648,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":630,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":250,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":319,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":332,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":461,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":21,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":422,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":476,"org.apache.commons.collections4.CollectionUtilsTest.find":688,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":708,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":157,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":681,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":615,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":333,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":493,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":145,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":239,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":184,"org.apache.commons.collections4.map.LRUMapTest.testLRU":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":406,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":637,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":678,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":526,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":205,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":672,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":462,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":482,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":578,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":555,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":577,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":412,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":540,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":316,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":582,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":37,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":322,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":601,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":719,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":378,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":477,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":576,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":751,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":336,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":25,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":714,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":3,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":219,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":670,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":399,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":677,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":4,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":554,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":685,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":669,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":311,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":471,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":553,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":243,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":247,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":331,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":249,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":639,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":98,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":152,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":409,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":531,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":404,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":731,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":654,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":296,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":537,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":416,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":456,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":484,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":465,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":439,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":191,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":544,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":389,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":53,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":501,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":334,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":160,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":605,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":536,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":348,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":318,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":57,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":246,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":132,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":107,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":327,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":740,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":424,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":458,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":535,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":599,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":522,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":635,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":725,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":382,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":774,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":248,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":515,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":159,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":127,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":257,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":709,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":13,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":702,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":625,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":65,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":512,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":623,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":683,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":446,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":632,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":229,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":664,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":727,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":408,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":543,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":362,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":188,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":97,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":752,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":742,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":743,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":480,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":342,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":341,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":447,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":343,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":737,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":472,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":374,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":488,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":503,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":644,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":359,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":628,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":236,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":697,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":413,"org.apache.commons.collections4.map.LRUMapTest.testClone":756,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":617,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":268,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":745,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":202,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":596,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":285,"org.apache.commons.collections4.ListUtilsTest.testSubtract":402,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":686,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":89,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":539,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":423,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":269,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":360,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":467,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":433,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":428,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":454,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":650,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":18,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":779,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":124,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":724,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":732,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":52,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":748,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":661,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":641,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":330,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":290,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":712,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":660,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":414,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":79,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":292,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":278,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":506,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":597,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":190,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":264,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":139,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":148,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":256,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":10,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":262,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":254,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":280,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":387,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":312,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":594,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":579,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":619,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":640,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":307,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":658,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":711,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":9,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":175,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":393,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":367,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":517,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":24,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":128,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":767,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":703,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":674,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":633,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":492,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":457,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":750,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":426,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":566,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":497,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":479,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":562,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":624,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":614,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":324,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":607,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":651,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":590,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":499,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":496,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":568,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":449,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":64,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":87,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":452,"org.apache.commons.collections4.set.CompositeSetTest.testContains":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":131,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":218,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":598,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":718,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":609,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":699,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":588,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":397,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":490,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":7,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":365,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":56,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":195,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":50,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":611,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":663,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":778,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":502,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":765,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":667,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":120,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":121,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":575,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":549,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":671,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":636,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":47,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":620,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":710,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":692,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":182,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":691,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":593,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":545,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":40,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":329,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":693,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":460,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":500,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":279,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":49,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":741,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":173,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":591,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":705,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":209,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":464,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":558,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":473,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":700,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":43,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":44,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":210,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":570,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":717,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":610,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":73,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":547,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":14,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":163,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":166,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":115,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":76,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":116,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":154,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":665,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":30,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":675,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":75,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":762,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":398,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":435,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":39,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":720,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":721,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":117,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":487,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":110,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":118,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":485,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":666,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":212,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":730,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":156,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":505,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":317,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":466,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":747,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":716},"transformations":[{"failures":[],"tindex":"01cc7bc3-13d8-11e5-af88-6196d0ca641b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"01cca2d4-13d8-11e5-af88-23670c8deb80","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"01cca2d5-13d8-11e5-af88-c94750fc24d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"01cca2d6-13d8-11e5-af88-15f3b45ff5ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[21,22,23],"tindex":"01cd1807-13d8-11e5-af88-015110744b61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-1},{"failures":[],"tindex":"01cd3f18-13d8-11e5-af88-c19958be8bbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"lineageIndex","proposedCapacity":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[24,25,26,27],"tindex":"01cd3f19-13d8-11e5-af88-733ccde8bcd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[28],"tindex":"01cd3f1a-13d8-11e5-af88-1f6f43760f43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"01ce026b-13d8-11e5-af88-f1ed7b00d4bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"01ce026c-13d8-11e5-af88-3780f9232503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"01ce026d-13d8-11e5-af88-a5188dbade3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1024","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values()"},"status":0},{"failures":[29,30,31,32,33,34,35,36,37,38,39],"tindex":"01ce026e-13d8-11e5-af88-857484b944f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"01ce297f-13d8-11e5-af88-0ded387fc34f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"01ce2980-13d8-11e5-af88-c5b7d5b7def5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"parent","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01ce5091-13d8-11e5-af88-a7393bf1f9fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"01ce5092-13d8-11e5-af88-8be2bb490004","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[28,40,41,42],"tindex":"01ce5093-13d8-11e5-af88-fb91d9a4c32a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"01ce5094-13d8-11e5-af88-c32ea389160b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[],"tindex":"01ce5095-13d8-11e5-af88-3d3b2e9bc7d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"value","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"01ce5096-13d8-11e5-af88-6557e8867346","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"01ce5097-13d8-11e5-af88-ab4fe1f3c014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"oldCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"01ce77a8-13d8-11e5-af88-b17ca9a40b06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"01ce77a9-13d8-11e5-af88-1fc297a5300e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"01ce77aa-13d8-11e5-af88-f98ebae73542","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"01ce77ab-13d8-11e5-af88-b1a5c55dfae1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[62,66,71,72,73,74],"tindex":"01ce77ac-13d8-11e5-af88-c788d3403176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[75,76,77,78,79,80],"tindex":"01ce77ad-13d8-11e5-af88-ed3f9cbf86a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"end1","end2":"i","this":"this","i":"end2","end1":"start2","k":"delta","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"01ce77ae-13d8-11e5-af88-f7782f6584c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"01ce77af-13d8-11e5-af88-c122d86a93d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"01ce77b0-13d8-11e5-af88-a93b98e47204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"01ce9ec1-13d8-11e5-af88-3bb3922cc311","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[81],"tindex":"01ce9ec2-13d8-11e5-af88-e5c51cbc7f3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[82],"tindex":"01ce9ec3-13d8-11e5-af88-e373f8c678a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:353","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"No mutator specified\");\n} "},"variableMap":{"mutator":"mutator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"status":-1},{"failures":[],"tindex":"01ce9ec4-13d8-11e5-af88-f746c3e93628","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[83,84,85,86,87,88,89,90,91,92],"tindex":"01ce9ec5-13d8-11e5-af88-89b3a8f561a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.SortedBag<E>.clear()"},"variableMap":{"bag":"excess"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"01ce9ec6-13d8-11e5-af88-6f190fcc61d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"01ce9ec7-13d8-11e5-af88-0b1f86aacf64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"01ce9ec8-13d8-11e5-af88-415658a5a020","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"01ce9ec9-13d8-11e5-af88-6da7d37d09b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"01d136da-13d8-11e5-af88-f5ada3c0d2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"currentNode","y":"siblingNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"01d15deb-13d8-11e5-af88-3b987367c094","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,58,59,60,61,62,63,64,165,65,166,66,167,168,67,68,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,71,198,199,200,201,202,72,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,31,32,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,73,367,368,369,370,371,74,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396],"tindex":"01d15dec-13d8-11e5-af88-8f73a8ba6ae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"variableMap":{"newCapacity":"modCount","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[397,398,399,400,401],"tindex":"01d15ded-13d8-11e5-af88-174c415be022","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-1},{"failures":[402,403,404,405,406,407,408,409,410,83,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,84,430,431,432,433,434,435,436,437,438,439,85,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,86,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,87,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,88,544,545,546,547,548,549,550,551,552,553,89,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,90,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,91,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,92,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"01d184fe-13d8-11e5-af88-4f2657878074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"01d184ff-13d8-11e5-af88-f59e6bfea19f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01d18500-13d8-11e5-af88-8d91e2c131d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator();\n} "},"status":0},{"failures":[664,665,666,667,668],"tindex":"01d18501-13d8-11e5-af88-d569c3c5d672","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[402,403,404,405,406,407,408,409,410,83,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,84,430,431,432,433,434,435,436,437,438,439,85,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,86,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,87,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,88,544,545,547,546,548,549,550,551,552,553,89,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,579,578,580,581,582,583,584,585,90,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,91,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,92,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663],"tindex":"01d18502-13d8-11e5-af88-f3a572193b43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"01d1ac13-13d8-11e5-af88-833cdf0b0f15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1261","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"variableMap":{"in":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:555","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[669],"tindex":"01d1ac14-13d8-11e5-af88-a7706be540fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:55","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends T> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Collection<T> java.util.Collection<T> = ((java.util.Collection<T>)(java.util.Collection<? extends T>));\n    return java.util.Collection<T>;\n} "},"status":-1},{"failures":[670],"tindex":"01d1ac15-13d8-11e5-af88-114a818a47c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1348","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int++;\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"01d1ac16-13d8-11e5-af88-eb5fbab93eda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[671,672,673,674],"tindex":"01d1ac17-13d8-11e5-af88-45b62a873345","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[32,33],"tindex":"01d1ac18-13d8-11e5-af88-8f6212f6ad37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"removeLRUEntry","nextCalled":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"01d1ac19-13d8-11e5-af88-d31e14f5718e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"result","length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[],"tindex":"01d1ac1a-13d8-11e5-af88-8d9a235b7a66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[407,83,429,84,436,85,490,86,521,87,543,88,550,89,582,90,604,91,630,92],"tindex":"01d1ac1b-13d8-11e5-af88-c32b2e283fba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"01d1d32c-13d8-11e5-af88-31e551b39ff8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"01d1d32d-13d8-11e5-af88-2d76e535233b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[94,675,99,676,104,105,677,106,107,108,109,678,110,111,112,679,680],"tindex":"01d1d32e-13d8-11e5-af88-6d69fc43a787","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[681,682,683,684,685,686,687,688,689],"tindex":"01d1d32f-13d8-11e5-af88-e9eb3badae83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-1},{"failures":[],"tindex":"01d1d330-13d8-11e5-af88-7de466e2a6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"01d1d331-13d8-11e5-af88-7398b86ebe1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[690,691,692,161,162,163,164,58,59,60,61,62,63,64,165,65,166,66,167,168,67,68,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],"tindex":"01d1d332-13d8-11e5-af88-67035975d643","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[693,694,695,696,28,40,697,698,699,700,41,701,42,702,703,704],"tindex":"01d1d333-13d8-11e5-af88-c9e0287f98d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"01d1fa44-13d8-11e5-af88-8778c3cf11eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"01d1fa45-13d8-11e5-af88-53464d1ce65f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"length","expectedModCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[24,25,26,27],"tindex":"01d2e4a6-13d8-11e5-af88-a9c445ab3c9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"h","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"01d30bb7-13d8-11e5-af88-3dee501dccf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"right","parent":"left","h":"current","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[58,59,61,62,63,65,68,172,173,175,176,186,194,195,197,71,198,201,72,205,206,210,211,213,214,224,234,235,241,242,244,245,246,249,251,254,255,259,260,262,263,273,705,706,282,283,285,286,287,288,290,292,295,296,300,301,303,304,305,707,34,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,323,324,326,327,328,329,331,333,336,337,341,342,344,345,346,726,727,728,729,730,731,732,733,734,735,736,737,738,739,363,364,366,73,367,370,74,374,375,379,380,382,383,393],"tindex":"01d30bb8-13d8-11e5-af88-4faa4a07bf3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"01d30bb9-13d8-11e5-af88-4dca44cafc3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[740,741,742,743,744,745,746,747,748],"tindex":"01d30bba-13d8-11e5-af88-2b694d35ee9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"01d30bbb-13d8-11e5-af88-79382e5882b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":0},{"failures":[],"tindex":"01d332cc-13d8-11e5-af88-41ffa9d364f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1016","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, new java.util.ArrayList<O>())"},"status":-2},{"failures":[24,25,26,27],"tindex":"01d332cd-13d8-11e5-af88-bfc2f73e4d09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[749,750],"tindex":"01d332ce-13d8-11e5-af88-c38f5ef85c6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"01d332cf-13d8-11e5-af88-eb4d8d95228a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01d332d0-13d8-11e5-af88-054d7afe1c8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":0},{"failures":[],"tindex":"01d332d1-13d8-11e5-af88-1904adf13bc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01d332d2-13d8-11e5-af88-05b97dfde797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"01d332d3-13d8-11e5-af88-a71743902e45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[751,125,126,127,128,131,132,133,134,136,137,138,139,140,141,142,752,230,753,754,233,234,235,237,238,239,241,242,244,245,246,248,249,251,254,255,259,260,261,262,263,264,268,274,275,706,755,756,29,707,30,33,34,81,35,36,37,38,757,708,709,758,759,760,710,711,712,713,714,761,716,717,718,719,720,721,762,722,723,763,764,725,765,766,39,767,768],"tindex":"01d332d4-13d8-11e5-af88-1b86c3ddc0d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"01d359e5-13d8-11e5-af88-c7df48b4582f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"01d359e6-13d8-11e5-af88-2f7459ea5f63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"01d359e7-13d8-11e5-af88-51d6e046f16b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[769],"tindex":"01d359e8-13d8-11e5-af88-5f4833e4e120","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"01d359e9-13d8-11e5-af88-f77609b11a30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"01d359ea-13d8-11e5-af88-771ad09e27f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:134","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"variableMap":{"key":"key","s1":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"01d359eb-13d8-11e5-af88-01333df991a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":0},{"failures":[],"tindex":"01d359ec-13d8-11e5-af88-6be4c197a45f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[423,537,598,770,614,615,616,617,618,619,620,621,622,623,625,626,627],"tindex":"01d359ed-13d8-11e5-af88-8f77dbe5f735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"01d380fe-13d8-11e5-af88-6f8d6d8a5e89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"01d380ff-13d8-11e5-af88-91992229503f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:109","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"01d38100-13d8-11e5-af88-4355562d0aa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[675,95,771,772,773,774,96,775,97,776,98,777,100,101,778,779,104,105,106,107,108,109,110,111,112],"tindex":"01d38101-13d8-11e5-af88-79e6e6bee815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[75,76,77,78,79,80],"tindex":"01d38102-13d8-11e5-af88-b75da66d23a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"start1","vDown":"vDown","delta":"offset","end2":"offset","this":"this","i":"end1","end1":"start2","k":"d","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"01d38103-13d8-11e5-af88-0b66707512f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[],"tindex":"01d38104-13d8-11e5-af88-dbe1277141f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"key1","defaultValue":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"01d38105-13d8-11e5-af88-8dda320fad25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}