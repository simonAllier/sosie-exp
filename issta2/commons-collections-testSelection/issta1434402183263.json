{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":821,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":437,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":580,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":338,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":466,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":630,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":983,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":318,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":1063,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":590,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":734,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":1227,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":405,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":973,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":1247,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":959,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":434,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":1194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":42,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":944,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":223,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":971,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":1048,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":979,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":179,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":1137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":225,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":785,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":658,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":761,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":1068,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":99,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":378,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":306,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":85,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":924,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":1093,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":1270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":38,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":79,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":367,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":122,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":885,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":77,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":357,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":1219,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":874,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":1155,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":1208,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":834,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":70,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":1117,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":1132,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":1272,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":909,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":345,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":565,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":448,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":1051,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":221,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":1138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":553,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":395,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":691,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":861,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":685,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":766,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":775,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":1213,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":1049,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":52,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":494,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":969,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":1165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":401,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":955,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":1077,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":201,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":1078,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":1079,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":725,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":902,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":984,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":882,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":272,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":1062,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":340,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":1246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":133,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":280,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":850,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":894,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":381,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":782,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":636,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":544,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":751,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":458,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":385,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":819,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":50,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":1258,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":1274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":679,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":149,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":502,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":674,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":1092,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":158,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":633,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":142,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":933,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":1036,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":1043,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":1037,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":1038,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":527,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":1240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":521,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":963,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":445,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":700,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":862,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":780,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":870,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":163,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":164,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":162,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":614,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":665,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":845,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":887,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":1021,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":65,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":292,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":620,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":747,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":921,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":573,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":1095,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":621,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":648,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":892,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":899,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":710,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":537,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":1056,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":857,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":567,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":1188,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":250,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":913,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":373,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":1221,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":1255,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":496,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":262,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":406,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":1032,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":1162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":957,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":1115,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":787,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":803,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":950,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":1216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":51,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":735,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":703,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":797,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":835,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":949,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":1100,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":1262,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":311,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":361,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":1220,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":603,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":416,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":844,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":932,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":1097,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":986,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":538,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":600,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":602,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":879,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":1273,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":512,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":706,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":737,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":474,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":1169,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":895,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":92,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":818,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":10,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":267,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":81,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":732,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":1087,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":728,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":341,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":520,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":631,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":533,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":731,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":1252,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":1250,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":767,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":328,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":108,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":157,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":1109,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":459,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":1034,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":377,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":254,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":564,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":180,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":1191,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":287,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":855,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":286,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":285,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":717,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":1159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":926,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":539,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":1206,"org.apache.commons.collections4.map.LRUMapTest.testReset":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":486,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":869,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":907,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":1052,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":1275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":1106,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":1195,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":1263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":209,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":746,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":506,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":1207,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":1156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":645,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":1102,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":560,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":138,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":1181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":20,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":524,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":468,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":657,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":258,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":854,"org.apache.commons.collections4.map.LinkedMapTest.testReset":1096,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":1045,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":624,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":270,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":1136,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":1190,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":712,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":1047,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":794,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":1168,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":1154,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":901,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":802,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":197,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":753,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":1249,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":586,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":741,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":820,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":1241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":683,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":994,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":916,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":191,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":202,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":742,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":609,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":21,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":689,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":925,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":1128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":1006,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1189,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":570,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":905,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":1085,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":1026,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":208,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":1222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":237,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":316,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":935,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":811,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":814,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":792,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":530,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":1264,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":832,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":415,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":441,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":918,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":1061,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":1151,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":961,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":218,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":331,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":1008,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":714,"org.apache.commons.collections4.map.HashedMapTest.testClone":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":219,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":678,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":220,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":1171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":382,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":863,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":517,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":98,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":177,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":687,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":1002,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":1027,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":1020,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":1135,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":1033,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":438,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":638,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":252,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":1003,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":427,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":1266,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":412,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":320,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":1203,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":765,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":1122,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":1121,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":1123,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":1057,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":682,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":1101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":724,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":1088,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":726,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":1104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":400,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":598,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":599,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":597,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":350,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":1134,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":1133,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":457,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":795,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":667,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":947,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":96,"org.apache.commons.collections4.map.LinkedMapTest.testClone":185,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":479,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":307,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":904,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":1091,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":309,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":497,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":1182,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":216,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":1031,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":394,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":1053,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":808,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":555,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":112,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":847,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":571,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":1072,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":255,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":244,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":836,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":430,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":837,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":557,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":582,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":1069,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":727,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":713,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":103,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":656,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":931,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":929,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":1114,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":1251,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":105,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":488,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":842,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":1244,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":212,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":704,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":1163,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":659,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":300,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":647,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":776,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":876,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":467,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":256,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":371,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":1013,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":393,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":865,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":363,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":585,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":936,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":206,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":976,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":151,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":791,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":755,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":1084,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":536,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":1004,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":446,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":543,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":1103,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":940,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":475,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":351,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":637,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":662,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":1192,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":1215,"org.apache.commons.collections4.map.LRUMapTest.testLRU":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":864,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":721,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":772,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":843,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":175,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":498,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":613,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":515,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":500,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":974,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":997,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":1259,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":702,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":781,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":915,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":281,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":481,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":995,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":680,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":945,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":807,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":823,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":871,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":852,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":450,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":853,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":938,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":1060,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":686,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":1183,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":24,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":279,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":253,"org.apache.commons.collections4.map.Flat3MapTest.testToString":629,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":139,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":610,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":1160,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":278,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":574,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":1018,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":1035,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":1149,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":321,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":822,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":987,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":989,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":1086,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":289,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":491,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":1127,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":1228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":46,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":268,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":556,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":1042,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":1083,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":1260,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":561,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":1180,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":1080,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":171,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":1243,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":1196,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":1177,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":806,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":956,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":1176,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":1232,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":56,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":366,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":226,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":829,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":526,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":804,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":1107,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":1111,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":948,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":615,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":148,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":617,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":1113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":425,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":618,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":200,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":996,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":723,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":1193,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":1205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":867,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":1009,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":833,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":860,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":211,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":849,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":198,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":875,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":910,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":532,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":783,"org.apache.commons.collections4.CollectionUtilsTest.transform1":312,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":824,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":418,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":1224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":1214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":897,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":1055,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":1157,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":965,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":426,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":552,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":756,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":1046,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":60,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":58,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":1146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":152,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":294,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":516,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":465,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":1066,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":330,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":1015,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":295,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":946,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":641,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":868,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":469,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":1141,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":334,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":977,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":1172,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":848,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":166,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":134,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":342,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":1225,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":661,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":1110,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":993,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":1167,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":144,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":519,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":1179,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":912,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":676,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":699,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":1058,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":719,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":838,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":858,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":941,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":455,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":240,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":827,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":1039,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":1202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":985,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":1112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":541,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":611,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":326,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":1148,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":705,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":1041,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":1040,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":1001,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":178,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":1014,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":990,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":1090,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":937,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":257,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":1119,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":1184,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":801,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":1230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":29,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":846,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":549,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":550,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":551,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":1235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":384,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":745,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":642,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":423,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":743,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":770,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":323,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":1233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":896,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":235,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":492,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":501,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":1236,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":828,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":890,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":715,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":487,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":1094,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":57,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":626,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":856,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":866,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":930,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":1019,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":184,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":47,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":121,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":1204,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":1185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":53,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":534,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":779,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":332,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":160,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":513,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":493,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":1226,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":625,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":690,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":1161,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":1212,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":161,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":576,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":840,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":329,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":692,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":707,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":376,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":722,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":1116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":1265,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":1254,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":830,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":1070,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":125,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":419,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":749,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":750,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":669,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":1016,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":711,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":1231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":63,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":1098,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":61,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":1229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":872,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":578,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":596,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":554,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":297,"org.apache.commons.collections4.map.LRUMapTest.testClone":242,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":339,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":980,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":1145,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":1130,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":531,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":1067,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":646,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":1120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":668,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":199,"org.apache.commons.collections4.ListUtilsTest.testSubtract":923,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":939,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":370,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":805,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":588,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":851,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":1081,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":877,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":953,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":18,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":1131,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":1271,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":1011,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":414,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":1186,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":788,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":470,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":546,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":547,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":1017,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":359,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":826,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":889,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":505,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":1209,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":1210,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":883,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":768,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":908,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":1166,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":1217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":729,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":888,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":1143,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":435,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":593,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":608,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":454,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":529,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":319,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":325,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":1065,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":483,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":428,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":420,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":920,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":903,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":1158,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":302,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":1142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":399,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":1245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":147,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":449,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":1129,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":563,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":1268,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":594,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":978,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":129,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":299,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":1201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":204,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":266,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":919,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":886,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":970,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":873,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":408,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":1064,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":207,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":183,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":839,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":315,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":192,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":471,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":764,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":472,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":958,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":884,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":364,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":566,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":697,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":182,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":1054,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":27,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":440,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":943,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":1126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":999,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":1118,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":1125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":1124,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":951,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":934,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":404,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":562,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":1174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":1044,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":1029,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":528,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":1140,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":568,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":612,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":988,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":301,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":681,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":709,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":739,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":369,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":1089,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":205,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":917,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":264,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":503,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":653,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":654,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":982,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":1239,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":1050,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":1025,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":456,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":1200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":774,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":964,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":991,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":1234,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":716,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":298,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":754,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":975,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":758,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":1028,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":911,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":880,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":813,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":760,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":1071,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":1105,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":293,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":778,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":900,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":639,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":744,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":1152,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":670,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":966,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":967,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":881,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":968,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":1164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":447,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":141,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":816,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":522,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":673,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":403,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":592,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":684,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":730,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":695,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":1000,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":343,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":898,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":355,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":762,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":759,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":815,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":998,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":80,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":1005,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":891,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":640,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":473,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":841,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":906,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":368,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":383,"org.apache.commons.collections4.set.CompositeSetTest.testContains":1199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":233,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":992,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":698,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":1082,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":789,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":417,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":1099,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":64,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":1261,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":693,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":413,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":545,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":143,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":583,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":752,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":688,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":1197,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":773,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":1022,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":1059,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":1150,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":972,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":922,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":1147,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":346,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":1198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":1030,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":109,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":102,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":360,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":478,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":1153,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":1267,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":800,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":82,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":720,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":1218,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":740,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":263,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":347,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":952,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":960,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":310,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":660,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":619,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":153,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":525,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":1173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":1144,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":1139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":111,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":859,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":777,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":927,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":439,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":1257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":54,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":146,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":587,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":145,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":914,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":396,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":1276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":193,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":708,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":1175,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":1269,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":374,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":651,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":652,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":696,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":650,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":1073,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":314,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":962,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":675,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":390,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":810,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":1178,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":644,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":831,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":738,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":1023,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":928,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":1074,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":1075,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":1256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":442,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":581,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":817,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":274,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":84,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":1238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":78,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":518,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":1024,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":796,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":635,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":1253,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":535,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":632,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":643,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":1237,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":411,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":461,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":1010,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":431,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":245,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":1223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":238,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":1211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":94,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":410,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":451,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":981,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":718,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":893,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":313,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":523,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":282,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":308,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":942,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":283,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":786,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":1170,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":462,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":784,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":1076,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":1108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":1007,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":1242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":433,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":763,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":1012,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":954,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":577,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":793,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":825,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":1248,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":271},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e985cb0d-13a1-11e5-93c1-153f4a7a2be9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"variableMap":{"size":"callCounter","endMarkerAllowed":"chainExhausted","index":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e985f21e-13a1-11e5-93c1-df9a5f828cae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"h","root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e985f21f-13a1-11e5-93c1-192c01c85e33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"predecessor","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e9861930-13a1-11e5-93c1-93df293bae6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"e9861931-13a1-11e5-93c1-17c1ab197fc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"hash","modifications":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"e9861932-13a1-11e5-93c1-1d7f563fb5c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e9864043-13a1-11e5-93c1-cbf5f5ef8b56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"tree","parent":"current","left":"current","root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"e9864044-13a1-11e5-93c1-e1b5de6e1df9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"e9866755-13a1-11e5-93c1-a5e462138acc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"e9866756-13a1-11e5-93c1-135eea7da91d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"e9868e67-13a1-11e5-93c1-37081f1512d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"maximumCacheSize","x":"size","k":"size","start2":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":0},{"failures":[],"tindex":"e9868e68-13a1-11e5-93c1-9b33e586514c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"e9868e69-13a1-11e5-93c1-d949ea418709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"y","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e98778ca-13a1-11e5-93c1-897fce221afd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:115","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.shrinkCacheToMaximumSize()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[119],"tindex":"e98778cb-13a1-11e5-93c1-3513efc7daae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"status":-1},{"failures":[],"tindex":"e98778cc-13a1-11e5-93c1-d1e794f84c74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311],"tindex":"e98778cd-13a1-11e5-93c1-b39059984fd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e9879fde-13a1-11e5-93c1-c3bae6245171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[312],"tindex":"e9879fdf-13a1-11e5-93c1-ab34b388d448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-1},{"failures":[],"tindex":"e9879fe0-13a1-11e5-93c1-83d33d5a66dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"e9879fe1-13a1-11e5-93c1-e3615bb63849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-2},{"failures":[313,314,315,316,151,317,318,190,207,243,244,274,319,320],"tindex":"e9879fe2-13a1-11e5-93c1-930328aabd52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V)"},"status":-1},{"failures":[],"tindex":"e9879fe3-13a1-11e5-93c1-15a9eb63f7df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"e9879fe4-13a1-11e5-93c1-655951c4df44","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[],"tindex":"e9879fe5-13a1-11e5-93c1-45e93f0e1811","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"e9879fe6-13a1-11e5-93c1-c77e4fdb780c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e987c6f7-13a1-11e5-93c1-21858d2e64fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[321,322,323,324,4,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,5,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"e987c6f8-13a1-11e5-93c1-7932df405751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[373],"tindex":"e987c6f9-13a1-11e5-93c1-9916c11a7be3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:191","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)))"},"status":-1},{"failures":[],"tindex":"e987c6fa-13a1-11e5-93c1-ff2720aee001","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"e987c6fb-13a1-11e5-93c1-2b3f14e0bbf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[40,41,43,44,45,47,48,50,53,54,90,91,93,94,95,97,98],"tindex":"e987c6fc-13a1-11e5-93c1-c9f9ee56a5a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"e987c6fd-13a1-11e5-93c1-9f1cfd3cca29","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"path","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[406,407,408,409,410,411],"tindex":"e987ee0e-13a1-11e5-93c1-e7e437a0107e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"k","proposedCapacity":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"e987ee0f-13a1-11e5-93c1-63e87dc6667b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"k","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[321,330,335,336],"tindex":"e987ee10-13a1-11e5-93c1-5d8821b1101c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"e987ee11-13a1-11e5-93c1-d71c8581fa9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"e987ee12-13a1-11e5-93c1-cba3bcf18d0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"tree","parent":"tree","left":"tree","root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"e9881523-13a1-11e5-93c1-87e713375a79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456],"tindex":"e9881524-13a1-11e5-93c1-33eebcd66588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"e9881525-13a1-11e5-93c1-15ce847edfa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"e9881526-13a1-11e5-93c1-4579a6a65fe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[457,457,458,458,459,460,461,462,463,464,465,466,467,468],"tindex":"e9881527-13a1-11e5-93c1-fd130c683114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[130,249],"tindex":"e9881528-13a1-11e5-93c1-372470486e99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e9881529-13a1-11e5-93c1-ef3d21097f23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[],"tindex":"e988152a-13a1-11e5-93c1-0b394e6e87ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"e9883c3b-13a1-11e5-93c1-03263d358153","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"predecessor","current":"predecessor","tree":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"e9883c3c-13a1-11e5-93c1-39285d776a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[411],"tindex":"e9883c3d-13a1-11e5-93c1-e15ad73f5786","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1364","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"null\")"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:581","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.Character)"},"status":-1},{"failures":[],"tindex":"e9883c3e-13a1-11e5-93c1-1b3fc373ca4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[469,470,471,472],"tindex":"e9883c3f-13a1-11e5-93c1-eb97098e6608","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"e9883c40-13a1-11e5-93c1-b381518d2386","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"e9883c41-13a1-11e5-93c1-6156c76e06bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"e9883c42-13a1-11e5-93c1-a943035485ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[],"tindex":"e9886353-13a1-11e5-93c1-9be767bdcba4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":0},{"failures":[],"tindex":"e9886354-13a1-11e5-93c1-b161ec1e0e49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"e9886355-13a1-11e5-93c1-bdae796839db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":0},{"failures":[],"tindex":"e9886356-13a1-11e5-93c1-c3653273514a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[617,618,619,310,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,320,644,645,311,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"e9886357-13a1-11e5-93c1-2f7a35ef41a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[668,669,670,671,672,673,674,675,676,677,678],"tindex":"e9886358-13a1-11e5-93c1-af57b4986ec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"size","maxElements":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[679],"tindex":"e9886359-13a1-11e5-93c1-9b79b9468594","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[],"tindex":"e988635a-13a1-11e5-93c1-4d8196880496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"e988635b-13a1-11e5-93c1-4b03ca16349f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"e9888a6c-13a1-11e5-93c1-03d4faae2ce8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-2},{"failures":[],"tindex":"e9888a6d-13a1-11e5-93c1-61bc7e05596d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"variableMap":{"size":"length","cnt":"length","i":"length","locks":"args"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[50,54,64,68,72],"tindex":"e9888a6e-13a1-11e5-93c1-df4ed49451cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"leftChild","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"e9888a6f-13a1-11e5-93c1-e992053a9790","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:62","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V>(org.apache.commons.collections4.OrderedBidiMap<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"e9888a70-13a1-11e5-93c1-53796748ccdb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924],"tindex":"e9888a71-13a1-11e5-93c1-37570a229e7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e9888a72-13a1-11e5-93c1-793ca7d67bc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[925,926,375,376,377,378,379,380,381,383,384,385,386,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980],"tindex":"e988b183-13a1-11e5-93c1-79f3782dbab7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"e988b184-13a1-11e5-93c1-4d6170ad5f66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"e988b185-13a1-11e5-93c1-9b4c67a23f57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"e988b186-13a1-11e5-93c1-b723b934ba55","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e988b187-13a1-11e5-93c1-8d44ce9b7992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[981,467],"tindex":"e988b188-13a1-11e5-93c1-cf24295ef989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[982,983,984,985,986],"tindex":"e988b189-13a1-11e5-93c1-0937f710e2b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"e988b18a-13a1-11e5-93c1-97b986e1724f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"rval","to":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"e988d89b-13a1-11e5-93c1-fb46e4875311","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,314,122,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,315,1030,1031,125,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,316,1068,1069,131,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,151,1092,1093,317,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,318,1115,1116,187,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,190,207,243,244,274,319,630,631,632,633,634,635,636,637,638,639,640,641,642,643,320,644,645,311,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667],"tindex":"e988d89c-13a1-11e5-93c1-bfbcf795e031","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[681,696,707,708,723,734,735,737,746,762,773,774,776,785,792,793,796,811,822,823,829,830,832,847,858,859,875,886,887,904,915,916],"tindex":"e988d89d-13a1-11e5-93c1-3328b36f2ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[680,681,1139,1140,683,668,684,685,686,687,688,689,690,691,692,693,694,695,696,682,697,698,699,700,701,703,704,705,706,1141,708,1142,1143,710,669,711,712,713,714,715,716,717,718,719,720,721,722,723,709,724,725,726,727,728,729,730,731,732,733,1144,734,735,670,736,737,1145,738,739,740,741,742,743,744,745,746,747,1146,1147,749,671,750,751,752,753,754,755,756,757,758,759,760,761,762,748,763,764,765,766,767,768,769,770,771,772,1148,773,774,672,775,776,1149,777,778,779,780,781,782,783,784,785,786,673,788,789,790,1150,793,794,795,796,1151,1152,798,674,799,800,801,802,803,804,805,806,807,808,809,810,811,797,812,813,814,815,816,817,818,819,820,821,1153,822,823,675,824,825,826,827,828,1154,829,830,831,832,1155,1156,834,676,835,836,837,838,839,840,841,842,843,844,845,846,847,833,848,849,850,851,852,854,855,856,857,1157,859,860,1158,1159,862,677,863,864,865,866,867,868,869,870,871,872,873,874,875,861,876,877,878,879,880,882,883,884,885,1160,887,888,889,1161,1162,891,678,892,893,894,895,896,897,898,899,900,901,902,903,904,890,905,906,907,908,909,910,911,912,913,914,1163,915,916,917,918,919,920,921,922,923,924],"tindex":"e988d89e-13a1-11e5-93c1-e53274c4fe43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e98926bf-13a1-11e5-93c1-65decfd6866a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[1164,1165,1166,1167,1168,1169,1170,986,1171,1172,1173,1174,1175,1176,1177,1178,1179,373,1180,1181,1182,1183,1184,1185],"tindex":"e98926c0-13a1-11e5-93c1-ab8ff92f1a86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"e98926c1-13a1-11e5-93c1-35c62f09a6bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[48,98],"tindex":"e98926c2-13a1-11e5-93c1-43b583966521","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196],"tindex":"e98926c3-13a1-11e5-93c1-df22f3d34583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[1197,1198],"tindex":"e98926c4-13a1-11e5-93c1-c5947a92f464","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e98926c5-13a1-11e5-93c1-51131e821930","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[],"tindex":"e98b97c6-13a1-11e5-93c1-13b26204e47d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"parent","parent":"left","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[1094,1092,1093,250],"tindex":"e98bbed7-13a1-11e5-93c1-8f176a43f4e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e98bbed8-13a1-11e5-93c1-f19c09369d39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"variableMap":{"coll":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"status":0},{"failures":[1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1164,1165,1166,1167,1168,1169,1170,986,1171],"tindex":"e98bbed9-13a1-11e5-93c1-e30322cb4099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[473,475,474,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616],"tindex":"e98bbeda-13a1-11e5-93c1-4b678abeb6df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()"},"variableMap":{"decorated":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[682,708,709,735,737,748,774,776,793,797,823,830,833,859,861,887,890,916],"tindex":"e98bbedb-13a1-11e5-93c1-f3ffc7028cdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[1211,1212,489,1213,95,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,347,1244,1245,1246,1247],"tindex":"e98bbedc-13a1-11e5-93c1-e569d1b7ab2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275],"tindex":"e98bbedd-13a1-11e5-93c1-833860dd4b1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[45,1276,95,1214],"tindex":"e98bbede-13a1-11e5-93c1-ff0502e688a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}