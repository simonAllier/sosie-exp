{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":300,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":338,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":167,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":507,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":730,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":830,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":519,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":584,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":651,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":207,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":683,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":795,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":866,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":308,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":790,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":766,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":530,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":623,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":259,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":566,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":108,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":763,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":255,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":304,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":249,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":645,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":246,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":536,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":737,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":368,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":407,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":803,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":678,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":113,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":388,"org.apache.commons.collections4.CollectionUtilsTest.select":564,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":734,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":331,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":487,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":176,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":514,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":520,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":838,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":436,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":459,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":810,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":370,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":147,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":387,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":416,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":317,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":750,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":309,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":545,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":215,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":41,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":408,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":502,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":355,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":479,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":222,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":301,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":675,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":267,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":764,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":521,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":538,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":785,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":715,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":670,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":758,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":633,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":83,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":770,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":797,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":836,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":189,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":430,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":218,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":725,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":287,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":406,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":788,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":669,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":69,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":98,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":480,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":650,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":44,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":751,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":180,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":427,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":615,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":752,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":334,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":587,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":283,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":316,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":535,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":352,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":689,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":687,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":850,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":26,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":375,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":379,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":456,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":782,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":768,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":558,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":432,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":828,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":792,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":647,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":769,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":81,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":729,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":823,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":405,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":779,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":203,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":297,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":789,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":664,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":660,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":299,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":226,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":747,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":59,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":698,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":174,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":702,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":749,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":762,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":642,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":294,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":547,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":504,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":616,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":511,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":107,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":72,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":555,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":235,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":132,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":482,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":533,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":595,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":791,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":351,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":709,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":711,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":710,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":835,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":820,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":489,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":512,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":743,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":4,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":384,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":363,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":391,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":385,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":657,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":695,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":343,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":776,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":849,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":834,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":760,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":576,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":291,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":501,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":268,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":265,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":465,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":714,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":359,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":831,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":353,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":395,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":629,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":454,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":550,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":860,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":634,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":854,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":671,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":303,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":198,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":856,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":819,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":582,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":767,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":799,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":258,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":493,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":575,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":574,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":571,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":570,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":573,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":572,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":419,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":569,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":568,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":658,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":266,"org.apache.commons.collections4.ListUtilsTest.testSelect":565,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":816,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":560,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":753,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":617,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":413,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":339,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":282,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":724,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":863,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":787,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":732,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":286,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":526,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":199,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":373,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":273,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":425,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":361,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":182,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":441,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":284,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":463,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":632,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":824,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":58,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":245,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":613,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":119,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":399,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":628,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":652,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":781,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":508,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":467,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":627,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":461,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":631,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":457,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":374,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":153,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":431,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":635,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":241,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":754,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":755,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":586,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":756,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":468,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":794,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":745,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":170,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":447,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":527,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":641,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":532,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":224,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":840,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":52,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":290,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":817,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":585,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":602,"org.apache.commons.collections4.map.Flat3MapTest.testToString":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":744,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":377,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":654,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":524,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":604,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":466,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":483,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":726,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":591,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":131,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":748,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":312,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":442,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":684,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":522,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":588,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":786,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":477,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":534,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":495,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":746,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":659,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":348,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":366,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":544,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":371,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":320,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":236,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":773,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":315,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":78,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":79,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":393,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":858,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":862,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":411,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":685,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":696,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":209,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":386,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":559,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":638,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":690,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":177,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":778,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":852,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":636,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":528,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":716,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":227,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":667,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":567,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":859,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":322,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":811,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":410,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":90,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":621,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":193,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":605,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":510,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":661,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":212,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":298,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":543,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":614,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":551,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":179,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":188,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":244,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":296,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":679,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":844,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":783,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":676,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":552,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":801,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":673,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":619,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":48,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":347,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":649,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":857,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":151,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":516,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":842,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":364,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":757,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":195,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":360,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":554,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":808,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":313,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":381,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":620,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":720,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":318,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":541,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":780,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":644,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":518,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":727,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":7,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":237,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":853,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":196,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":469,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":327,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":325,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":460,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":706,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":800,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":593,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":700,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":777,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":626,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":186,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":420,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":579,"org.apache.commons.collections4.ListUtilsTest.testSubtract":134,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":470,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":496,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":223,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":697,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":211,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":848,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":401,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":311,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":389,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":490,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":864,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":761,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":149,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":802,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":175,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":383,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":703,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":712,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":133,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":739,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":826,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":843,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":607,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":775,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":45,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":609,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":721,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":646,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":126,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":471,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":577,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":861,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":719,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":611,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":846,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":705,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":357,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":608,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":484,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":330,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":606,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":674,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":839,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":435,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":596,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":765,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":708,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":798,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":310,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":36,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":219,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":796,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":666,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":458,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":474,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":453,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":145,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":293,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":814,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":833,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":378,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":440,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":270,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":549,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":774,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":592,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":412,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":478,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":648,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":105,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":825,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":845,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":156,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":681,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":443,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":128,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":481,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":498,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":531,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":434,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":446,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":143,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":178,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":597,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":159,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":625,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":640,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":663,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":88,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":598,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":637,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":257,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":837,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":699,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":162,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":136,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":422,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":499,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":738,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":818,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":665,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":610,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":285,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":691,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":812,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":680,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":655,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":89,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":424,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":173,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":583,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":12,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":513,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":187,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":851,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":491,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":855,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":590,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":394,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":733,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":185,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":813,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":809,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":643,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":444,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":439,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":639,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":342,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":594,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":341,"org.apache.commons.collections4.CollectionUtilsTest.reverse":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":272,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":464,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":168,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":548,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":252,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":242,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":807,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":600,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":67,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":109,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":66,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":382,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":476,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":772,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":612,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":206,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":539,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":562,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":281,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":713,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":400,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":448,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":832,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":121,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":736,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":181,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":376,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":101,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":100,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":437,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":18,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":622,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":417,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":319,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":515,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":93,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":238,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":821,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":529,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":452,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":397,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":380,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":804,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":805,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":827,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":254,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":248,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":503,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":581,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":92,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":822,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":396,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":264,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":332,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":841,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":784,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":771,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":662,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":557,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":601,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":718,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":603,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":656,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":865,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":728,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":141,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":793,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":429},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"61ed4c50-139e-11e5-bc87-79aa2a54ade4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"61ed7361-139e-11e5-bc87-3fd69fcef1cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"61ed7362-139e-11e5-bc87-31a2890bcd28","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"61ed7363-139e-11e5-bc87-8fa5b2ab8380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"61ed7364-139e-11e5-bc87-194e53e7fd67","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"right","h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"61ed9a75-139e-11e5-bc87-55a57c4f716a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,31,88,89,90,91,92,32,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,33,109,110,111,112,113,114,115,116],"tindex":"61ed9a76-139e-11e5-bc87-17c75528e9d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"61edc187-139e-11e5-bc87-dd0483d0119f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[],"tindex":"61edc188-139e-11e5-bc87-259c2c04dfde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"61edc189-139e-11e5-bc87-f573c1cac63a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"normalMap","delegateMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[117],"tindex":"61edc18a-139e-11e5-bc87-61b480c10b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"61ede89b-139e-11e5-bc87-4b69e1f3e638","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"61ede89c-139e-11e5-bc87-7d513b28d164","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"variableMap":{"next":"next","hashCode":"length","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"61ede89d-139e-11e5-bc87-357e2c67d953","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:89","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return 0;\n} "},"status":0},{"failures":[118,119],"tindex":"61ee0fae-139e-11e5-bc87-a3b1af0bff0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"61ee0faf-139e-11e5-bc87-75d3c7ea3acd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129],"tindex":"61ee0fb0-139e-11e5-bc87-a5992ff84ea5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"61ee84e1-139e-11e5-bc87-ffbd686589de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-2},{"failures":[130,131,132,133],"tindex":"61ee84e2-139e-11e5-bc87-c5365763362f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"h","newCapacity":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"61ee84e3-139e-11e5-bc87-dd8116609410","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"parent","parent":"left","left":"parent","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"61eeabf4-139e-11e5-bc87-b5a5014919cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"61eeabf5-139e-11e5-bc87-2d1b69718a03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"61eeabf6-139e-11e5-bc87-c3d70ad99318","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[134,135,136,137,138,139,140,141,142,143,47,144,145,146,147,148,149,150,151,152,153,154,155,156,157,49,158,159,160,161,162,163,164,165,166,167,168,169,170,171,51,172,173,174,175,176,177,178,179,180,181,182,183,184,185,53,186,187,188,189,190,191,192,54,55,193,194,195,57,196,197,198,199,200,201,202,203,204,205,206,207,208,209,59,210,211,212,213,214,215,216,60,61,217,218,219,63,220,221,222,223,224,225,226,64,65,227,228,229,230,231,232,233,234,235,236,237,238],"tindex":"61eeabf7-139e-11e5-bc87-a99030905df1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"61eed308-139e-11e5-bc87-3945d90264be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[239,240],"tindex":"61eed309-139e-11e5-bc87-011edd5b49f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:295","type":"CtWhileImpl","sourcecode":"while ((java.lang.ref.ReferenceQueue<java.lang.Object>.poll()) != null) {\n}"},"variableMap":{"queue":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[241,242,243,244,245],"tindex":"61eed30a-139e-11e5-bc87-8547a1e37e91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[78,79,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,85,86,87,31,88,89,90,91,92,32,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,33,109,110,111,112,113,114,115,116],"tindex":"61eed30b-139e-11e5-bc87-276106e7f815","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,120,316,317,318,121,319,320,321,322,323,324,325,326,327,122,328,329,123,124,330,331,125,126,127,128,129],"tindex":"61eed30c-139e-11e5-bc87-3b1adde34611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[332,333,334,335,336,337],"tindex":"61eefa1d-139e-11e5-bc87-fd7c980670da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"d","d":"end1","vDown":"vUp","delta":"end2","end2":"d","this":"this","i":"start2","end1":"d","k":"start2","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[338,339,340,341,342,343,344,345],"tindex":"61eefa1e-139e-11e5-bc87-4710cd9405fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"61eefa1f-139e-11e5-bc87-cd48a7313d03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"child","current":"child","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"61eefa20-139e-11e5-bc87-974a79977a73","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"bitIndex","removeIndex":"bitIndex","currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[47,49,51,53,55,57,59,61,63,65],"tindex":"61ef2131-139e-11e5-bc87-651e0ac01b4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[47,49,51,53,55,57,59,61,63,65],"tindex":"61ef2132-139e-11e5-bc87-056f71dba84c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:202","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.AbstractMapBag<E>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"excess","modCount":"myCount","mods":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[346],"tindex":"61ef2133-139e-11e5-bc87-7df90d68fdfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"array","length":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1442","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"61ef2134-139e-11e5-bc87-3397f87b8ec3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":0},{"failures":[],"tindex":"61ef2135-139e-11e5-bc87-6d23afd20b81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[],"tindex":"61ef4846-139e-11e5-bc87-a9e00be3a87e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"61ef4847-139e-11e5-bc87-23c1bba5f2b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":0},{"failures":[347,348],"tindex":"61ef4848-139e-11e5-bc87-81717bb4622e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-1},{"failures":[260,261,263,264,265,266,268,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,44,557,558,559,45,560,561,562,563],"tindex":"61ef4849-139e-11e5-bc87-bf6d8d924ed9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"61ef6f5a-139e-11e5-bc87-376de5c3a1e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:128","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":0},{"failures":[564,565],"tindex":"61ef6f5b-139e-11e5-bc87-ff5e4e5e1ed6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"61ef6f5c-139e-11e5-bc87-e3beaeba8bef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"61ef6f5d-139e-11e5-bc87-c1f0b8b30468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[249,251,290,292,123,125,127,128,129],"tindex":"61ef6f5e-139e-11e5-bc87-438d21e1ac31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596],"tindex":"61ef966f-139e-11e5-bc87-d93e3f681127","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"61ef9670-139e-11e5-bc87-c9d2e9535a40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"61ef9671-139e-11e5-bc87-773448d942c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"61ef9672-139e-11e5-bc87-210f37a8a728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[66,67,69,80,81,82,83,84,85,86,87,31,88,89,90,91,92,32,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,33,109,110,111,112,113,114,115,116],"tindex":"61ef9673-139e-11e5-bc87-81e82b378363","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"61efbd84-139e-11e5-bc87-69ee5cf65371","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"61efbd85-139e-11e5-bc87-6572720a0d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-2},{"failures":[],"tindex":"61efbd86-139e-11e5-bc87-7b079d01907e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"status":-2},{"failures":[597,598,599,600,601,602,603,604,605,606,607,608],"tindex":"61efbd87-139e-11e5-bc87-37c7c1d9e112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"indent","expectedModCount":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[250,251,260,261,263,264,265,266,267,268],"tindex":"61efbd88-139e-11e5-bc87-3df08afeab1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"61efbd89-139e-11e5-bc87-ef7e976e730f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[609,610,611,612,348,613,614,615,616,617,618,619,620,621,622,623,624,625],"tindex":"61efe49a-139e-11e5-bc87-b3e9c12ed770","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"lastUsedIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"61efe49b-139e-11e5-bc87-db388ec1a228","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"61efe49c-139e-11e5-bc87-f9a8636648e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"61efe49d-139e-11e5-bc87-578c72b56e62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"61efe49e-139e-11e5-bc87-5ff498e9cfc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,350,351,702,352,353,354,355,703,356,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,358,359,747,360,361,362,363,748,364,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789],"tindex":"61f00baf-139e-11e5-bc87-c79fa8700dad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[790],"tindex":"61f00bb0-139e-11e5-bc87-6dfbbd866d37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[791,792,793,794,795,796,797,798,799,800,801,802,563,803],"tindex":"61f00bb1-139e-11e5-bc87-098c21447360","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"variableMap":{"this":"this","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[120,121,124,126],"tindex":"61f00bb2-139e-11e5-bc87-5f01285852d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"61f00bb3-139e-11e5-bc87-85d85db5723b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","right":"left","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"61f031c4-139e-11e5-bc87-496500517990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[],"tindex":"61f031c5-139e-11e5-bc87-795640c925a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[804,805,806,807,808,809,810,811,812,813],"tindex":"61f031c6-139e-11e5-bc87-afc1dfc8699d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()"},"status":-1},{"failures":[248,289],"tindex":"61f031c7-139e-11e5-bc87-d9b157bac3b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[120,121,123,124,126,127,128],"tindex":"61f031c8-139e-11e5-bc87-79f988bbc10b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from","replacement":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[814,611,815,816,817,818,819],"tindex":"61f031c9-139e-11e5-bc87-b5e21953bf78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"chainExhausted","beforeFirst":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"61f031ca-139e-11e5-bc87-6d6a03a3f6df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"61f031cb-139e-11e5-bc87-d360cf962a5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"61f058dc-139e-11e5-bc87-c791a674a16a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[],"tindex":"61f058dd-139e-11e5-bc87-05059c2083b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:244","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[820,821,822],"tindex":"61f058de-139e-11e5-bc87-778a7e3a8cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"61f058df-139e-11e5-bc87-c7a4b213710e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"left","current":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"61f058e0-139e-11e5-bc87-7b67597d5161","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"lengthInBits","proposedCapacity":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"61f058e1-139e-11e5-bc87-e97824e50d33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[823,824,825],"tindex":"61f07ff2-139e-11e5-bc87-07ebf19dc17f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"61f07ff3-139e-11e5-bc87-ab7adab8189a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"61f07ff4-139e-11e5-bc87-d5e3b1f5a3d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"61f07ff5-139e-11e5-bc87-3992cbcdcf76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:986","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"{\")"},"variableMap":{"out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[],"tindex":"61f07ff6-139e-11e5-bc87-b5fc74dbeaf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:58","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"status":0},{"failures":[],"tindex":"61f07ff7-139e-11e5-bc87-0760656323c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[],"tindex":"61f07ff8-139e-11e5-bc87-3fd9215fdd4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"61f07ff9-139e-11e5-bc87-d7a8902d3d1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean"},"status":-2},{"failures":[],"tindex":"61f07ffa-139e-11e5-bc87-cd72c63a211e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,821,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,822,864,865,866],"tindex":"61f0a70b-139e-11e5-bc87-519050da465a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"61f0a70c-139e-11e5-bc87-05311f294903","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>"},"status":-2},{"failures":[],"tindex":"61f0a70d-139e-11e5-bc87-17c31a3880e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:134","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>"},"status":-2},{"failures":[],"tindex":"61f0a70e-139e-11e5-bc87-8f4a6f246831","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"61f0a70f-139e-11e5-bc87-c75f723f13b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"61f0a710-139e-11e5-bc87-ebf15fed2f56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"convertedKey","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"61f0a711-139e-11e5-bc87-a340100f1dfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}