{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":194,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":369,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1154,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":358,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":692,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":731,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":818,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":331,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":574,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":880,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":641,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":1182,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":45,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":1176,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":1126,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":685,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":1011,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":1125,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":1240,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":1063,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":1129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":609,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":794,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":447,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":580,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":1186,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":616,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":1106,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":791,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":626,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":801,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":8,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":1233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":1060,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":812,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1145,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":1033,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":466,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":854,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":549,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":563,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":55,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":875,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":404,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":108,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":851,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":454,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":732,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":261,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":376,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":681,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1164,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":654,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":478,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":1184,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":937,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":137,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":424,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":437,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":640,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":131,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":223,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":37,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":403,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":510,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":394,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":597,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":778,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":1209,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":608,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":1064,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":583,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":161,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectHashCodeEqualsContract":379,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":691,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":564,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":1187,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":528,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":604,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":1057,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":1175,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":629,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":770,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":792,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":1044,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":367,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":963,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":468,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":827,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":203,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":633,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":910,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":192,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":1019,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":1159,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":767,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":663,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":740,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":786,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":803,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":1232,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":713,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":512,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":825,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":183,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":970,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":709,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":151,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":72,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":87,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":700,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":843,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":1052,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":562,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":840,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":350,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":869,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1142,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":546,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1246,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":238,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":1171,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":1144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":317,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":1234,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":779,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":1231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":265,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":491,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":1224,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":780,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":708,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":171,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":289,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":572,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":431,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":953,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":465,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":954,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":955,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":154,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":179,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":1150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":601,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":973,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":653,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveChangesMap":884,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":772,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":520,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":472,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":962,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":1099,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":950,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":677,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":1214,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":556,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":395,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":836,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":936,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":78,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":1189,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":796,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":157,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":415,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":1213,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":1191,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":242,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":40,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":371,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1152,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":191,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":679,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":1015,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":745,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":814,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":824,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":1025,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":846,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":1149,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":561,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":833,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":327,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":589,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":856,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":841,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":224,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":1049,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":865,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":862,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":199,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":1061,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":727,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":1029,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":1237,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":270,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":422,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":775,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":1183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":935,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":893,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":259,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":297,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":1028,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":490,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":634,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":777,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":897,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":724,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":1241,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":349,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":790,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":753,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":107,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":501,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":975,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":1226,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":746,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":943,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":756,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":968,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":599,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":1236,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":720,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":411,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":298,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":1212,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":280,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":1197,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":928,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":248,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":170,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":205,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":449,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":664,"org.apache.commons.collections4.ListUtilsTest.testPartition":644,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":15,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":463,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":1008,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":600,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":904,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":193,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":516,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":906,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":905,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":988,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":1078,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":617,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":669,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":456,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":374,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":858,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":888,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":621,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":1000,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":760,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":140,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":705,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":595,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":495,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":673,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":695,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":822,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":890,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":295,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":830,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":2,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":1097,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":873,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1157,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":180,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":690,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveAll":912,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":1018,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":1002,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":236,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":788,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":1139,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":1215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":1055,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":527,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":1112,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":967,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":996,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":585,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":699,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":909,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":652,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":1196,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":591,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":1192,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1155,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":657,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":883,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":997,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":1087,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":602,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":619,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":384,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":800,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":483,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":1118,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":480,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":804,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":1091,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":660,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":861,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":222,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":978,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":977,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":922,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":1059,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":218,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":974,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":319,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":951,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":1113,"org.apache.commons.collections4.map.LazyMapTest.testObjectHashCodeEqualsContract":459,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":750,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":795,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":733,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":1043,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":1138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":1137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1084,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":1134,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":1133,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":1136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":1135,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":366,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":1130,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":513,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":1132,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":1131,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":823,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":586,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":607,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":548,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":944,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":418,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":781,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1147,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":1227,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":932,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":1105,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":540,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":947,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":946,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":945,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":645,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":467,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":1173,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":842,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":1123,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1083,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":839,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":849,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":1108,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectHashCodeEqualsContract":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":624,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":1051,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":323,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":952,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":1045,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":17,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":1048,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":1047,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":100,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":593,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":1046,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":267,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":942,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":442,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":74,"org.apache.commons.collections4.CollectionUtilsTest.find":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":627,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":1050,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":1128,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":338,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":428,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":748,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":1037,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":736,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":1007,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":335,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":638,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":637,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":769,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":1034,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1148,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":852,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":761,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":388,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":747,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":293,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":719,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":819,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":835,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":998,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":370,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":976,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":1199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":610,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":656,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":799,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":1238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":1104,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":802,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.map.LRUMapTest.testLRU":960,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1115,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":555,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1110,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":312,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":101,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":283,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":805,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":686,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":782,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":783,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectHashCodeEqualsContract":473,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":784,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":25,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":533,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":990,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":153,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":1086,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":1193,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":773,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":126,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":175,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":197,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":476,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":576,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":752,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":462,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":115,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":182,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":116,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":917,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":1077,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":1058,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":689,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":132,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":1228,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":939,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":859,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":582,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":809,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":573,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":152,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":450,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":684,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":844,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":39,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":1039,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":612,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":710,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":927,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":776,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":982,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":578,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":881,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":1067,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":571,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":391,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":680,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":751,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":838,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":26,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":966,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1081,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":542,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":1225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":618,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":464,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":521,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":28,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":420,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":1243,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":860,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":1221,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":174,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":1220,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":649,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":498,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":552,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutAll":902,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":741,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":1035,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":711,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":281,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":172,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":518,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":758,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":1069,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1153,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":725,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":729,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":718,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":730,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":1116,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPut":899,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":1120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":667,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":989,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":882,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":313,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":1239,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":891,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":61,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":402,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":1003,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":416,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":329,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":768,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":672,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":806,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":665,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":885,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":262,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":832,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":275,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":1092,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":392,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":523,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":588,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":577,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":244,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":911,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":149,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":867,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":1072,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":1117,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":1023,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":1073,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":1071,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":215,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":348,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":566,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":694,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":1010,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":1017,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":941,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":158,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":1020,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":1216,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":110,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":372,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":1026,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":721,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":1195,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":728,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":611,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":863,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":987,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":1247,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":1211,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":715,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":77,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":474,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":755,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":1056,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":1223,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":421,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":264,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":150,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":687,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":96,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":876,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":526,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":1053,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":837,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":1014,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":771,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":507,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":697,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":995,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectHashCodeEqualsContract":407,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":1009,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":871,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":985,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":1229,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":285,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectHashCodeEqualsContract":446,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":169,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":1098,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":816,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":632,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":659,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":1174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":1114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":227,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":345,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":738,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":1012,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":368,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1082,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":409,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":452,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":785,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":870,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":592,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":971,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":874,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":410,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":60,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":1068,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":397,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":915,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":1230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":1070,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":471,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":579,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":834,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":811,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":363,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":136,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":252,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":606,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":1107,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":762,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":159,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":500,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":1016,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":958,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":300,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":957,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":1101,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":956,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":696,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":698,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":201,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":217,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":1103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":299,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":1177,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":301,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":485,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":470,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":1054,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":1076,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":1075,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":1074,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":505,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":425,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullValue":901,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":1024,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":337,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":983,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":831,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":895,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":661,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":798,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":127,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":514,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":271,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":496,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":666,"org.apache.commons.collections4.ListUtilsTest.testSubtract":351,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":535,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":739,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":522,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":124,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":173,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":114,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":460,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":892,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":75,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":492,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":9,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":1005,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":1096,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":390,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":1245,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":1066,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":318,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":405,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":457,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":1122,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":277,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":235,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":789,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":82,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":225,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":651,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":260,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":399,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":898,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":1210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":325,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":316,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":907,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":343,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":605,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":929,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":764,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":857,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":1093,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1169,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectHashCodeEqualsContract":486,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":829,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":934,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":417,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":965,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveAll":916,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":813,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":359,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":536,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":933,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":1030,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":1119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":1140,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":914,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":1094,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapPutNullKey":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":237,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":620,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":70,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":1244,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":845,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":315,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":1208,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":544,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":451,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":453,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":1200,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":920,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":1207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":872,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":919,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":969,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":1085,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":436,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":6,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":198,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":167,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":793,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":903,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":670,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":678,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":1109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":86,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":1065,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":671,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":707,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":766,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":1181,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":423,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":539,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":482,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":220,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":1190,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":147,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":1095,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1158,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":981,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":381,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":980,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":992,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":979,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":959,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":642,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":722,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":441,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":896,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":1218,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":503,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":828,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":984,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":125,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":314,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":29,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":543,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":676,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":734,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":787,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":815,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":445,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":921,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":737,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":704,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1170,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":232,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":1204,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":1242,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":878,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":926,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":1160,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":112,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":444,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":662,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":448,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":524,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":461,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":435,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":475,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":307,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectHashCodeEqualsContract":545,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":1194,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":206,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":706,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":263,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":515,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":949,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":808,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":864,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":723,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":1102,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":658,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":181,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":346,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":334,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":1202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":80,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":1203,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":924,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":754,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":797,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":1042,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1163,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":598,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":894,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":712,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":287,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":286,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":855,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":994,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":866,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":1027,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":245,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":213,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":1031,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":188,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":886,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":877,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":991,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":1041,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":999,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveChangesMap":820,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":488,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":940,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":99,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":257,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":1036,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":631,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":1038,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":986,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":148,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":674,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":291,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":972,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":1100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":643,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":1090,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":938,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":383,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":714,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":1013,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1080,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":1179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":850,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":204,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":647,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":701,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":688,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":294,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":810,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":333,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":1088,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":440,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":807,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":272,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":628,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":429,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":5,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":168,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":502,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":484,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":930,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":311,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectHashCodeEqualsContract":531,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":406,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":1172,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":923,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":341,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":1188,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":675,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":365,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":1141,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":398,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":541,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":757,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":1198,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":1217,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":550,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":931,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":330,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":1185,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":469,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":123,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":908,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":389,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1156,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":889,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":355,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":717,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":239,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":853,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":716,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":266,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":214,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":160,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":1219,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":1180,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":557,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":623,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":141,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":438,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":1146,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":635,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":636,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":511,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":1022,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":165,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":615,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":1222,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":284,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":1021,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":702,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetIteratorRemoveChangesMap":918,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1168,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":1201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":481,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":386,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":396,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":742,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":743,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":744,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":22,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":848,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":1062,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1151,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":190,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":683,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":887,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":439,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":1040,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":703,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":162,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":1178,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":655,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":19,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectHashCodeEqualsContract":432,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":529,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":569,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":458,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":1004,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":1121,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":385,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":961,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":584,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":1127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":1079,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":508,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":240,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":309,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":759,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":826,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":1143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":765,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":868,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":1089,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":948,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":553,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":925,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":879,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":726,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":414,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":1001,"org.apache.commons.collections4.map.TransformedMapTest.testObjectHashCodeEqualsContract":393,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRetainAll":913,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":1205,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":219,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":821,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":1006,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":1124,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":1206,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":964,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":763,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":1032,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":276,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":296,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":993,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":14,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":682,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":493},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"59c41eee-13bd-11e5-a63d-f56859ed7f24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[28],"tindex":"59c41eef-13bd-11e5-a63d-e5a41c58a0e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:82","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.SortedBag<E>.clear()"},"variableMap":{"bag":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[],"tindex":"59c41ef0-13bd-11e5-a63d-4be7d9bd62b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"59c44601-13bd-11e5-a63d-65b9ce3c9fcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"59c44602-13bd-11e5-a63d-73a8114a61e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"59c44603-13bd-11e5-a63d-cd59a3e9f9fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"59c46d14-13bd-11e5-a63d-592011efc14a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"a","b":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"59c46d15-13bd-11e5-a63d-31eec03dc706","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[],"tindex":"59c46d16-13bd-11e5-a63d-6933f8441746","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[353],"tindex":"59c46d17-13bd-11e5-a63d-2ff6aa6849bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"result","size":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[],"tindex":"59c46d18-13bd-11e5-a63d-1f511d4502ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:523","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object)"},"variableMap":{"key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1443","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Object[][int]"},"status":-2},{"failures":[354,355,356,357,358,359,360,361,362],"tindex":"59c46d19-13bd-11e5-a63d-f7ac8b3c6b5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"59c4942a-13bd-11e5-a63d-c58f01f8a27c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"59c4942b-13bd-11e5-a63d-cf0c257418e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607],"tindex":"59c4bb3c-13bd-11e5-a63d-39d0e211e2ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"59c4bb3d-13bd-11e5-a63d-2394648522a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:956","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:612","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[608,609,610,611,612,613,614,615,616,617],"tindex":"59c4bb3e-13bd-11e5-a63d-59953343c675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"59c4e24f-13bd-11e5-a63d-3b41cbca741f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:164","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"59c4e250-13bd-11e5-a63d-c5b374a33484","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"59c4e251-13bd-11e5-a63d-c51f858abd39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"parent":"parent","bitIndex":"bitIndex","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"59c4e252-13bd-11e5-a63d-9b3e1a90dac9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642],"tindex":"59c4e253-13bd-11e5-a63d-998fd5a2c815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[354,355,643,357,359],"tindex":"59c4e254-13bd-11e5-a63d-81c248080d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"59c50965-13bd-11e5-a63d-7f3605e59bf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:896","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.max().setRight(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = int - int;\n} "},"variableMap":{"sAbsolutePosition":"index","otherTreeMin":"root","s":"root","relativePosition":"index","currentSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-2},{"failures":[],"tindex":"59c50966-13bd-11e5-a63d-f38c67116815","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":0},{"failures":[644],"tindex":"59c50967-13bd-11e5-a63d-29eb53ab1426","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-1},{"failures":[634,645,640,646,647,648,649,650,651,652],"tindex":"59c50968-13bd-11e5-a63d-a55820815ef0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"h","predecessor":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,418,409,410,411,412,413,414,415,416,417,419,422,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733],"tindex":"59c50969-13bd-11e5-a63d-e952f17f1320","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"59c5307a-13bd-11e5-a63d-67005ee4e6de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"59c5307b-13bd-11e5-a63d-bb47615945f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":0},{"failures":[734,735,736,737,738,739,740,741],"tindex":"59c5307c-13bd-11e5-a63d-a58ded0ff113","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}"},"status":-1},{"failures":[742,743,744],"tindex":"59c5307d-13bd-11e5-a63d-0570f8bcaf75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"59c5307e-13bd-11e5-a63d-83ac90d66d02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"59c5307f-13bd-11e5-a63d-116007079cc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[72,108,145,182,217,254,317],"tindex":"59c53080-13bd-11e5-a63d-655974ebb88b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[745,746],"tindex":"59c53081-13bd-11e5-a63d-a9371c7d4735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"59c55792-13bd-11e5-a63d-71b2cd85490d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<E>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Set<E>)"},"status":0},{"failures":[],"tindex":"59c55793-13bd-11e5-a63d-0b73bb196c5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"siblingNode","currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1069","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"59c55794-13bd-11e5-a63d-bd1c1c6b35d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"59c55795-13bd-11e5-a63d-39b6ff8899fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"59c55796-13bd-11e5-a63d-a3e43c7d9bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"59c55797-13bd-11e5-a63d-2f20555e1f1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772],"tindex":"59c55798-13bd-11e5-a63d-45a2790dfdc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[773,774,590,591,775,592,593,594,595,776,596,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,747,800,801,802,748,803,804,805,749,806,807,808,752,753,809,810,811,812,813,814,815,816,817,818,819,754,820,821,822,823,824,825,826,757,758,827,828,829,830,831,832,833,834,835,836,837,759,838,839,840,841,842,843,844,762,763,845,846,847,848,849,850,851,852,853,854,855,764,856,857,858,859,860,861,862,863,765,864,865,866,766,867,868,869,767,870,871,872,770,771,873,874,875,876,877,878,879,880,881,882,883,772,884,885,886,887,888,889,890,891,892,893,894,895,896,599,600,897,601,602,603,604,898,605,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918],"tindex":"59c57ea9-13bd-11e5-a63d-1bd594924329","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[919,920,921,922,923,924,925],"tindex":"59c57eaa-13bd-11e5-a63d-d16a427606ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[926,927,928,929],"tindex":"59c57eab-13bd-11e5-a63d-9f8a1fe1ed09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"59c57eac-13bd-11e5-a63d-c777f18f7624","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[930,931,932,933,934,935,936,937,938,939],"tindex":"59c57ead-13bd-11e5-a63d-61ec21bea983","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"59c57eae-13bd-11e5-a63d-b93292871f56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[927,928,929],"tindex":"59c5a5bf-13bd-11e5-a63d-377b7b977f42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"59c5a5c0-13bd-11e5-a63d-b583247c85ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[654,655,656,657,658,940,941,659,660,653,661,942,663,664,666,667,668,669,670,671,662,672,943,926,927,929,944,945,946,947,948,949,950,951,409,410,412,413,414,415,952,416,417,418,419,953,954,955,956,957,958,959,960,961,962,963,964,687,688,690,691,692,693,965,694,695,686,696,966,699,700,702,703,704,705,967,706,707,698,708,968,711,712,714,715,716,717,969,718,719,710,720,970,971,972,973,974,975,976,723,724,726,727,728,729,730,731,722,732,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010],"tindex":"59c5a5c1-13bd-11e5-a63d-bf3bf9815f5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"oldCapacity","newCapacity":"newCapacity","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"59c5a5c2-13bd-11e5-a63d-a1dfdbe80eda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[657],"tindex":"59c5a5c3-13bd-11e5-a63d-2599a6c0996f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:279","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"59c5a5c4-13bd-11e5-a63d-95adb7004091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index","maxElements":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-2},{"failures":[1011,1012,1013,1014,1015,1016,1017,1018,363,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039],"tindex":"59c5ccd5-13bd-11e5-a63d-31974008a3fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"59c5ccd6-13bd-11e5-a63d-8ff221fd920a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[927,928,929],"tindex":"59c5ccd7-13bd-11e5-a63d-cbce254c4309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"59c5ccd8-13bd-11e5-a63d-9db24422bc2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[1040,1041,1042,1043,581,582,583,584,585,586,1044,587,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,354,1070,355,1071,1072,1073,1074,1075,1076,356,358,360,361,362,1077,1078],"tindex":"59c5ccd9-13bd-11e5-a63d-eb3ebbc61dcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[1079,1080,1081,1082,1083],"tindex":"59c5ccda-13bd-11e5-a63d-a74a648bbac9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"59c5ccdb-13bd-11e5-a63d-89dcf68d105e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1083,1121,1122,1123,1124,1125,1126],"tindex":"59c5ccdc-13bd-11e5-a63d-d1879fda2c6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == null) {\n    return super.createNode(E);\n} "},"status":-1},{"failures":[],"tindex":"59c5ccdd-13bd-11e5-a63d-a71989e6ca19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"59c5f3ee-13bd-11e5-a63d-35a8f9dc4c58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"result","decorated":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-2},{"failures":[1127,1128],"tindex":"59c5f3ef-13bd-11e5-a63d-8f7e0ec81bd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[654,655,656,657,658,659,660,653,661,663,664,665,666,667,668,669,670,671,662,672,673,409,410,411,412,413,414,415,416,417,418,419,422,675,676,677,678,679,680,681,682,683,674,684,685,687,688,689,690,691,692,693,694,695,686,696,697,699,700,701,702,703,704,705,706,707,698,708,709,711,712,713,714,715,716,717,718,719,710,720,721,723,724,725,726,727,728,729,730,731,722,732,733],"tindex":"59c5f3f0-13bd-11e5-a63d-c74b7e9f8cd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"59c5f3f1-13bd-11e5-a63d-7dfdd26c9e3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-2},{"failures":[1129],"tindex":"59c5f3f2-13bd-11e5-a63d-ed45be1f8528","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()"},"variableMap":{"coll":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:418","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"59c5f3f3-13bd-11e5-a63d-ff19cd4db202","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rightChild","replacement":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140],"tindex":"59c5f3f4-13bd-11e5-a63d-4b50c52c1156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"59c5f3f5-13bd-11e5-a63d-4d078fddec40","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"59c5f3f6-13bd-11e5-a63d-fde80fe6db70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-2},{"failures":[],"tindex":"59c61b07-13bd-11e5-a63d-b53827903c52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"item","obj":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"59c61b08-13bd-11e5-a63d-696b3b78f09d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[1141,1142,940,663,664,666,667,668,670,671,662,672,415,693,1143,1144,1145,1146,705,971,729],"tindex":"59c61b09-13bd-11e5-a63d-550981faff48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"59c61b0a-13bd-11e5-a63d-151cac211206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:350","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1082,1168,1169,1170,1090,1094,1095,1096,1097,1099,1100,1103,1091,1092,1111,1112,1113,1114,1116,1117,1118,1119,1120,1083,1121,1122,1125],"tindex":"59c61b0b-13bd-11e5-a63d-cb19d8c3f19e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"59c61b0c-13bd-11e5-a63d-63ea1f65d321","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"59c61b0d-13bd-11e5-a63d-6b21061f266e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"variableMap":{"this":"set","set1":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"59c61b0e-13bd-11e5-a63d-cd9ba81ad797","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:129","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()"},"status":-2},{"failures":[1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201],"tindex":"59c61b0f-13bd-11e5-a63d-5d916b2b76c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"59c61b10-13bd-11e5-a63d-458a92164a6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"59c61b11-13bd-11e5-a63d-291b59aeada0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} "},"status":0},{"failures":[1202,1203,1204,1205,1206,1207,1208],"tindex":"59c61b12-13bd-11e5-a63d-0b8936e0275f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[924,1209,1210,1211,1212,1213,925,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230],"tindex":"59c64223-13bd-11e5-a63d-859df1939154","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[1231,1232,1233,971],"tindex":"59c64224-13bd-11e5-a63d-f9ea18b04ba3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"59c64225-13bd-11e5-a63d-771f4a71b5ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246],"tindex":"59c64226-13bd-11e5-a63d-0bc94a086559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[78,114,151,291,335],"tindex":"59c64227-13bd-11e5-a63d-e17d23b55281","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"variableMap":{"e":"e","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[284],"tindex":"59c64228-13bd-11e5-a63d-d10e7b8ddc5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"59c64229-13bd-11e5-a63d-9bac1bf0f851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-2},{"failures":[10,1247,24],"tindex":"59c6422a-13bd-11e5-a63d-93f6c377f16b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[945],"tindex":"59c6422b-13bd-11e5-a63d-07072ae202a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:746","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()"},"status":-1},{"failures":[],"tindex":"59c6422c-13bd-11e5-a63d-35be5f664608","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":0},{"failures":[],"tindex":"59c6693d-13bd-11e5-a63d-512405395db9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"59c6693e-13bd-11e5-a63d-cb3d7596f404","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"59c6693f-13bd-11e5-a63d-095362cb0f9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"59c66940-13bd-11e5-a63d-25372c77027a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:134","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().set(int, E)"},"status":-2},{"failures":[],"tindex":"59c66941-13bd-11e5-a63d-6ba0021ced47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}