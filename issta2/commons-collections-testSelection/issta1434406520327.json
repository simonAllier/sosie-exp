{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":233,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":437,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":525,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":186,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":368,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":309,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":648,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":100,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":106,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":181,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":364,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":398,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":421,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":511,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":399,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":387,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":376,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":676,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":19,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":417,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":281,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":329,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":284,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":394,"org.apache.commons.collections4.CollectionUtilsTest.get":413,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":370,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":339,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":685,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":225,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":236,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":261,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":320,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":543,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":318,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":482,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":149,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":667,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":457,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":485,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":531,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":606,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":553,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":565,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":326,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":652,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":605,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":194,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":576,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":46,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":532,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":379,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":378,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":47,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":469,"org.apache.commons.collections4.CollectionUtilsTest.intersection":416,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":373,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":136,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":386,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":591,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":684,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":257,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":365,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":683,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":449,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":484,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":597,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":540,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":50,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":389,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":85,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":486,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":593,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":536,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":359,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":474,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":159,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":634,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":608,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":86,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":483,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":583,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":622,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":315,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":568,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":350,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":589,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":229,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":515,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":611,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":656,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":218,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":418,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":110,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":508,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":357,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":128,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":121,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":192,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":584,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":172,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":473,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":503,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":529,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":550,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":279,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":480,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":198,"org.apache.commons.collections4.CollectionUtilsTest.union":415,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":569,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":599,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":382,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":506,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":377,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":420,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":26,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":369,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":75,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":392,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":243,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":493,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":27,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":150,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":549,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":686,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":575,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":629,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":477,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":112,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":668,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":623,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":557,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":308,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":372,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":263,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":587,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":434,"org.apache.commons.collections4.map.LRUMapTest.testClone":435,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":671,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":580,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":145,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":537,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":487,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":271,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":590,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":658,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":535,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":330,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":522,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":122,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":646,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":367,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":456,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":180,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":669,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":567,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":541,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":471,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":604,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":453,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":231,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":516,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":137,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":340,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":642,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":245,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":664,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":661,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":657,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":30,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":163,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":442,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":109,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":260,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":384,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":603,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":125,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":406,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":258,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":660,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":615,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":103,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":647,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":635,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":411,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":631,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":29,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":530,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":206,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":563,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":654,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":13,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":620,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":659,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":542,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":674,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":501,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":581,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":644,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":687,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":164,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":650,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":653,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":439,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":636,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":108,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":574,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":207,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":601,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":216,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":310,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":286,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":446,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":499,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":679,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":54,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":405,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":274,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":2,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":649,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":282,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":637,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":201,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":419,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":407,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":266,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":313,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":219,"org.apache.commons.collections4.map.HashedMapTest.testClone":427,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":600,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":303,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":160,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":672,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":441,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":187,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":61,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":423,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":538,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":249,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":517,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":462,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":203,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":409,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":625,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":548,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":641,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":504,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":495,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":175,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":539,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":250,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":327,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":193,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":468,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":520,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":10,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":422,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":645,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":579,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":448,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":228,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":578,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":171,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":426,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":347,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":264,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":665,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":328,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":151,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":424,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":302,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":205,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":638,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":614,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":298,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":297,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":478,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":430,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":602,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":678,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":94,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":296,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":119,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":682,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":507,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":221,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":436,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":582,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":559,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":391,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":158,"org.apache.commons.collections4.map.LinkedMapTest.testClone":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":162,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":458,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":397,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":265,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":290,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":429,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":45,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":306,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":545,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":562,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":618,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":344,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":268,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":311,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":341,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":111,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":322,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":252,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":440,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":140,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":338,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":336,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":479,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":120,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":188,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":588,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":383,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":610,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":143,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":280,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":464,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":640,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":52,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":633,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":681,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":107,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":496,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":133,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":132,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":526,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":129,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":0,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":131,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":673,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":393,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":513,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":314,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":571,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":459,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":41,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":363,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":31,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":626,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":324,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":321,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":444,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":475,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":273,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":400,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":624,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":317,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":291,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":307,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":586,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":616,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":224,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":102,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":316,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":572,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":156,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":488,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":101,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":196,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":489,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":443,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":619,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":351,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":254,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":555,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":89,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":410,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":544,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":333,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":154,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":253,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":662,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":255,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":466,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":585,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":93,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":666,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":283,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":566,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":390},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"0298a9e6-13ac-11e5-b5c3-b56dd27036bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[],"tindex":"0298d0f7-13ac-11e5-b5c3-b197a542e6da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:137","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()"},"status":0},{"failures":[],"tindex":"0298d0f8-13ac-11e5-b5c3-1df886bedb8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1173","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) && (int > 0)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int];\n}"},"variableMap":{"data":"data","i":"length","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[11],"tindex":"0298d0f9-13ac-11e5-b5c3-f7d78a15ab5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:181","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"0298d0fa-13ac-11e5-b5c3-61969a428589","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"start2","index":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"0298f80b-13ac-11e5-b5c3-75c67cc805a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[12,13,14,15],"tindex":"0298f80c-13ac-11e5-b5c3-fbe345190eee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"0298f80d-13ac-11e5-b5c3-b177176d4905","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"0298f80e-13ac-11e5-b5c3-e3929293172f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"nodeList must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1468","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24],"tindex":"0298f80f-13ac-11e5-b5c3-177cebc0c3f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"02991f20-13ac-11e5-b5c3-718cfc4b8bc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34],"tindex":"02991f21-13ac-11e5-b5c3-5d791c439c55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"02991f22-13ac-11e5-b5c3-fd09582c9c5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"02991f23-13ac-11e5-b5c3-05f00eb7286c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"02991f24-13ac-11e5-b5c3-25c3235a6df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[35],"tindex":"02994635-13ac-11e5-b5c3-7d317b09dadd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:135","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-1},{"failures":[36],"tindex":"02994636-13ac-11e5-b5c3-7bc42e50d1a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[37],"tindex":"02994637-13ac-11e5-b5c3-978e7ee56272","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"02994638-13ac-11e5-b5c3-579d73acbbe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"029b4209-13ac-11e5-b5c3-e7f6e181bae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[38],"tindex":"029b420a-13ac-11e5-b5c3-cd4a02909c93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"029b420b-13ac-11e5-b5c3-5778a34cab17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[39],"tindex":"029b420c-13ac-11e5-b5c3-c1e10b41bd6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[],"tindex":"029b420d-13ac-11e5-b5c3-1b90d0bff5a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50],"tindex":"029b420e-13ac-11e5-b5c3-139d0b57bfaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"hasNext","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[51,52],"tindex":"029b420f-13ac-11e5-b5c3-351eb97255ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"029b4210-13ac-11e5-b5c3-31429ada17c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"029b6921-13ac-11e5-b5c3-ebeb5bfcf211","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-1},{"failures":[],"tindex":"029b6922-13ac-11e5-b5c3-c19973b2e7f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":0},{"failures":[],"tindex":"029b6923-13ac-11e5-b5c3-ebdcb6fd64cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"size","keys":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[92,93,94,95,96],"tindex":"029b6924-13ac-11e5-b5c3-b3ab1a267847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[97,98,99,100,101,102],"tindex":"029b6925-13ac-11e5-b5c3-e729b10e70ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"delta","d":"d","offset":"end2","vDown":"vDown","delta":"offset","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vDown","equator":"equator","end2":"end1","end1":"start1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"029b6926-13ac-11e5-b5c3-a71b1545f75a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"029b6927-13ac-11e5-b5c3-d1b8ae9edeab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:359","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.size()"},"status":-2},{"failures":[],"tindex":"029b6928-13ac-11e5-b5c3-058cc3081a90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":0},{"failures":[],"tindex":"029b6929-13ac-11e5-b5c3-9714f3bc0e3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"029b903a-13ac-11e5-b5c3-394b4bb219fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148],"tindex":"029b903b-13ac-11e5-b5c3-494f397b4d84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"029b903c-13ac-11e5-b5c3-c32eab05137c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"subSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"029b903d-13ac-11e5-b5c3-b13cac3460b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[149],"tindex":"029bb74e-13ac-11e5-b5c3-c12d929992a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"029bb74f-13ac-11e5-b5c3-810a2b1b9d15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"029bb750-13ac-11e5-b5c3-7d5deb0a4e6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[150],"tindex":"029bb751-13ac-11e5-b5c3-134cb0a79e02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[151,152,153,154,155,156,157,158,159,160],"tindex":"029bb752-13ac-11e5-b5c3-b91391a4ea49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"node","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"029bb753-13ac-11e5-b5c3-1d48bf87eab5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashCode","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"029bb754-13ac-11e5-b5c3-6169d0e95607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"029bb755-13ac-11e5-b5c3-fd23eee191a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],"tindex":"029bdd66-13ac-11e5-b5c3-efbbf61877cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"029bdd67-13ac-11e5-b5c3-f793e80dd9ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"029bdd68-13ac-11e5-b5c3-7771b6a57049","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"029bdd69-13ac-11e5-b5c3-2d242a3c0ef3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())"},"variableMap":{"lineage":"lineage","this":"this","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"tindex":"029bdd6a-13ac-11e5-b5c3-030ad45f0ba6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"deletedNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"029bdd6b-13ac-11e5-b5c3-ab35bd3d40d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1202","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"029c047c-13ac-11e5-b5c3-c38524b6eda6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"tindex":"029c047d-13ac-11e5-b5c3-69a4f6cdc8aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[293,294,295,296,297,298,299,300,301,302,303,92,304,305,306,307,308,309,310,311],"tindex":"029c047e-13ac-11e5-b5c3-478f3429ec84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"end","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[237,238,243,245],"tindex":"029c047f-13ac-11e5-b5c3-298b39aada91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"029c0480-13ac-11e5-b5c3-25e49febc51c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":0},{"failures":[40,41,42,43,44,312,45,46,47,48,49,50],"tindex":"029c0481-13ac-11e5-b5c3-a5ec9bb10085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"029c0482-13ac-11e5-b5c3-b7779e89a021","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[313,12,13,14],"tindex":"029c0483-13ac-11e5-b5c3-bff6b197c2b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"h","newCapacity":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[314,315,316,317],"tindex":"029c0484-13ac-11e5-b5c3-f5282b67d880","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"retval","index":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[12,313,13,14],"tindex":"029c2b95-13ac-11e5-b5c3-8b238c4235bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[318,319,320,151,152,321,322,323,324,325,326,327,328,329,153,154,330,155,156,157,158,159,160,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,231,359,232,233,360,234,235,236,361,362,363,364,365,366,367,368,369,370,371,237,372,373,374,238,375,376,377,378,379,380,239,240,381,241,382,383,242,243,384,385,244,245,246,247,248],"tindex":"029c2b96-13ac-11e5-b5c3-5974703fd50c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"029c2b97-13ac-11e5-b5c3-3f63d9b1cc4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[386,387,388,389,390,391,392,393,394,395],"tindex":"029c2b98-13ac-11e5-b5c3-35ebe49e83fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"029c2b99-13ac-11e5-b5c3-bb234a2f3099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:275","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K)"},"status":-2},{"failures":[125,135,138,396,397,398,399,400,401,402],"tindex":"029c2b9a-13ac-11e5-b5c3-6d9e4a18884c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"029c52ab-13ac-11e5-b5c3-33157176f1ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"029c52ac-13ac-11e5-b5c3-ed7a4ac52c65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-2},{"failures":[152,151,322,323,324,327,153,154,155,156,157,158,160,336,337,353,352,230,355,356,357,231,359,234,235,236,362,363,365,366,367,368,370,237,374,238,378,379,239,240,381],"tindex":"029c52ad-13ac-11e5-b5c3-d95bd467c4b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[403],"tindex":"029c52ae-13ac-11e5-b5c3-d5fe925a62df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1741","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[237,238,241,242,243,244,245,246,247,248],"tindex":"029c52af-13ac-11e5-b5c3-7154480f7599","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-1},{"failures":[],"tindex":"029c79c0-13ac-11e5-b5c3-93a7150c7038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"029c79c1-13ac-11e5-b5c3-0b66ddd2c86d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"029c79c2-13ac-11e5-b5c3-1f9f7da7f8f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"029c79c3-13ac-11e5-b5c3-c10b27a64cfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1085","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.reflect.Method.invoke(java.lang.Object, ((java.lang.Object[])(null)))))"},"variableMap":{"method":"object","obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1272","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator()"},"status":-2},{"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"029c79c4-13ac-11e5-b5c3-e738b4f77bc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[],"tindex":"029c79c5-13ac-11e5-b5c3-fd9c47fa9994","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"029c79c6-13ac-11e5-b5c3-29e3811f553a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"029c79c7-13ac-11e5-b5c3-39e52c6e7516","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"029ceef8-13ac-11e5-b5c3-67027ded7ac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[423,424],"tindex":"029ceef9-13ac-11e5-b5c3-b176e40a9daa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[135,138,125,396,397,399,400,401,402,398],"tindex":"029ceefa-13ac-11e5-b5c3-81b8dbee6865","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"029ceefb-13ac-11e5-b5c3-d3a78f9a2370","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"predecessor","h":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"029d160c-13ac-11e5-b5c3-a7ae5cc91dd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":0},{"failures":[425,426],"tindex":"029d160d-13ac-11e5-b5c3-4d71e6eb13ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"029d160e-13ac-11e5-b5c3-074a32778a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"029d160f-13ac-11e5-b5c3-6b91b1530e44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"029d1610-13ac-11e5-b5c3-0b41f23dce2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[427,428,429,430,431,432,433,434,435,436,437,438,439],"tindex":"029d1611-13ac-11e5-b5c3-6f8c9f1f25c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[440,441,442,443,444,445,261,446,447,448,449,450,451,452,453,454,455,456,457,262,263,458,459,460,461,462,463,264,464,465,466,467,468,469,470,471,472,473,474,475,265,266,267,476,477,478,479,480,481,268,482,483,484,485,486,487,488,489,490,491,492,493,494,269,270,495,496,271,497,498,499,500,501,502,503,504,505,272,506,507,273,508,509,510,511,512,513,274,514,515,516,517,518,519,520,521,522,523,524,525,275,276,526,527,528,529,530,531,277,532,533,534,535,536,537,538,539,540,541,542,543,544,278,279,545,546,280,547,548,549,550,551,552,553,554,281,555,556,557,558,559,560,561,562,282,283,563,564,565,566,567,568,569,570,284,285,571,572,286,573,574,575,576,577,578,287,579,580,581,582,583,584,585,586,587,588,589,590,591,288,289,592,593,594,595,596,597,598,290,599,600,601,602,603,604,605,606,607,608,609,610,291,292],"tindex":"029d1612-13ac-11e5-b5c3-077f44a15843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"size","start":"size","end":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[150,611,612,613],"tindex":"029d3d23-13ac-11e5-b5c3-772385695bd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[614,615,616,617,618,619,163,164,165,166,620,621,167,168,622,623,169,624,625,170,626,627,628,629,630,631,161,162,171,172,173,174,175,176,177,178,179,180,181,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,183,184,185,186,647,648,187,188,649,650,189,651,652,190,653,654,655,656,657,658,191,192,193,194,195,196,197,198,199,200,201],"tindex":"029d3d24-13ac-11e5-b5c3-d7a2c940fd44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"endMarkerAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[40,41,42,659,44,660,312,46,661,662,48,663,49],"tindex":"029d3d25-13ac-11e5-b5c3-e7e8e10a4fcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[664,36,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687],"tindex":"029d3d26-13ac-11e5-b5c3-73d74cfb886c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[],"tindex":"029d3d27-13ac-11e5-b5c3-731260bdf66d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-2},{"failures":[688],"tindex":"029d3d28-13ac-11e5-b5c3-ff516d429bde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}