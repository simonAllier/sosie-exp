{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":611,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":392,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":257,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":313,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":634,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":485,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":543,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":626,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":252,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":423,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":360,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":191,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":333,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":465,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":334,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":462,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":335,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":300,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":210,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":456,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":232,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":78,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":408,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":298,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":656,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":14,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":379,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":213,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":479,"org.apache.commons.collections4.CollectionUtilsTest.get":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":354,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":357,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":440,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":609,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":657,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":324,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":625,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":181,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":658,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":185,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":417,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":671,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":140,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":437,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":532,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":431,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":359,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":113,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":409,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":565,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":353,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":427,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":645,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":91,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":628,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":264,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":280,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":329,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":80,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":136,"org.apache.commons.collections4.CollectionUtilsTest.intersection":458,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":312,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":546,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":526,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":241,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":594,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":207,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":299,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":560,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":640,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":415,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":486,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":139,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":287,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":236,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":530,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":119,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":605,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":468,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":251,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":323,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":659,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":367,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":288,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":161,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":664,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":275,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":666,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":538,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":438,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":269,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":528,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":459,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":296,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":473,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":152,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":277,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":443,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":179,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":284,"org.apache.commons.collections4.CollectionUtilsTest.union":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":87,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":342,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":217,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":319,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":559,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":347,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":111,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":568,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":561,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":244,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":436,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsContract":418,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":346,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":469,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":386,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":400,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":574,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":572,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":673,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":383,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":165,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":569,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":570,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":571,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":227,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":615,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":597,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":208,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":598,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":556,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":331,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":448,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":638,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":435,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":663,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":194,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":369,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":563,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":17,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":238,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":196,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":226,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":488,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":489,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":338,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":350,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":420,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":311,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":245,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":482,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":545,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":566,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":318,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":395,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":229,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":396,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":270,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":154,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":484,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":477,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":325,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":649,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":430,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":608,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":145,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":370,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":478,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":258,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":617,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":646,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":235,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":315,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":105,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":351,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":642,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":171,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":345,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":652,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":343,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":612,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":99,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":643,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":496,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":292,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":393,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":445,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":205,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":174,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":247,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectHashCodeEqualsSelfHashCode":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":262,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":633,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":535,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":632,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":250,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":575,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":25,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":446,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":219,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":304,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":425,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":581,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":527,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":384,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":504,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":411,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":547,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":648,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":372,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":261,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":380,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":365,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":289,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":460,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":650,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":364,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":541,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":644,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":293,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":193,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":576,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":674,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":259,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":591,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":106,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":555,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":428,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":147,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":454,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":422,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":509,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":1,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":356,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":172,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":279,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":302,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":630,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":629,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":603,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":248,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":653,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":58,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":557,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":178,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":362,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":137,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":444,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":534,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":144,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":593,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":410,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":316,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":160,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":173,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":203,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":604,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":670,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":253,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":332,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":551,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":199,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":567,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":471,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":553,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":242,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":186,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":170,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":402,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":449,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":303,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":132,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":493,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":564,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":495,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":195,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":341,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":481,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":464,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":368,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":88,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":599,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":607,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":47,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":197,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":314,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":453,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":234,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":413,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":326,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":655,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":467,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":225,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":405,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":505,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":212,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":466,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":662,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":285,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":610,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":278,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":129,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":130,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":618,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":131,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":233,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":254,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":590,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":166,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":306,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":672,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.map.LRUMapTest.testLRU":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":579,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":501,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":371,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":589,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":548,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":163,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":667,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":451,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":508,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":146,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":389,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":102,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":476,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":665,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":308,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":520,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":322,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":104,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":282,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":57,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":434,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":122,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":309,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":455,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":621,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":190,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":522,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":206,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":426,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":398,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":480,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":381,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":536,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":237},"transformations":[{"failures":[],"tindex":"a1b5d4ee-13b3-11e5-bb4e-152f4327e013","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:482","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"a1b5fbff-13b3-11e5-bb4e-9926598cf6d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())).append('}')"},"status":0},{"failures":[],"tindex":"a1b5fc00-13b3-11e5-bb4e-837a4b48a686","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key3","length":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"a1b5fc01-13b3-11e5-bb4e-e5b751cd3a27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"a1b5fc02-13b3-11e5-bb4e-cb9efc3445cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"a1b62313-13b3-11e5-bb4e-1df8df72aa6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[97,98,99,100,101,102],"tindex":"a1b62314-13b3-11e5-bb4e-4b16773543c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"start1","vDown":"vUp","i":"y","k":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"a1b62315-13b3-11e5-bb4e-b1f886586597","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"code","newCapacity":"code","proposedCapacity":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[125,126],"tindex":"a1b62316-13b3-11e5-bb4e-317b885bb097","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a1b62317-13b3-11e5-bb4e-cfd266b48a66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[127],"tindex":"a1b64a28-13b3-11e5-bb4e-3dfdfbff6edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"a1b64a29-13b3-11e5-bb4e-811912b50fcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"a1b64a2a-13b3-11e5-bb4e-bf232bd73308","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"hashCode","index":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[128],"tindex":"a1b6713b-13b3-11e5-bb4e-5f8d241437cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[129,130,131,132,133,134,135,136,137,138,139],"tindex":"a1b6713c-13b3-11e5-bb4e-7ba6562156f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"a1b6713d-13b3-11e5-bb4e-67bbd436d981","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:110","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get(int)"},"variableMap":{"this":"this","m":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"status":-2},{"failures":[140,141,142,143],"tindex":"a1b6713e-13b3-11e5-bb4e-3bf1c185f764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a1b6713f-13b3-11e5-bb4e-5d66312ead60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a1b67140-13b3-11e5-bb4e-c14fdecb9ade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"a1b69851-13b3-11e5-bb4e-65c8859b2fe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[72,76,89,93],"tindex":"a1b69852-13b3-11e5-bb4e-7b275a76b46d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a1b69853-13b3-11e5-bb4e-cdd1e25f3662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294],"tindex":"a1b69854-13b3-11e5-bb4e-5b47a9a1f40d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[295,296,297,298,299,300,301,302,303,304,305,306],"tindex":"a1b69855-13b3-11e5-bb4e-afec8417770c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[155,199,255],"tindex":"a1b6bf66-13b3-11e5-bb4e-d7d403a0e14b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"o2","key2":"o2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a1b6bf67-13b3-11e5-bb4e-3399caf5b550","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"maxElements","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[307],"tindex":"a1b6bf68-13b3-11e5-bb4e-2749d9ba915c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:380","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"a1b6bf69-13b3-11e5-bb4e-9fa40e5597ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"a1b6bf6a-13b3-11e5-bb4e-cfa3ce3903fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[308,309,310,311,312,313,314,315,316,316,317,317,318,319],"tindex":"a1b6e67b-13b3-11e5-bb4e-b1537bf3bbd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"a1b6e67c-13b3-11e5-bb4e-63362c2bf978","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a1b6e67d-13b3-11e5-bb4e-59c1e4c47a7e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:192","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-2},{"failures":[],"tindex":"a1b6e67e-13b3-11e5-bb4e-077c5f0767e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[],"tindex":"a1b6e67f-13b3-11e5-bb4e-e944edd4bd3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"a1b70d90-13b3-11e5-bb4e-19ec08f00a90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[320,321,322,323,324],"tindex":"a1b70d91-13b3-11e5-bb4e-b7244d6288a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[325,326,327,328,329,330,331,128,332,333,334,335,336,337,338,339],"tindex":"a1b70d92-13b3-11e5-bb4e-e98a32787d91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[340],"tindex":"a1b70d93-13b3-11e5-bb4e-df95af9624c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1279","type":"CtReturnImpl","sourcecode":"return java.util.Enumeration<?>.nextElement()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"a1b70d94-13b3-11e5-bb4e-39f72f921b2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[154,155,156,157,159,160,162,165,172,173,177,178,179,181,182,183,184,185,186,187,188,191,193,199,225,226,227,254,255,256,257,259,260,262,265,275,276,277,279,280,281,282,283,284,285,286,289,291],"tindex":"a1b70d95-13b3-11e5-bb4e-a3d217b982f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a1b734a6-13b3-11e5-bb4e-8d2c8cf11e6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:92","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":0},{"failures":[],"tindex":"a1b734a7-13b3-11e5-bb4e-75287f14bd49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"a1b734a8-13b3-11e5-bb4e-918b7780019e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"a1b734a9-13b3-11e5-bb4e-333c27628927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[],"tindex":"a1b734aa-13b3-11e5-bb4e-5dc6935a8c74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"a1b734ab-13b3-11e5-bb4e-bbd5635f24de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:128","type":"CtForEachImpl","sourcecode":"for (final C C : java.util.Collection<? extends C>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C);\n}"},"status":-2},{"failures":[341,342,343,344,345,346,347,348],"tindex":"a1b734ac-13b3-11e5-bb4e-5361b74ef75c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"a1b75bbd-13b3-11e5-bb4e-b7690cf179a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[349,350],"tindex":"a1b75bbe-13b3-11e5-bb4e-4bd6c03798cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"nextCalled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"a1b75bbf-13b3-11e5-bb4e-7f3af02c19eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-2},{"failures":[],"tindex":"a1b75bc0-13b3-11e5-bb4e-e32511995670","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a1b75bc1-13b3-11e5-bb4e-ebf37ad620bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[351],"tindex":"a1b75bc2-13b3-11e5-bb4e-e933d7804c26","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:885","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<java.lang.String>.hasMoreElements()) {\n    final java.lang.String java.lang.String = java.util.Enumeration<java.lang.String>.nextElement();\n    final java.lang.Object java.lang.Object = java.util.ResourceBundle.getObject(java.lang.String);\n    java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"a1b75bc3-13b3-11e5-bb4e-81ee047d69b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"a1b75bc4-13b3-11e5-bb4e-db4a70bcf0ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"a1b75bc5-13b3-11e5-bb4e-6bec5fb78a5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"a1b782d6-13b3-11e5-bb4e-1d3edd271afd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":0},{"failures":[],"tindex":"a1b782d7-13b3-11e5-bb4e-8799e6e8d9d8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"a1b782d8-13b3-11e5-bb4e-779fcc7d72e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[352,353,354,355,356,357,358],"tindex":"a1b782d9-13b3-11e5-bb4e-b1c56ec282a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"status":-1},{"failures":[359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390],"tindex":"a1b782da-13b3-11e5-bb4e-298a6a6919cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[391,392,393,394],"tindex":"a1b782db-13b3-11e5-bb4e-539a8488d6bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"a1b782dc-13b3-11e5-bb4e-bb472bbc530b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"a1b7a9ed-13b3-11e5-bb4e-dd7aabbc9dea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"a1b7a9ee-13b3-11e5-bb4e-e34e0ed57ec7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"cnt","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a1b7a9ef-13b3-11e5-bb4e-bb191848b234","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"value","out":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[],"tindex":"a1b7a9f0-13b3-11e5-bb4e-531ded272567","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419],"tindex":"a1b7a9f1-13b3-11e5-bb4e-3d4c9e82ec2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-1},{"failures":[72,76,86,60,89,92,93,94,95,96],"tindex":"a1b7a9f2-13b3-11e5-bb4e-85ff3a888d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"yWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"a1b7a9f3-13b3-11e5-bb4e-3b737964035c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[],"tindex":"a1b7a9f4-13b3-11e5-bb4e-fb6de4a6fd1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:155","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.iterators.IteratorChain<E> org.apache.commons.collections4.iterators.IteratorChain<E> = new org.apache.commons.collections4.iterators.IteratorChain<E>()"},"status":-2},{"failures":[],"tindex":"a1b7d005-13b3-11e5-bb4e-e9d5e2657e8b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()"},"status":-2},{"failures":[420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"a1b7d006-13b3-11e5-bb4e-83b0c40746e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[436,437,438,439],"tindex":"a1b7d007-13b3-11e5-bb4e-8b43bbba1a1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"size","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[440,441,442,443,444,445,446,447,448,449,450,451,452],"tindex":"a1b7d008-13b3-11e5-bb4e-41336eb6fa77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[0,1,5,2,3,4,6,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,13,35,36,37,38,39,40,41,42,46,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,60,89,90,91,92,93,94,95,96],"tindex":"a1b7d009-13b3-11e5-bb4e-032ab91dc341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"a1b7d00a-13b3-11e5-bb4e-6f1d845eeb21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-2},{"failures":[],"tindex":"a1b7d00b-13b3-11e5-bb4e-97c3a6f495de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:551","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"oldCapacity","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"a1b7d00c-13b3-11e5-bb4e-19e9ddfd9e15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":0},{"failures":[129,130,131,132,133,453,134,135,136,137,138,139],"tindex":"a1b7f71d-13b3-11e5-bb4e-cd3b86db5014","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[454,455,456,457,458,459,460,461,462,463],"tindex":"a1b7f71e-13b3-11e5-bb4e-f9ac196b1066","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[464,465,466,467,468,469,470,471,472,473,474,460,103,104,105,106,475,107,108,109,110,476,111,112,113,114,477,478,115,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,116,117,498,118,119,499,120,121,500,501,122,123,124,502,503,504,505,506,507,298,508,509,510,511,299],"tindex":"a1b7f71f-13b3-11e5-bb4e-b3a2ed5a9c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[436],"tindex":"a1b7f720-13b3-11e5-bb4e-973ce733ddb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"a1b7f721-13b3-11e5-bb4e-cb102b0446a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"a1b7f722-13b3-11e5-bb4e-dfac89fad06d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"a1b7f723-13b3-11e5-bb4e-15ef67d73219","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"a1b7f724-13b3-11e5-bb4e-5f1956dc43b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"a1b7f725-13b3-11e5-bb4e-c1aba9e7ea47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:322","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"a1b7f726-13b3-11e5-bb4e-5bf00387c22a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,391,392,394,551,552,553,554,320,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,321,322,600,601,323,602,603,604,605,606,607,608,609,610,611,612,613,439,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646],"tindex":"a1b81e37-13b3-11e5-bb4e-65ac3ddc131a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"a1b81e38-13b3-11e5-bb4e-ef57c8604ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"lengthInBits","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[128,332],"tindex":"a1b81e39-13b3-11e5-bb4e-81d415610ab8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"a1b81e3a-13b3-11e5-bb4e-1112ebc764dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"p","parent":"right","left":"right","h":"p","right":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[647,648,649,650,651,454,455,652,653,654,655,457,458,656,459,460,461,462,463],"tindex":"a1b81e3b-13b3-11e5-bb4e-5b223c8a724c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[657,658,588,589,659,590,591,592,593,595,598,660],"tindex":"a1b81e3c-13b3-11e5-bb4e-f18c0fef009e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"a1b81e3d-13b3-11e5-bb4e-01f86475587c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"variableMap":{"entry":"next","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[661],"tindex":"a1b8454e-13b3-11e5-bb4e-7fccff0cbb06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[662,663,664,665,666,667,668,669,670,671,672,673,674],"tindex":"a1b8454f-13b3-11e5-bb4e-3f148cb44d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"a1b84550-13b3-11e5-bb4e-f99068ca6910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a1b84551-13b3-11e5-bb4e-8720888685dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}