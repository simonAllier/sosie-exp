{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":159,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":252,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":396,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":450,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":197,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":81,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":61,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":125,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":388,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":55,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":342,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":317,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":561,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":326,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":204,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":168,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":165,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":418,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":29,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":577,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":586,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":339,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":130,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":314,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":128,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":527,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":394,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":457,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":557,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":549,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":201,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":257,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":104,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testFullIterator":531,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":383,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":381,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":166,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":399,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":552,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":324,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":578,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":563,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":290,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":208,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":334,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":183,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":160,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":248,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":362,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":279,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":376,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":432,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":266,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":501,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":407,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":262,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":504,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":88,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":47,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":438,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":440,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":53,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":346,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":275,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":331,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":397,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":172,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":283,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":193,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":446,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":119,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":320,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":480,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testEmptyIterator":530,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":164,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":589,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":355,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":217,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":309,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":400,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":162,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":493,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":149,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":335,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":361,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":426,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":550,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":431,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":68,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":417,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":264,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":203,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":210,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":435,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":436,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":581,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":307,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":477,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":385,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":233,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":410,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":329,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":428,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":384,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":379,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":242,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":424,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":521,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":263,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":587,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":539,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":305,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":330,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":318,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":391,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":225,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":522,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":79,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":513,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":103,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":542,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":398,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":518,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":564,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":545,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":414,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":207,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":554,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":506,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":33,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":508,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":359,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":490,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":293,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":541,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testReset":524,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":198,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":374,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":350,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":259,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":553,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":126,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":371,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":310,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":525,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":226,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":487,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":395,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":468,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":340,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":560,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":408,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":292,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":322,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":425,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":576,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":511,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":258,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":280,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":282,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":409,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":189,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":304,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":488,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":14,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":481,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":75,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":73,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testEmptyIterator":526,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":390,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":540,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":536,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":231,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":332,"org.apache.commons.collections4.SetUtilsTest.testHashCode":351,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":270,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":566,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":245,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":420,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":584,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":458,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":366,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":151,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":212,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":299,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":462,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":298,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":463,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":472,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":300,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":461,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":295,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":297,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testNextKey":378,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":15,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyIterator":520,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":434,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":192,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":568,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":453,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":402,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":514,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":588,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":291,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":94,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":519,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":140,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":386,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":51,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":356,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":358,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":357,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":118,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":517,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":372,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":77,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":367,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":17,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":558,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":39,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":571,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":456,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":570,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":221,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":112,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":474,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":109,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":232,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":455,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":218,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":375,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":276,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":430,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":117,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":205,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":249,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":451,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":485,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":186,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":57,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":365,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":403,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":404,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":469,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":327,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":345,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":405,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":387,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":274,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":238,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":27,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":433,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":421,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":475,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":156,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":178,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":286,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":139,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":199,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":478,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":496,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":209},"transformations":[{"failures":[],"tindex":"892f87d6-13e5-11e5-875f-db8556bc6f3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"89357b47-13e5-11e5-875f-b3c0ad39872e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion == null) {\n    throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n} "},"variableMap":{"criterion":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"89357b48-13e5-11e5-875f-579810c06e89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:196","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"variableMap":{"this":"this","key":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[26,37,39,42,43,45,46,47,48,49],"tindex":"89377719-13e5-11e5-875f-f9801fdd89ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"89394bda-13e5-11e5-875f-53747280ddd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-2},{"failures":[],"tindex":"89394bdb-13e5-11e5-875f-05067f8cd841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"893972ec-13e5-11e5-875f-4d4cdd5e99b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"893972ed-13e5-11e5-875f-81021d807ced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"893972ee-13e5-11e5-875f-3fbbd7fa179f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"893972ef-13e5-11e5-875f-7b6dc246df86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"temp","b":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"893972f0-13e5-11e5-875f-e9c9b921fb83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[],"tindex":"89399901-13e5-11e5-875f-2706d9a2d8ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"replacement","replacement":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[127,128,129,130,4,5,6,7,8,131,132,9,133,134,135,10,11,136,12,13,14,15,137,16,138,139,140,141,17,18,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,19,20,26,21,22,23,157,24,25,158,159,160,27,28,29,161,162,30,31,163,32,33,34,35,164,36,165,37,166,38,39,167,168,169,40,41,170,42,43,44,171,172,173,45,174,175,176,46,177,47,48,49],"tindex":"89399902-13e5-11e5-875f-cf30a79d99db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"893fb383-13e5-11e5-875f-31fee2f2e35d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"deletedNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"893fda94-13e5-11e5-875f-bdeb63effbe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"893fda95-13e5-11e5-875f-271e4e92909f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:341","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"893fda96-13e5-11e5-875f-2f3f1ea79a4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[178],"tindex":"893fda97-13e5-11e5-875f-c1fb05d759b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[179,180,181,182,183,184,185,186,187,188,189,190],"tindex":"893fda98-13e5-11e5-875f-0962360526df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:108","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],"tindex":"893fda99-13e5-11e5-875f-75ffea6dd50d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"893fda9a-13e5-11e5-875f-113e8ea10540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[283,284],"tindex":"894001ab-13e5-11e5-875f-f3a4380c591c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"894001ac-13e5-11e5-875f-9304d743ae90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"total":"hash","hashCode":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"status":0},{"failures":[],"tindex":"894001ad-13e5-11e5-875f-b15f61be4eb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:251","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K)"},"status":-2},{"failures":[285],"tindex":"894001ae-13e5-11e5-875f-25e0dcdd2d5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"8942248f-13e5-11e5-875f-7bda1fb6f0fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[286,287,288,289,290,291,292,293,294],"tindex":"89422490-13e5-11e5-875f-218336c5c0aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[295,296,297,298,299,300,301,302,303,304,305],"tindex":"89422491-13e5-11e5-875f-a75e30e98d72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[1,2,3,306],"tindex":"89422492-13e5-11e5-875f-8dc6ba1e61cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[196,277,307],"tindex":"89424ba3-13e5-11e5-875f-6752b2b99061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"89424ba4-13e5-11e5-875f-915850465be5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"89424ba5-13e5-11e5-875f-57a6f2496f8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[308],"tindex":"89424ba6-13e5-11e5-875f-bf8716cb3a08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"89424ba7-13e5-11e5-875f-27d0a235a61a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"composite","i":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"89424ba8-13e5-11e5-875f-6b782786bb92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"89424ba9-13e5-11e5-875f-0b1c84f6c594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"89424baa-13e5-11e5-875f-45cc108f5e38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"yFormerLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"8943842b-13e5-11e5-875f-01b0e31ad7d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"8943842c-13e5-11e5-875f-33978d5b0f61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"8943ab3d-13e5-11e5-875f-eff3ae5582cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator();\n} "},"status":0},{"failures":[],"tindex":"8943ab3e-13e5-11e5-875f-318095101d99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"8943ab3f-13e5-11e5-875f-bd1bad9adc46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"deletedNode","y":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"894c84e0-13e5-11e5-875f-b70e6743ac70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":0},{"failures":[],"tindex":"894c84e1-13e5-11e5-875f-a10473aaf38b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"894c84e2-13e5-11e5-875f-21e9abf3b932","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"size":"modCount","cSize":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[321],"tindex":"894ea7c3-13e5-11e5-875f-8f291bcdc8e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[322,323,324,325,188],"tindex":"894ea7c4-13e5-11e5-875f-ef6a96084123","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"tindex":"894ea7c5-13e5-11e5-875f-9dd2793630a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[129,130,4,5,9,133,10,11,136,12,13,14,15,137,16,348,134,139,140,141,17,18,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,19,20,159,160,27,28,29,30,31,163,32,33,34,35,164,36,37,38,39,167,168,169,40,41,170,42,43,44,177,49,349,350],"tindex":"894eced6-13e5-11e5-875f-53900a6ad6ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"894eced7-13e5-11e5-875f-050b5037d7e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"894eced8-13e5-11e5-875f-39df9f7a5648","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"node","previous":"right","left":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[351],"tindex":"894eced9-13e5-11e5-875f-c17cae257cbd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[352,353,322,354,355,356,357,358,359,360,361,179,362,363,187],"tindex":"894eceda-13e5-11e5-875f-0b22af084c0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"i","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[364,365,366,367],"tindex":"894ecedb-13e5-11e5-875f-99221b854f13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[1,2,3,306],"tindex":"894ecedc-13e5-11e5-875f-975bc2e3bfbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"894ecedd-13e5-11e5-875f-bb36f41afb14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[368,369,370,371,372,373,374],"tindex":"894ecede-13e5-11e5-875f-d38aa725ce6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[128,127,129,130,4,5,6,7,8,131,132,9,133,135,10,11,136,12,13,14,15,137,16,138,134,139,140,141,17,18,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,19,20,26,21,22,23,157,24,25,158,159,160,27,28,29,162,30,31,163,32,33,34,35,164,36,165,37,161,166,38,39,167,168,169,40,41,170,42,43,44,171,172,173,45,174,175,176,46,177,47,48,49],"tindex":"894ecedf-13e5-11e5-875f-ef2d938176a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-1},{"failures":[375,376,377],"tindex":"894ef5f0-13e5-11e5-875f-b915063fbabb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"894ef5f1-13e5-11e5-875f-752c6e01f336","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"894ef5f2-13e5-11e5-875f-f17d6e473c84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"next","this":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[378,379,380],"tindex":"894ef5f3-13e5-11e5-875f-5590fe1251b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:148","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[103,113,116,117,120,121,122,123,124],"tindex":"894ef5f4-13e5-11e5-875f-730c7f5f77c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[381,382,383,384,385,386],"tindex":"894ef5f5-13e5-11e5-875f-37c719dc350f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"894ef5f6-13e5-11e5-875f-47948c836026","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"894ef5f7-13e5-11e5-875f-73ed516444e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"894ef5f8-13e5-11e5-875f-7b681b40f99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472],"tindex":"894ef5f9-13e5-11e5-875f-8f667191f0cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"894f1d0a-13e5-11e5-875f-e3feb27dd656","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,371,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"894f1d0b-13e5-11e5-875f-bba0373881a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[200,276,515],"tindex":"894f1d0c-13e5-11e5-875f-91bfcaa001d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1030","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"894f1d0d-13e5-11e5-875f-1d50f4569709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtIfImpl","sourcecode":"if (java.util.List<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>));\n    return java.util.List<E>;\n} "},"variableMap":{"list":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:212","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.selectRejected(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))"},"status":-2},{"failures":[129,516],"tindex":"894f1d0e-13e5-11e5-875f-73636954d006","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()"},"status":-1},{"failures":[],"tindex":"894f1d0f-13e5-11e5-875f-33884f8d196d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"894f1d10-13e5-11e5-875f-9fc42c04b8df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"894f1d11-13e5-11e5-875f-29a2b9d15d93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[296,297,298,299,300,301,302,303,304,305],"tindex":"894f1d12-13e5-11e5-875f-c7470eee844a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-1},{"failures":[517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533],"tindex":"894f1d13-13e5-11e5-875f-1fc444482d5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"endIndex","bitIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"status":-1},{"failures":[],"tindex":"894f1d14-13e5-11e5-875f-7d423ede2b8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"894f1d15-13e5-11e5-875f-fbf77ed4c0df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"894f4426-13e5-11e5-875f-d79f69c7f42a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"8953b0f7-13e5-11e5-875f-6ba20fb41caf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-2},{"failures":[],"tindex":"8953b0f8-13e5-11e5-875f-db8f970d9f32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:140","type":"CtIfImpl","sourcecode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} "},"status":-2},{"failures":[],"tindex":"8953b0f9-13e5-11e5-875f-7112cd2d7268","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"8953b0fa-13e5-11e5-875f-532a0a82549f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:86","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.keySet())"},"status":-2},{"failures":[],"tindex":"8953b0fb-13e5-11e5-875f-bf372173e56c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":0},{"failures":[37,39,174,177],"tindex":"8953b0fc-13e5-11e5-875f-1313b6aa188e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"8953b0fd-13e5-11e5-875f-4f24356ace8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[534,535,536,537,538,419,421,431,539,445,447,457,540,541,542,543],"tindex":"8953b0fe-13e5-11e5-875f-2909e218d4a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[544],"tindex":"8953d80f-13e5-11e5-875f-1940f160e079","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[4,5,10,11,12,13,14,15,137,16],"tindex":"8953d810-13e5-11e5-875f-9fa0e601ebc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"8953d811-13e5-11e5-875f-933748d7f00e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"8953d812-13e5-11e5-875f-550c9d56f926","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"variableMap":{"cmds":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:767","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580],"tindex":"8953d813-13e5-11e5-875f-2d5afe81ab70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-1},{"failures":[581,582,583,584,585,586,587],"tindex":"8953d814-13e5-11e5-875f-57cecd3dabb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:472","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.hasNext()) {\n    final java.util.Map.Entry<java.lang.Object, java.lang.Long> java.util.Map.Entry<java.lang.Object, java.lang.Long> = java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.next();\n    if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.util.Map.Entry<java.lang.Object, java.lang.Long>.getValue())) {\n        super.remove(java.util.Map.Entry<java.lang.Object, java.lang.Long>.getKey());\n        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.remove();\n    } \n}"},"status":-1},{"failures":[588,589],"tindex":"8953d815-13e5-11e5-875f-fbd6c44961a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8953d816-13e5-11e5-875f-4795f73d7f6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"8953d817-13e5-11e5-875f-c7f3cb1f7747","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:74","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}