{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":300,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":301,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":412,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":429,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":573,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":376,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":521,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":548,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":360,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":508,"org.apache.commons.collections4.CollectionUtilsTest.collect":571,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":386,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":546,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":86,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":431,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":509,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":279,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":543,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":244,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":286,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":518,"org.apache.commons.collections4.CollectionUtilsTest.get":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":350,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":505,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":387,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":583,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":3,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":530,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":365,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":369,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":414,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":472,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":482,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":57,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":569,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":252,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":168,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":246,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":74,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":175,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":39,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":247,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":259,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":242,"org.apache.commons.collections4.CollectionUtilsTest.transform2":570,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":226,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":345,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":306,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":432,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":441,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":324,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":512,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":260,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":399,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":366,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":195,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":400,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":146,"org.apache.commons.collections4.CollectionUtilsTest.intersection":542,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":233,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":520,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":278,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":221,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":66,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":271,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":281,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":439,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":523,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":176,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":417,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":268,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":434,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":497,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":296,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":41,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":172,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":214,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":445,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":54,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":159,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":388,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":317,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":552,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":229,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":580,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":423,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":440,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":219,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":475,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":95,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":311,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":544,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":436,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":341,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":426,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":321,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":363,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":150,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":255,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":293,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":328,"org.apache.commons.collections4.CollectionUtilsTest.union":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":230,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":27,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":50,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":122,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":485,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":572,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":483,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":545,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":251,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":490,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":397,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":491,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":504,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":408,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":562,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":61,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":506,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":478,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":565,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":238,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":480,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":489,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":351,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":458,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":202,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":390,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":582,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":344,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":373,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":467,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":457,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":224,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":124,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":64,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":46,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":558,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":257,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":464,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":112,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":448,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":342,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":553,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":589,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":528,"org.apache.commons.collections4.ListUtilsTest.testSubtract":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":269,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":474,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":85,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":177,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":111,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":313,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":267,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":18,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":104,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":563,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":503,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":372,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":557,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":272,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":148,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":72,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":455,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":37,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":453,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":522,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":60,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":98,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":147,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":336,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":312,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":368,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":568,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":337,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":380,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":14,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":550,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":262,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":261,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":254,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":36,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":513,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":534,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":465,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":332,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":121,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":357,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.ListUtilsTest.testHashCode":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":422,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":487,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":488,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":567,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":391,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":486,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":502,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":47,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":375,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":415,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":160,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":524,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":144,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":24,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":82,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":127,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":273,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":452,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":212,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":338,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":379,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":428,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":305,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":308,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":549,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":117,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":199,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":566,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":208,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":192,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":411,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":533,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":90,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":6,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":100,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":389,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":466,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":318,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":515,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":7,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":142,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":586,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":498,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":362,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":496,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":511,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":128,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":405,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":99,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":134,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":536,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":579,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":346,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":237,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":23,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":119,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":367,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":468,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":354,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":381,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":323,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":145,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":289,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":102,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":547,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":294,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":538,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":194,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":67,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":575,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":193,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":560,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":385,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":21,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":135,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":101,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":133,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":331,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":162,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":35,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":587,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":76,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":213,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":477,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":355,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":382,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":393,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":141,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":576,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":555,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":435,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":232,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":398,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":190,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":514,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":88,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":138,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":167,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":358,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":370,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":585,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":581,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":108,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":68,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":396,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":48,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":484,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":454,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":444,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":75,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":207,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":163,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":173,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":44,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":460,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":407,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":43,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":136,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":234,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":266,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":584,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":471,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":250,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":222,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":446,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":540,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":433,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":556,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":285,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":225,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":329,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":322,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":394,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":280,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":459,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":297,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":500,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":348,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":103,"org.apache.commons.collections4.map.LRUMapTest.testLRU":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":364,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":578,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":56,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":420,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":526,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":77,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":164,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":507,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":456,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":442,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":461,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":333,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":430,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":191,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":87,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":371,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":256,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":516,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":495,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":94,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":377,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":326,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":404,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":532,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":4,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":383,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":245,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":527,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":243,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":537,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":275,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":493,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":216,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":574,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":235,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":185,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":227,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":290,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":451,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":282},"transformations":[{"failures":[],"tindex":"20c7c196-13d2-11e5-9954-817ebb0c5995","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":0},{"failures":[],"tindex":"20caced7-13d2-11e5-9954-1173a3f31a96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<? extends E>.next()"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"20caced8-13d2-11e5-9954-8f42a4c9ff2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"20caf5e9-13d2-11e5-9954-999abe29c304","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"20caf5ea-13d2-11e5-9954-55025f9ee694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"20caf5eb-13d2-11e5-9954-67134a87a5f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[5],"tindex":"20cb1cfc-13d2-11e5-9954-ab9bc26b37d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277],"tindex":"20cb1cfd-13d2-11e5-9954-a731f312de9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"20cb922e-13d2-11e5-9954-a9b39de7cb2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:347","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1)"},"status":-2},{"failures":[],"tindex":"20cb922f-13d2-11e5-9954-71f079b03b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:104","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"variableMap":{"size":"length","defaultTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:65","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) == 0) {\n    return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.Transformer<? super I, ? extends O> == null ? org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer() : org.apache.commons.collections4.Transformer<? super I, ? extends O>));\n} "},"status":-2},{"failures":[],"tindex":"20cbb940-13d2-11e5-9954-c9a70be4670c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[278,279,280,281,282,283,284,285,286,287],"tindex":"20cbb941-13d2-11e5-9954-51d30a521e0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"20cbe052-13d2-11e5-9954-9dc4c03f0e60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtIfImpl","sourcecode":"if (java.util.Collection<C> instanceof java.util.List<?>) {\n    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n    for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n        java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n    }\n} else {\n    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n    java.util.Collection<C>.clear();\n    java.util.Collection<C>.addAll(java.util.Collection<C>);\n}"},"status":-2},{"failures":[288,289,290],"tindex":"20cbe053-13d2-11e5-9954-6917e8ec87c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"20cc0764-13d2-11e5-9954-0dfb2d74bec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372],"tindex":"20cc0765-13d2-11e5-9954-3fcedfe057b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"20cc2e76-13d2-11e5-9954-75f2bdb9a05a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[373,374,375,376,377,378],"tindex":"20cc2e77-13d2-11e5-9954-5dfaa5eb6821","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[379,380,381,382,383,384,385,386],"tindex":"20cc2e78-13d2-11e5-9954-45bf4daae82a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"callCounter","expectedModCount":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"20cc2e79-13d2-11e5-9954-dfad14664e64","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"20cc558a-13d2-11e5-9954-93a890baf4f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"20cc7c9b-13d2-11e5-9954-eb3e63f7ed58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"20d1d3cc-13d2-11e5-9954-cb78161f34dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:826","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        int++;\n    } \n}"},"status":0},{"failures":[],"tindex":"20d1d3cd-13d2-11e5-9954-1f506dfc056d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"20d1fade-13d2-11e5-9954-392702915ec9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"status":-2},{"failures":[],"tindex":"20d221ef-13d2-11e5-9954-dbd53d575efc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[387],"tindex":"20d221f0-13d2-11e5-9954-9d407b9a467a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:387","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[26,32,33,57,63,64,77,90,96,97,111,121,135,141,142,154,167,388,173,389,185,192,205,390,211,223,224,234,244,259,391,265],"tindex":"20d221f1-13d2-11e5-9954-d53db2f0e4fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"variableMap":{"size":"i","cnt":"i","i":"i","locks":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[392,393],"tindex":"20d24902-13d2-11e5-9954-23178eb5c432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"20d24903-13d2-11e5-9954-db252f59b13a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[394,395,396,397,398,399,400,401],"tindex":"20d24904-13d2-11e5-9954-39a835f4200d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[402,329,371],"tindex":"20d24905-13d2-11e5-9954-9163b0010b38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"variableMap":{"coll":"coll","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[403,404],"tindex":"20d24906-13d2-11e5-9954-7d1bf6b1557c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"20d3cfa7-13d2-11e5-9954-fff38e52f0a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"20d3f6b8-13d2-11e5-9954-afe68445f345","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"20d3f6b9-13d2-11e5-9954-8dd2d7464ff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"20d3f6ba-13d2-11e5-9954-19905c6721c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[423,424,425,426,427],"tindex":"20d3f6bb-13d2-11e5-9954-6f777ea4c4e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[373,374,375,376,377,378],"tindex":"20d41dcc-13d2-11e5-9954-ab807344be46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"end1","vDown":"vDown","delta":"end2","end2":"offset","this":"this","i":"end2","end1":"start1","k":"delta","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"20d41dcd-13d2-11e5-9954-1b724dcb7c4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"20d444de-13d2-11e5-9954-3977411331b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"predecessor","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:598","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[373,374,375,376,377,378],"tindex":"20d444df-13d2-11e5-9954-912191e56383","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"start2","delta":"end2","end2":"delta","this":"this","i":"start2","end1":"delta","k":"end2","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"20d444e0-13d2-11e5-9954-8165af5001c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[428,429,430,431,432,433,434,435,436,437,438],"tindex":"20d444e1-13d2-11e5-9954-afa1b1963adc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[428,429,430,431,432,433,434,435,436,437,438],"tindex":"20d46bf2-13d2-11e5-9954-cbb69a2424f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"20d46bf3-13d2-11e5-9954-89ec813ee84a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"20d46bf4-13d2-11e5-9954-9d6350d33c2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"entry","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[9,15,16,17,19,20,21,22,26,27,32,33,42,46,47,48,50,51,52,53,57,58,63,64,73,77,79,80,81,83,84,85,86,90,91,96,97,106,111,114,121,124,125,126,128,129,130,131,135,136,141,142,151,154,156,157,158,160,161,162,163,167,168,182,388,173,181,389,185,192,194,195,196,198,199,200,201,205,206,220,390,211,219,223,224,234,237,244,248,249,250,252,253,254,255,259,260,274,391,265,273],"tindex":"20d46bf5-13d2-11e5-9954-83550c61a591","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[439,440,441],"tindex":"20d49306-13d2-11e5-9954-872a0920c3d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:248","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"20d49307-13d2-11e5-9954-f1ec0d46836e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:273","type":"CtReturnImpl","sourcecode":"return boolean ? java.lang.Object : null"},"status":-2},{"failures":[],"tindex":"20d49308-13d2-11e5-9954-bd02bab0c081","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[442,443,444,445,446],"tindex":"20d49309-13d2-11e5-9954-4b74ddee9328","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"keyPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-1},{"failures":[0,1,447,448,2,3,4],"tindex":"20d4930a-13d2-11e5-9954-cd26bd60c33e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[449,450],"tindex":"20d4ba1b-13d2-11e5-9954-19f35cc91c83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[451,452,453,454,455,456,457,458,459,460,440,461,462,463,464,465,466,467,468,469,470,471,472,473,441,474,475,476],"tindex":"20d4ba1c-13d2-11e5-9954-f74949a56101","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[477,478,479,423,424],"tindex":"20d4ba1d-13d2-11e5-9954-6fa2808af49a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[],"tindex":"20d4e12e-13d2-11e5-9954-5f862ca1e89c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[480,481,482,483],"tindex":"20d4e12f-13d2-11e5-9954-255e26f3e62f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[484,485,486,487,488,489,490,491,406],"tindex":"20d4e130-13d2-11e5-9954-a1339488109c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"20d4e131-13d2-11e5-9954-27050a89cacf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[492,493,494,495,496,497,498,499,500,501,502,503,504,505,423,506,424],"tindex":"20d4e132-13d2-11e5-9954-43eba99b3985","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"20d4e133-13d2-11e5-9954-519a959eb528","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2161","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null"},"variableMap":{"e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:366","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<K, V>.getKey()"},"status":0},{"failures":[392,393,507,508,509,510,511,512,513,514],"tindex":"20d50744-13d2-11e5-9954-b5d9ce0ae6a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"20d50745-13d2-11e5-9954-f15e2e2116a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531],"tindex":"20d63fc6-13d2-11e5-9954-5753f314869d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[532,533,534,7,535,536,537,8,538,539,540,541,542,543,544,515,545,546,547],"tindex":"20d63fc7-13d2-11e5-9954-6fcae8ac4544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"20d666d8-13d2-11e5-9954-e3dfa9ab4542","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-2},{"failures":[548,549,550,513,514,512,551,552,553,554],"tindex":"20d666d9-13d2-11e5-9954-399e4caf2f2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"20d666da-13d2-11e5-9954-d3e97ed0d999","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"20d666db-13d2-11e5-9954-c72d41eb8ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"20d666dc-13d2-11e5-9954-8d9c0780790c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"variableMap":{"this":"normalMap","buffer":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[],"tindex":"20d68ded-13d2-11e5-9954-ff493f5c4c9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"a","defaultValue":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":-2},{"failures":[555,556,557,558,297,298,299,300,302,303,305,307,315,559,321,323,324,325,326,327,328,329,330,318,320,337,338,339,340,342,343,345,347,354,355,357,560,363,365,366,367,368,369,370,371,372,360,362],"tindex":"20d68dee-13d2-11e5-9954-f3d21af0d454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"20d68def-13d2-11e5-9954-d1cfbd0c3997","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"20d68df0-13d2-11e5-9954-7371b7289793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"variableMap":{"this":"set","collectionRetainAll":"setRetainAll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"20d6b501-13d2-11e5-9954-97cd42d7f9ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-2},{"failures":[561,562],"tindex":"20d6b502-13d2-11e5-9954-cdb68d766911","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"20d6b503-13d2-11e5-9954-91187f175b5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"20d6b504-13d2-11e5-9954-4f99635af6e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1282","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":-2},{"failures":[498,505],"tindex":"20d6b505-13d2-11e5-9954-2db1298a670d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"20d6b506-13d2-11e5-9954-ab4ea270e3c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[],"tindex":"20d6dc17-13d2-11e5-9954-479c3e4df315","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[563,564,565,566,567,568,569],"tindex":"20d6dc18-13d2-11e5-9954-43453b6aefec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"leastIndex","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"20d6dc19-13d2-11e5-9954-87e517ab3fac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"variableMap":{"out":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true)"},"status":-2},{"failures":[26,32,33,57,63,64,77,90,96,97,111,121,135,141,142,154,167,388,173,389,185,192,205,390,211,223,224,234,244,259,391,265],"tindex":"20d6dc1a-13d2-11e5-9954-853904693e3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[570,540,571],"tindex":"20d6dc1b-13d2-11e5-9954-7dec6f078749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[373,374,375,376],"tindex":"20d7032c-13d2-11e5-9954-8739c4ce88e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"delta","d":"end1","vDown":"vUp","delta":"start1","end2":"start2","this":"this","i":"offset","end1":"start2","k":"end1","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[572,573,574,302,323,324,329,342,365,366,371],"tindex":"20d7032d-13d2-11e5-9954-b1d325877005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"20d7032e-13d2-11e5-9954-a552350ec6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"20d7032f-13d2-11e5-9954-636aefa5ec08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"20d72a40-13d2-11e5-9954-0dc9694d5aef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"20d72a41-13d2-11e5-9954-b164bc88c05a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[575,576,577],"tindex":"20dc3352-13d2-11e5-9954-a1ec129ddf5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[578],"tindex":"20dc3353-13d2-11e5-9954-6565dc431a5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"20dc3354-13d2-11e5-9954-2fbc0e6872b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[37,68,101,146,228,233],"tindex":"20dc3355-13d2-11e5-9954-6182d6e1623a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:371","type":"CtReturnImpl","sourcecode":"return !((java.util.ListIterator<?>.hasNext()) || (java.util.ListIterator<?>.hasNext()))"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[548,549,579,580,513,552,581,582,583,584,585,586,587,588],"tindex":"20dc3356-13d2-11e5-9954-7de715b4bc58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"right","current":"previous","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[589],"tindex":"20dc5a67-13d2-11e5-9954-ed19f3daad90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[373,374,375,376,377,378],"tindex":"20dc5a68-13d2-11e5-9954-a7cc12c0a357","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"20dc5a69-13d2-11e5-9954-6bc4aeef31b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}