{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":582,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":529,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":120,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":593,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":475,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":303,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":791,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":679,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":735,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":732,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":636,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":753,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":140,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":646,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":504,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":723,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":654,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":584,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":92,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":559,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":624,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":260,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":366,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":534,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":146,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":700,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":342,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":768,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":752,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":733,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":547,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":421,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":754,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":688,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":712,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":680,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":713,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":332,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":465,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":640,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":556,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":675,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":496,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":644,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":124,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":389,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":586,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":519,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":123,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":282,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":266,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":542,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":775,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":774,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":94,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":147,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":363,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":561,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":772,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":664,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":112,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":575,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":697,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":741,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":726,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":47,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":131,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":784,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":256,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":711,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":592,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":785,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":346,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":336,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":660,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":190,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":441,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":516,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":353,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":196,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":70,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":621,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":159,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":297,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":554,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":779,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":444,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":564,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":639,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":270,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":626,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":576,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":272,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":472,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":716,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":468,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":103,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":121,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":739,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":756,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":580,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":244,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":408,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":657,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":677,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":581,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":788,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":81,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":375,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":738,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":737,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":777,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":454,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":549,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":611,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":261,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":541,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":340,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":769,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":612,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":59,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":792,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":574,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":367,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":671,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":773,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":577,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":265,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":139,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":285,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":374,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":115,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":794,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":731,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":787,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":113,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":449,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":740,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":386,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":331,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":83,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":391,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":569,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":528,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":755,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":570,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":610,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":786,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":338,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":210,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":430,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":31,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":262,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":515,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":522,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsSelfHashCode":246,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":702,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":351,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":312,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":517,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":305,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":750,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":451,"org.apache.commons.collections4.map.HashedMapTest.testClone":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":337,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":751,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":666,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":645,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":423,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":642,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":730,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":51,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":163,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":202,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":406,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":583,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":464,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":717,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":466,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":727,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":635,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":729,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":501,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":643,"org.apache.commons.collections4.map.LinkedMapTest.testClone":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":178,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":333,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":43,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":487,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":667,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":179,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":615,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":770,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":659,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":364,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":239,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":354,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":355,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":724,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":663,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":467,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":450,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":618,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":650,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":771,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":653,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":652,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":651,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":442,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":348,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":130,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":661,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":168,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":614,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":613,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":221,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":393,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":715,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":8,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":199,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":789,"org.apache.commons.collections4.map.LRUMapTest.testLRU":207,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":269,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":536,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":413,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":458,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":158,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":361,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":602,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":781,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":349,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":417,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":512,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":532,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":543,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":373,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":757,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":585,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":669,"org.apache.commons.collections4.map.Flat3MapTest.testToString":108,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":300,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":560,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":440,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":761,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":490,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":225,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":302,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":725,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":708,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":176,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":683,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":764,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":714,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":154,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":793,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":511,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":691,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":721,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":484,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":686,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":200,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":107,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":109,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":220,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":63,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":110,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":85,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":459,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":790,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":259,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":539,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":533,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":473,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":90,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":343,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":546,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":497,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":478,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":395,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":633,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":327,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":710,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":378,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":394,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":694,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":765,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":693,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":401,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":30,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":15,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":742,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":603,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":540,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":445,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":306,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":237,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":369,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":216,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":796,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":553,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":674,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":410,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":345,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":368,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":438,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":284,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":701,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":620,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":762,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":665,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":255,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":414,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":782,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":763,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":719,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":506,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":234,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":595,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":573,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":411,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":571,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":252,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":304,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":482,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":452,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":692,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":117,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":538,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":118,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":148,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":689,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":493,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":116,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":426,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":676,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":335,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":428,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":703,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":192,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":191,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":485,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":100,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":250,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":388,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":759,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":448,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":238,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":281,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":668,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":696,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":588,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":544,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":744,"org.apache.commons.collections4.map.LRUMapTest.testClone":230,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":565,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":56,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":435,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":734,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":84,"org.apache.commons.collections4.ListUtilsTest.testSubtract":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":722,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":372,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":249,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":552,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":728,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":167,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":783,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":760,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":271,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":557,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":409,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":341,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":462,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":520,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":296,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":42,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":594,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsSelfHashCode":251,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":295,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":279,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":461,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":630,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":290,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":622,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":699,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":289,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":219,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":257,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":240,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":746,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":6,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":87,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":704,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":681,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":88,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":357,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":747,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":405,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":227,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":280,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":558,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":436,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":670,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":67,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":204,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":749,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":647,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":434,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":16,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":460,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":567,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":718,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":311,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":73,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":136,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":137,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":767,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":97,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":416,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":596,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":780,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":453,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":745,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":392,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":396,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":344,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":555,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":183,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":521,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":398,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":623,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":52,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":518,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":572,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":562,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":283,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":634,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":226,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":214,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":524,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":380,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":420,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":470,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":419,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":662,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":399,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":397,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":523,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":625,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":242,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":125,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":231,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":437,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":382,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":429,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":299,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":215,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":424,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":599,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":415,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":301,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":384,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":316,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":402,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":656,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":530,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":505,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":629,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":778,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":267,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":795,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":568,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":46,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":142,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":111,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":797,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":474,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":433,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":658,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":491,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":698,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":587,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":579,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":619,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":748,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":258,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":609,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":431,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":133,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":578,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":91,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":477,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":162,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":308,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":690,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":503,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":128,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":307,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":486,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":566,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":707,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":591,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":678,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":525,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":96,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":502,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":49,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":122,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":127,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":705,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":68,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":641,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":276,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":323,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":182,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":500,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":236,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":498,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":60,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":40,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":287,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":288,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":404,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":758,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":385,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":479,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":77},"transformations":[{"failures":[],"tindex":"cf59aab0-13b0-11e5-b51a-e1eb7751fef5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"cf59d1c1-13b0-11e5-b51a-3f62f04fdb47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":0},{"failures":[],"tindex":"cf59d1c2-13b0-11e5-b51a-6730a7d3ac91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:457","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], (int + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n} "},"variableMap":{"array":"array","this":"root","index":"relativePosition","relativePosition":"relativePosition","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"cf59d1c3-13b0-11e5-b51a-35d9eec99e0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:369","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doWriteObject(java.io.ObjectOutputStream)"},"variableMap":{"this":"setOrder","out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"cf59f8d4-13b0-11e5-b51a-dfc0aa4ef7cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"end1","vDown":"vDown","delta":"end1","end2":"k","this":"this","i":"k","end1":"end1","k":"k","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"cf59f8d5-13b0-11e5-b51a-8dd266d2edf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[6],"tindex":"cf59f8d6-13b0-11e5-b51a-51bf9d7ccf9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cf59f8d7-13b0-11e5-b51a-9125548ba8c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cf59f8d8-13b0-11e5-b51a-a982b874fdec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"cf5a1fe9-13b0-11e5-b51a-3d9b5ae29dd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"cf5a46fa-13b0-11e5-b51a-41144839ab0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"cf5a46fb-13b0-11e5-b51a-8d52819d384a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"cf5a46fc-13b0-11e5-b51a-49e351652742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[103,104,105,106,107],"tindex":"cf5a46fd-13b0-11e5-b51a-d330b119814d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-1},{"failures":[],"tindex":"cf5a6e0e-13b0-11e5-b51a-afafcb9eb79e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"cf5a6e0f-13b0-11e5-b51a-1bfe15332329","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"left","root":"path","this":"this","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"cf5a6e10-13b0-11e5-b51a-0343ca00aa6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[108,109,110,111,46,112,47,113,114,115,116,117,118,119,120,121,122,123,48,49,124,50,51,52,125,126,53,127,54,128,129,55,56,130,131,132,133,134,135,136,137,57,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"cf5a6e11-13b0-11e5-b51a-6d1bb61fe137","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[6,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"cf5a9522-13b0-11e5-b51a-75108a9465cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cf5a9523-13b0-11e5-b51a-b9689530ee95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:918","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[7,163,8,164,165,9,10,166,11,167,12,168,13,14,15,16,17,169,18,19,20,170,21,171,22,23,24,25,26,27,28,29,172,173,30,31,32,33,174,175,176,177,178,179,180,181,182,183,184,185,36,37,38,39,40,186,187,41,42,43,44,188,189,190,191,192,45,193,48,49,50,51,52,125,126,53,54,55,56,141,194,195,196,197,198,199,58,59,60,61,62,200,63,64,65,66,201,202,203,204,67,205,206,207,68,69,70,71,82,83,84,85,86,208,87,88,89,90,209,93,94,95,96,97,210,211,98,99,100,101,212,213,214,215,216,217,218,219,220,221,222,223,224],"tindex":"cf5a9524-13b0-11e5-b51a-5ff8332ec084","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"cf5abc35-13b0-11e5-b51a-4b576bd11fde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"cf5abc36-13b0-11e5-b51a-0fc3accc65ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[225,226,227],"tindex":"cf5abc37-13b0-11e5-b51a-bf6884a03a66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[228,32,43,46,55,229,65,230,79,89,231,92,100,222],"tindex":"cf5abc38-13b0-11e5-b51a-313d50fe78b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[232,233,234,152,153,155,156,157,235,236,159,160,237],"tindex":"cf5abc39-13b0-11e5-b51a-d56fb17b003a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-1},{"failures":[],"tindex":"cf5abc3a-13b0-11e5-b51a-e1d8c7982ace","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"cf5abc3b-13b0-11e5-b51a-b982d8569983","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cf5abc3c-13b0-11e5-b51a-47ab94d948ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[],"tindex":"cf5abc3d-13b0-11e5-b51a-1da714873705","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"left","tree":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[238,239],"tindex":"cf5ae34e-13b0-11e5-b51a-3d9e9def99de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"cf5ae34f-13b0-11e5-b51a-9d11a26a7d24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"cf5ae350-13b0-11e5-b51a-65abc9113f84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-2},{"failures":[240,241],"tindex":"cf5ae351-13b0-11e5-b51a-9f4bf2ce4f87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"cf5ae352-13b0-11e5-b51a-1bf89eee3bc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:128","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null;\n} else if (K == null) {\n    return false;\n} "},"status":0},{"failures":[242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270],"tindex":"cf5ae353-13b0-11e5-b51a-afdad967d81c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[],"tindex":"cf5ae354-13b0-11e5-b51a-2b8666074725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[271,272,273,274,275,276,277,278,279,280,281],"tindex":"cf5b0a65-13b0-11e5-b51a-8b97543753e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtIfImpl","sourcecode":"if (java.lang.Long != null) {\n    final long long = java.lang.Long.longValue();\n    return (long >= 0) && (long >= long);\n} "},"status":-1},{"failures":[],"tindex":"cf5b0a66-13b0-11e5-b51a-537066496ff0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"h","composite":"key1","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"cf5b0a67-13b0-11e5-b51a-d3619377b2dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"cf5b0a68-13b0-11e5-b51a-3dc8d69c8292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[119],"tindex":"cf5b0a69-13b0-11e5-b51a-d1720d3365da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"cf5b0a6a-13b0-11e5-b51a-3d445fd893b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"x","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":0},{"failures":[],"tindex":"cf5b317b-13b0-11e5-b51a-bdc549623fed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key5","entry":"next","key2":"key5","key5":"key1","previous":"next","hashCode":"hashCode","key3":"key2","key4":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"cf5b317c-13b0-11e5-b51a-b9aeef7e48e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cf5b317d-13b0-11e5-b51a-3ba6d216e915","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:248","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((V) == null) {\n                return true;\n            } \n        case 2 :\n            if ((V) == null) {\n                return true;\n            } \n        case 1 :\n            if ((V) == null) {\n                return true;\n            } \n    }\n} else {\n    switch (int) {\n        case 3 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 2 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n        case 1 :\n            if (java.lang.Object.equals(V)) {\n                return true;\n            } \n    }\n}"},"status":-2},{"failures":[],"tindex":"cf5b317e-13b0-11e5-b51a-9701c5a4c0af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[282,283,284,285,286,287,288,289,290],"tindex":"cf5b317f-13b0-11e5-b51a-cbcea5fb7555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true)"},"status":-1},{"failures":[291,292,293,294,295,296,297,298,299,300,301],"tindex":"cf5b3180-13b0-11e5-b51a-5d0b9def7d8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"cf5b3181-13b0-11e5-b51a-63b85b539df4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cf5b3182-13b0-11e5-b51a-b7b055a846e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":0},{"failures":[],"tindex":"cf5b5893-13b0-11e5-b51a-cf4d537c5a8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"length","buckets":"args","length":"length","cnt":"length","locks":"args"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[302,303,304,305,306,307,308,309,310],"tindex":"cf5b5894-13b0-11e5-b51a-c74ac6927612","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,242,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,245,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,250,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,253,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,256,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,263,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,266,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575],"tindex":"cf5b5895-13b0-11e5-b51a-395a4fde74fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cf5b5896-13b0-11e5-b51a-391a1d5fb155","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[],"tindex":"cf5b5897-13b0-11e5-b51a-9b8304cc7baf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"cf5b5898-13b0-11e5-b51a-1b4be9080dd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"cf5b7fa9-13b0-11e5-b51a-6b506e2f7eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-2},{"failures":[113,114,115,116,117,118],"tindex":"cf5b7faa-13b0-11e5-b51a-ab6d503959b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"cf5b7fab-13b0-11e5-b51a-b98d02b43630","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"variableMap":{"count":"object","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":0},{"failures":[],"tindex":"cf5b7fac-13b0-11e5-b51a-b9600ae7c1b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"cf5b7fad-13b0-11e5-b51a-8dc189a6537e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[576,577],"tindex":"cf5b7fae-13b0-11e5-b51a-270079ddcff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"variableMap":{"set":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cf5b7faf-13b0-11e5-b51a-215422339778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"cf5b7fb0-13b0-11e5-b51a-b196fd4c4955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[108,109,110,111,46,112,47,113,114,115,116,117,118,119,120,121,122,123,48,49,124,50,51,52,125,126,53,127,54,128,129,55,56,130,131,132,133,134,135,136,137,57,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"cf5b7fb1-13b0-11e5-b51a-f78fc69bc1ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[28,31,174,39,42,51,54,141,578,85,88,209,96,99,212,216,221,224],"tindex":"cf5ba6c2-13b0-11e5-b51a-ebc6d70ce914","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597],"tindex":"cf5ba6c3-13b0-11e5-b51a-117be70bd683","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"cf5ba6c4-13b0-11e5-b51a-1f05df3dafbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"cf5ba6c5-13b0-11e5-b51a-57870a8a1353","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"cf5ba6c6-13b0-11e5-b51a-0196e73f625b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"cf5ba6c7-13b0-11e5-b51a-73cd96713578","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":-2},{"failures":[],"tindex":"cf5ba6c8-13b0-11e5-b51a-7b03cd1d862d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"cf5bcdd9-13b0-11e5-b51a-d55a8bf5ecab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"cf5bcdda-13b0-11e5-b51a-214940fbd702","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622],"tindex":"cf5bcddb-13b0-11e5-b51a-cd505a32e2d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"h":"h","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,580,674,581,582,675,585,583,584,676,677,678,679,680,681,682,683,684,685,686,586,687,688,689,587,690,691,692,693,694,695,588,589,696,590,697,698,591,592,699,700,593,594,595,596,597],"tindex":"cf5bcddc-13b0-11e5-b51a-3da85c661bb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cf5bcddd-13b0-11e5-b51a-e1d074af1e57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"cf5bcdde-13b0-11e5-b51a-f3d87e94eddc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:183","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[],"tindex":"cf5bcddf-13b0-11e5-b51a-2f2dd595e78d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[333,349,350,351,364,701,379,702,385,399,415,416,418,431,703,446,459,475,476,484,485,489,499,502,515,531,532,546,704,561,564,574],"tindex":"cf5bf4f0-13b0-11e5-b51a-c571f48d6628","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"cf5bf4f1-13b0-11e5-b51a-8f82b362b97d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"cf5bf4f2-13b0-11e5-b51a-e54a80d2a3c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[705,706,707],"tindex":"cf5bf4f3-13b0-11e5-b51a-e11c1c2f886a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"cf5bf4f4-13b0-11e5-b51a-c1227575c037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"cf5bf4f5-13b0-11e5-b51a-d54cd0bcf9f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cf5bf4f6-13b0-11e5-b51a-9758ceca857d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[630,631,637,638,640,641,642,643,645,579,671,672,673,580,581,582,677,678,679,680,681,682,683,685,586,689,587],"tindex":"cf5bf4f7-13b0-11e5-b51a-71d245f3dea1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"cf5bf4f8-13b0-11e5-b51a-53daf4f3b77a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"lengthInBits","removeIndex":"lengthInBits","currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[165,9,167,168,708,169,18,170,171,709,710,711,33,712,713,714,174,715,716,717,718,719,720,178,179,180,181,183,184,185,44,191,192,721,193,722,723,724,725,726,727,120,121,122,56,136,137,138,141,142,145,146,147,148,149,194,197,198,199,66,203,204,205,206,728,729,730,731,732,733,734,735,736,80,737,738,739,740,741,742,743,744,745,746,747,748,749,86,90,750,751,752,209,753,754,755,756,757,758,759,760,761,101,762,763,764,212,765,766,767,768,769,770,771,772,773,223,774,775,776,224,777,778,779,780,781,782],"tindex":"cf5bf4f9-13b0-11e5-b51a-0de8369f6143","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[783,784,785,786,787,788,789,790,791,792,793],"tindex":"cf5c1c0a-13b0-11e5-b51a-e75c0b8fa38e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"cf5c1c0b-13b0-11e5-b51a-df6e81deed1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"cf5c1c0c-13b0-11e5-b51a-b35427536032","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[794],"tindex":"cf5c1c0d-13b0-11e5-b51a-13367bdda390","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"cf5c1c0e-13b0-11e5-b51a-89f74676dcba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"cf5c1c0f-13b0-11e5-b51a-cbcbcb8ac981","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:81","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"cf5c1c10-13b0-11e5-b51a-a33060b47f29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[795,796,797],"tindex":"cf5c1c11-13b0-11e5-b51a-b3fffab82398","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-1},{"failures":[586,587,590,591,592,593,594,595,596,597],"tindex":"cf5c1c12-13b0-11e5-b51a-55ff0133eec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[],"tindex":"cf5c4323-13b0-11e5-b51a-535371ebbbb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}