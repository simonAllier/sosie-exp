{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":194,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":489,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":397,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":557,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":617,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":336,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":607,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":481,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":537,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":315,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":388,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":211,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":383,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":568,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":638,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":268,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":657,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":507,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":122,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":467,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":271,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":531,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":535,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":80,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":423,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":426,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":369,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":391,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":188,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":595,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":353,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":536,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":561,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":465,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":115,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":67,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":637,"org.apache.commons.collections4.CollectionUtilsTest.addAllForElements":643,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":231,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":64,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":586,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":554,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":422,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":544,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":136,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":538,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":393,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":259,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":316,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":474,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":573,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":266,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":642,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":378,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":590,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":45,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":124,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":192,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":341,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":169,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":120,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":14,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullStream":451,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":550,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":246,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":206,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":405,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":319,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":220,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":480,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":534,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":148,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":16,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":226,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":327,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":79,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":295,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":513,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":627,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":476,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":175,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":285,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":40,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":216,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":241,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":362,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":189,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":430,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":155,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":217,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":624,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":168,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":144,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":305,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":539,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":24,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":446,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":374,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":278,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":386,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":394,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":203,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":204,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":202,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":177,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":591,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":547,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":566,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":131,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":339,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":10,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":548,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":520,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":604,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":647,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":605,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":641,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":117,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":556,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":551,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":475,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":134,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":632,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":200,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":603,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":23,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":201,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":427,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":368,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":309,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":503,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":407,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":60,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":585,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":571,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":631,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":119,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":594,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":287,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":437,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":344,"org.apache.commons.collections4.map.LRUMapTest.testClone":288,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":576,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":294,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":622,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":545,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":381,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":398,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":20,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":558,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":563,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":2,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":413,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":553,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":592,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":166,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":406,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":78,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":640,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":230,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":428,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":509,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":492,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":335,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":363,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":197,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":320,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":461,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":343,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":109,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":55,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":416,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":653,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":334,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":209,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":439,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":639,"org.apache.commons.collections4.map.LRUMapTest.testReset":290,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":382,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":135,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":258,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":376,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":460,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":530,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":606,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":559,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":104,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":527,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":408,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":178,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":269,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":172,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":434,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":302,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":644,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":249,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":313,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":452,"org.apache.commons.collections4.map.LinkedMapTest.testReset":525,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":601,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":602,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":317,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":634,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":195,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":387,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":549,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":223,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":412,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":506,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":160,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":645,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":502,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":564,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":618,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":146,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":337,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":648,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":443,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":112,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":652,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":589,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":239,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":210,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":272,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":161,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":396,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":633,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":524,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":488,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":253,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":347,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":466,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":593,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":649,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":484,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":250,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":311,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":611,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":612,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":613,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":364,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":584,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":479,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":263,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":453,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":616,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":145,"org.apache.commons.collections4.map.HashedMapTest.testClone":170,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":227,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":264,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":469,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":628,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":21,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":31,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":221,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":214,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":345,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":409,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":501,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":228,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":515,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":651,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":400,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":447,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":575,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":299,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":529,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":65,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":392,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":516,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":630,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":445,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":448,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":518,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":181,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":621,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":578,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":546,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":154,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":656,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":75,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":565,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":68,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":650,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":53,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":52,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":159,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":608,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":229,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":50,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":47,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":46,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":542,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":373,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":282,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":324,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":526,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":30,"org.apache.commons.collections4.map.LinkedMapTest.testClone":355,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":654,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":183,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":354,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":404,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":359,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":477,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":58,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":260,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":421,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":262,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":377,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":63,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":486,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":303,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":225,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":399,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":76,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":212,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":454,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":379,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":286,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":597,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":193,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":587,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":257,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":186,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":614,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":185,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":463,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":580,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":238,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":370,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":560,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":304,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":419,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":167,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":235,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":491,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":626,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":121,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":251,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":471,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":349,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":487,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":158,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":528,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":514,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":523,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":636,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":468,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":71,"org.apache.commons.collections4.map.LRUMapTest.testLRU":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":66,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":498,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":512,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":173,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":215,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":402,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":152,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":401,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":510,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":442,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":150,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":328,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":390,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":165,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":582,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":331,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":478,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":358,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":101,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":326,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":655,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":456,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":19,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":300,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":532,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":552,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":455,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":457,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":572,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":458,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":293,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":240,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":577,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":441,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":473,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":318,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":143,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":562},"transformations":[{"failures":[],"tindex":"466832ed-13aa-11e5-8fb9-b7ee7b8be5e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"466859fe-13aa-11e5-8fb9-4dcf6d5a32df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"466859ff-13aa-11e5-8fb9-f9fe52ce0e0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"46685a00-13aa-11e5-8fb9-1b50d02b7e86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"variableMap":{"bag":"excess"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"46685a01-13aa-11e5-8fb9-557de1e17940","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[10,11,12],"tindex":"46688112-13aa-11e5-8fb9-5d1f2fca9392","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"46688113-13aa-11e5-8fb9-95a32d5de128","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"46688114-13aa-11e5-8fb9-3dff871cc114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"46688115-13aa-11e5-8fb9-d56038d0214f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"46688116-13aa-11e5-8fb9-89042e7c08dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"46688117-13aa-11e5-8fb9-93189140bc29","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"466c78b8-13aa-11e5-8fb9-8d308e21e9f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"key","out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"466c78b9-13aa-11e5-8fb9-a5aa82c482a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:307","type":"CtIfImpl","sourcecode":"if (null != E) {\n    E[][(int)++] = null;\n    if ((int) >= (int)) {\n        int = 0;\n    } \n    boolean = false;\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,25,26,78,27,28,29,30,79,31,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,32,33,34,35,36,37,38,117,39,118,40,119,120,41,42,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"466c78ba-13aa-11e5-8fb9-1fdfa504939a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"466c9fcb-13aa-11e5-8fb9-938eb67eac96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169],"tindex":"466c9fcc-13aa-11e5-8fb9-b9e82e85c43c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21],"tindex":"466c9fcd-13aa-11e5-8fb9-7d248ceeb11a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"size":"i","maxSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361],"tindex":"466c9fce-13aa-11e5-8fb9-555306a55b58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"newCapacity","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"466cc6df-13aa-11e5-8fb9-4ba03f5ebac7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"466cc6e0-13aa-11e5-8fb9-cf81fc5e37b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[362],"tindex":"466cc6e1-13aa-11e5-8fb9-659bca999d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"466cc6e2-13aa-11e5-8fb9-7bdc640cc59c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[363,364,365],"tindex":"466cc6e3-13aa-11e5-8fb9-f7cd7c3c3630","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384],"tindex":"466cc6e4-13aa-11e5-8fb9-9d882ec5745b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"previous","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[385,386,387,388,389,390],"tindex":"466cc6e5-13aa-11e5-8fb9-c70ee163f845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"diag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"466cc6e6-13aa-11e5-8fb9-2b3a6b89c947","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"466cedf7-13aa-11e5-8fb9-8306c6aa8f81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[403,404,0,1,405,406,407,2,408,409,3,410,411,412,4,5,413,414,415,6,416,417,7,8,418,419,420,9,421],"tindex":"466cedf8-13aa-11e5-8fb9-cbe78d1eca17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"466cedf9-13aa-11e5-8fb9-9f7305cff237","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"nextP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":-2},{"failures":[],"tindex":"466cedfa-13aa-11e5-8fb9-e51037bd4b8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[],"tindex":"466cedfb-13aa-11e5-8fb9-110a85a0af34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"466cedfc-13aa-11e5-8fb9-c1dbae075eb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"node","current":"child","tree":"child","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"466cedfd-13aa-11e5-8fb9-99e652116634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[422,423,424,425,426,427,428],"tindex":"466e4d8e-13aa-11e5-8fb9-d5d659d1c41c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-1},{"failures":[],"tindex":"466e4d8f-13aa-11e5-8fb9-33791475f61d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"variableMap":{"vDown":"key2","x":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:229","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[429,430,431,432,433,434,319,350,352,435,436,437,438,439,440,441,442,443,444],"tindex":"466e4d90-13aa-11e5-8fb9-e3bba5295070","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"size","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"466e4d91-13aa-11e5-8fb9-fd00c271b6e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462],"tindex":"466e4d92-13aa-11e5-8fb9-41f560f44303","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"indent","lengthInBits":"indent","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"466e4d93-13aa-11e5-8fb9-67e73d2c2990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"466e74a4-13aa-11e5-8fb9-5b7ca07763cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)"},"status":-2},{"failures":[64,65,66,67,68,69,76,70,71,72,73,74,75,77,25,26,78,27,28,29,30,79,31,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,463,112,104,105,106,107,108,109,110,111,113,114,115,116,32,33,34,35,36,37,38,117,39,118,40,119,120,41,42,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141],"tindex":"466e74a5-13aa-11e5-8fb9-bf4784d8e744","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"466e74a6-13aa-11e5-8fb9-41a5e8cf9452","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"variableMap":{"next":"next","node":"node","index":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[68,66,25,26,27,28,29,79,31,102,100,32,33,35,36,37,117,39,40,41,42,133,139,140],"tindex":"466e74a7-13aa-11e5-8fb9-c3347a5a7524","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"rval","y":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"466e74a8-13aa-11e5-8fb9-11b73e146dea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"466e9bb9-13aa-11e5-8fb9-1f9afd0afb53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"466e9bba-13aa-11e5-8fb9-9b3d24023fc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[],"tindex":"466e9bbb-13aa-11e5-8fb9-6b8fc93e1a7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1729","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getKey()"},"variableMap":{"this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:301","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRemoveValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"466e9bbc-13aa-11e5-8fb9-d7f9b4b22ca3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"466e9bbd-13aa-11e5-8fb9-95503886146a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:533","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 2;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"466e9bbe-13aa-11e5-8fb9-7974b101f8a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"466e9bbf-13aa-11e5-8fb9-85ad028d48e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hash","proposedCapacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[464,465,466,467],"tindex":"466e9bc0-13aa-11e5-8fb9-4f8de95a3b52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:73","type":"CtIfImpl","sourcecode":"if (((org.w3c.dom.NodeList) != null) && ((int) < (org.w3c.dom.NodeList.getLength()))) {\n    return org.w3c.dom.NodeList.item((int)++);\n} "},"status":-1},{"failures":[468,469],"tindex":"466e9bc1-13aa-11e5-8fb9-8530f7ea27df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"result","b":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-1},{"failures":[391,392,393,394,395,396,397,398,399,400,401,402],"tindex":"466e9bc2-13aa-11e5-8fb9-a3f0d25aa93b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[470,471,472,473],"tindex":"466e9bc3-13aa-11e5-8fb9-770a8dce588a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[474,475,476,477,478,479,480,481,482,483,484,173,485,486,487,488,489,490,491,231,492,493,494,495,496,497,498,499,500,501,502,232,503,504,505,506,507,508,241,242,243,244,245,246,247,249,252,255,256,509,510,511,512,513,514,515,516,517,518,287,519,520,521,522,523,524,289,290,291,300,307,308,310,311,312,313,314,315,316,318,321,324,325,327,339,340,341,342,525,526,527,528,529,530,531,532,533,534,535,536,537,357,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,359,556,557,558,559,560,561,562,142,143,144,145,563,147,148,149,150,564,151,152,565,153,441,154,155,566,567,568,569,156,157,158,159,570,161,162,163,164,571,165,166,572,167,443,168,169,573,574,575,576],"tindex":"466ec2d4-13aa-11e5-8fb9-1b697147ea03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594],"tindex":"466ec2d5-13aa-11e5-8fb9-c3a1f30f3463","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[595,596,597,286,598,599,600,601,602,603,604,605,606,607,509,510,511,512,514,515,516,608,609,517,518,287,519,610,611,612,613,614,524,615],"tindex":"466ec2d6-13aa-11e5-8fb9-dba6532fa4b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"466ec2d7-13aa-11e5-8fb9-3bac4e410261","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"466ec2d8-13aa-11e5-8fb9-d9e24b51faf3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[74,25,26,27,28,29,30,31,88,89,90,91,108,115,32,33,34,35,36,37,38,39,40,41,42,121,131,132,133],"tindex":"466ec2d9-13aa-11e5-8fb9-e39630dc419d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"466ec2da-13aa-11e5-8fb9-ef1f63519a86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:80","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , org.apache.commons.collections4.Transformer<T, T>[])"},"variableMap":{"cmds":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:276","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<? super I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"466ec2db-13aa-11e5-8fb9-137f3498b09b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"466ec2dc-13aa-11e5-8fb9-71a518d0293a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"node":"left","right":"right","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"466ee9ed-13aa-11e5-8fb9-ff52bbe76203","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":0},{"failures":[595,596,518,287],"tindex":"466ee9ee-13aa-11e5-8fb9-7571324a2708","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"size","object":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-1},{"failures":[616,617,618,619,620],"tindex":"466ee9ef-13aa-11e5-8fb9-f32f2705d277","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"466ee9f0-13aa-11e5-8fb9-893b0bc5dc2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"466ee9f1-13aa-11e5-8fb9-85cf92e6fb9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:230","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.switchTransformer(new org.apache.commons.collections4.Predicate[]{ org.apache.commons.collections4.Predicate<? super I> }, new org.apache.commons.collections4.Transformer[]{ org.apache.commons.collections4.Transformer<? super I, ? extends O> }, org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"466ee9f2-13aa-11e5-8fb9-e1beec83d1b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[480,484,498,502,515,518],"tindex":"466ee9f3-13aa-11e5-8fb9-dbfb74025fc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"466ee9f4-13aa-11e5-8fb9-03cd78ea339c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"466ee9f5-13aa-11e5-8fb9-297e1ba5ac22","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[],"tindex":"466f1106-13aa-11e5-8fb9-27b5bcf22165","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"466f1107-13aa-11e5-8fb9-6bc90724640f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"466f1108-13aa-11e5-8fb9-ebf78c0e223b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"variableMap":{"next":"previous","entry":"next","ref":"ref","previous":"previous","data":"data","size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"466f1109-13aa-11e5-8fb9-6359b4593b70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"466f110a-13aa-11e5-8fb9-2d924c8d18f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[621,622,623,624,625,626,627,628,629,630,631],"tindex":"466f110b-13aa-11e5-8fb9-43014ab76bbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[632,633,634,635,636,637,638,639,640,641],"tindex":"466f110c-13aa-11e5-8fb9-1b9ea5cac5a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-1},{"failures":[642],"tindex":"466f381d-13aa-11e5-8fb9-011d9bbb6615","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"466f381e-13aa-11e5-8fb9-3b45441391aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"466f381f-13aa-11e5-8fb9-ed85965d0091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"466f3820-13aa-11e5-8fb9-790a3641acc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[643],"tindex":"466f3821-13aa-11e5-8fb9-2bf26541d404","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1156","type":"CtForEachImpl","sourcecode":"for (final C C : C[]) {\n    boolean |= java.util.Collection<C>.add(C);\n}"},"status":-1},{"failures":[],"tindex":"466f3822-13aa-11e5-8fb9-3f1cf81a2029","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"466f3823-13aa-11e5-8fb9-3bdb9979353b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-2},{"failures":[],"tindex":"466f3824-13aa-11e5-8fb9-d981f7b9dfd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"466f3825-13aa-11e5-8fb9-f10049b8dc5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[644],"tindex":"466f3826-13aa-11e5-8fb9-4b8c7c6ceeb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"466f3827-13aa-11e5-8fb9-b9c0ef32ac93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"466f3828-13aa-11e5-8fb9-9708e7e090b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"convertedKey","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[645,646,647,648,649],"tindex":"466f5f39-13aa-11e5-8fb9-598fa275fa6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[],"tindex":"466f5f3a-13aa-11e5-8fb9-bbe68cb3fdc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"variableMap":{"args":"result","paramTypes":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":0},{"failures":[650,651],"tindex":"466f5f3b-13aa-11e5-8fb9-7b6a381e53c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} "},"status":-1},{"failures":[652,653,654,655,656,657],"tindex":"466f5f3c-13aa-11e5-8fb9-393d4cdd1e2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"466f5f3d-13aa-11e5-8fb9-a17f889edf9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[511,512,514,515,516,609,517,518,287,519],"tindex":"466f5f3e-13aa-11e5-8fb9-0f8e6860b813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}