{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":214,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":58,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":523,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":223,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":315,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":418,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":60,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":44,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":377,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":66,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":417,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":161,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":37,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":424,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":490,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":529,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":375,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":447,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":511,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":182,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":420,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":254,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":451,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":272,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":368,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":459,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":330,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":217,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":551,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":437,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":435,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":263,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":622,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":506,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":240,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":399,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":433,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":67,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":292,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":584,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":610,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":509,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":530,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":342,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":426,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":422,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":179,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":505,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":333,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":208,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":90,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":616,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":415,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":450,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":53,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":600,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":317,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":397,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":183,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":558,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":72,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":597,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":111,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":225,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":80,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":203,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":293,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":133,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":550,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":549,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":401,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":473,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":542,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":469,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":255,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":319,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":430,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":496,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":289,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":210,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":517,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":425,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":325,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":609,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":195,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":326,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":419,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":269,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":184,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":280,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":561,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":123,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":361,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":387,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":278,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":115,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":277,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":276,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":405,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":562,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":119,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":273,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":274,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":429,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":305,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":499,"org.apache.commons.collections4.map.LRUMapTest.testClone":300,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":626,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":524,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":157,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":373,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":489,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":283,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":555,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":149,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":261,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":4,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":362,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":525,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":52,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":181,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":142,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":532,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":574,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":150,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":494,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":460,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":48,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":265,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":224,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":213,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":106,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":171,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":493,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":492,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":553,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":432,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":174,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":479,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":151,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":99,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":607,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":519,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":167,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":547,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":8,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":253,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":316,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":336,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":580,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":125,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":323,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":618,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":528,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":180,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":548,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":204,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":591,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":110,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":629,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":128,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":65,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":484,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":64,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":282,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":513,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":452,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned":233,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":372,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":27,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":385,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":634,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":589,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":380,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":335,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":402,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":535,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":536,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":329,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":92,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":391,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor":230,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":507,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.HashedMapTest.testClone":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":508,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":270,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":627,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":341,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":190,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":164,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":500,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":587,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":364,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":371,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":445,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":595,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":51,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":216,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":518,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":252,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":290,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":478,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":596,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":467,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":389,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":621,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":446,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":199,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":294,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":267,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":438,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":98,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":309,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":633,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":637,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":481,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":301,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":449,"org.apache.commons.collections4.map.LinkedMapTest.testClone":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":593,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":390,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":392,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":207,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":268,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":248,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":247,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":246,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":464,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned":237,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":396,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":592,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":186,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":140,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":287,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":124,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":468,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":440,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":554,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":194,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":455,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":334,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":304,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":318,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":359,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":185,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":211,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":608,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":7,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":636,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":488,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":612,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":613,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":153,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":152,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":628,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":477,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":423,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":20,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":476,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":606,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryNull":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":81,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":206,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":192,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":520,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":239,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":617,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":120,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":442,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":129,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":590,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":599,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":308,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":299,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":557,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":117,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":298,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":483,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":393,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":605,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":200,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":141,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":77,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":515,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":260,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":486,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":43,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":339,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":516,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":403,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":471,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":288,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":480},"transformations":[{"failures":[],"tindex":"b253575e-13b6-11e5-bde3-f7664be972c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"b2537e6f-13b6-11e5-bde3-a963c5831dbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"b253a580-13b6-11e5-bde3-e3557cdda374","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:255","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],"tindex":"b255ef71-13b6-11e5-bde3-edc3f7ada5da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"endMarkerAllowed","beforeFirst":"endMarkerAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[],"tindex":"b255ef72-13b6-11e5-bde3-6182347a49a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"b2563d93-13b6-11e5-bde3-a94936300b2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b25664a4-13b6-11e5-bde3-a34531b3ce55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"b25664a5-13b6-11e5-bde3-79041c4a37c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"m"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"b25664a6-13b6-11e5-bde3-a3084a061637","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":0},{"failures":[],"tindex":"b25664a7-13b6-11e5-bde3-dd225e43e76f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[165,166,167,168,169,170,171,172,173,174,175],"tindex":"b25664a8-13b6-11e5-bde3-4b65db1731fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-1},{"failures":[],"tindex":"b25664a9-13b6-11e5-bde3-653eff75f72f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"b2568bba-13b6-11e5-bde3-136bb0ea4821","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"b2568bbb-13b6-11e5-bde3-b78653c57de4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[176],"tindex":"b2568bbc-13b6-11e5-bde3-9502d5a9d682","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[],"tindex":"b2568bbd-13b6-11e5-bde3-e964c8f244f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"i","vDown":"keys","i":"i","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-2},{"failures":[177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"b2568bbe-13b6-11e5-bde3-71f959b6a638","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[192,193,194,195,196,197,198,199],"tindex":"b2568bbf-13b6-11e5-bde3-b342c5fd6f71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"hasNext","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[200,201,202,203,204,205],"tindex":"b256b2d0-13b6-11e5-bde3-d3c72c775bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"start1","index":"x","beyond":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"b256b2d1-13b6-11e5-bde3-6fad918ac3d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:576","type":"CtForEachImpl","sourcecode":"for (final V V : this) {\n    java.util.List<V>.add(V);\n}"},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[206,192,193,194,195,196,197,198,199,207,208],"tindex":"b256b2d2-13b6-11e5-bde3-23ccff18530b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"b256b2d3-13b6-11e5-bde3-2baabf19213d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"b256b2d4-13b6-11e5-bde3-f729c816106a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:81","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[209],"tindex":"b256d9e5-13b6-11e5-bde3-81f5c88c3d54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:59","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null);\n} "},"status":-1},{"failures":[210],"tindex":"b256d9e6-13b6-11e5-bde3-85cc7e6ca6d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b256d9e7-13b6-11e5-bde3-470a7cbf1f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"path","predecessor":"current","bitIndex":"bitIndex","child":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[211,212,213,214,215,216,217,183,185,218,219,220,221,222,223,224,225,226,227],"tindex":"b256d9e8-13b6-11e5-bde3-b72a2116fda8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"replacement","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[228],"tindex":"b25700f9-13b6-11e5-bde3-7d2f02bec538","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:615","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (java.lang.Object == null) {\n        int++;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b25700fa-13b6-11e5-bde3-8d2539f5500d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"b25700fb-13b6-11e5-bde3-ff15ed213518","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:187","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:185","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[org.apache.commons.collections4.list.TreeList<E>.size()]"},"status":-2},{"failures":[],"tindex":"b25700fc-13b6-11e5-bde3-370aa9c18929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-2},{"failures":[229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"tindex":"b25700fd-13b6-11e5-bde3-8f49264eb540","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"total","lengthInBits":"total","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[200,201],"tindex":"b25700fe-13b6-11e5-bde3-9dc48c8a3400","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"b25700ff-13b6-11e5-bde3-89a8849b1555","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1611","type":"CtIfImpl","sourcecode":"if ((O == null) || (!(O.equals(O)))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"b2570100-13b6-11e5-bde3-d74de745e63f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:435","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[],"tindex":"b2570101-13b6-11e5-bde3-3d8584ba6bc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b2572812-13b6-11e5-bde3-4fffef460540","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"b2572813-13b6-11e5-bde3-d5515c49e59e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b2572814-13b6-11e5-bde3-6156135dc51c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"variableMap":{"path":"current","current":"current","lengthInBits":"offsetInBits","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[291,292,293,294,295,296,297,298,299],"tindex":"b2572815-13b6-11e5-bde3-95ca97c306e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"nextObjectSet","removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[183,185,221,225,226],"tindex":"b2572816-13b6-11e5-bde3-8d4141945ff1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[300,301,268,302,303,304,305,306,307,308,309,310,311],"tindex":"b2572817-13b6-11e5-bde3-69948d8654e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"mapSize","newCapacity":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"b2572818-13b6-11e5-bde3-d912bd238f46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-2},{"failures":[],"tindex":"b2572819-13b6-11e5-bde3-9bc34b58fdd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[312,313,314,315],"tindex":"b2574f2a-13b6-11e5-bde3-43c5c35f9937","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b2574f2b-13b6-11e5-bde3-b11107d9ac16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[316,317],"tindex":"b25a355c-13b6-11e5-bde3-fbe38d13fb64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[318,304,319,320,321,322,323,324,325,326,327,328,305,329],"tindex":"b25a355d-13b6-11e5-bde3-af121ecf3061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[319,320],"tindex":"b25a355e-13b6-11e5-bde3-d53483eac070","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[330,331,332,333],"tindex":"b25a355f-13b6-11e5-bde3-fb328ca027c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[334,335,336,312,337,338,313,301,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,314,367,368,315,303,369],"tindex":"b25a5c70-13b6-11e5-bde3-21920ce787eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtIfImpl","sourcecode":"if (E == E) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"b25a5c71-13b6-11e5-bde3-51c9f9a98424","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:750","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(this, null)"},"variableMap":{"newTop":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"b25a5c72-13b6-11e5-bde3-b5eaf73ca635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b25a5c73-13b6-11e5-bde3-1f90fb6a5009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b25a5c74-13b6-11e5-bde3-4f65ef97c08d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:139","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null ? 0 : -1;\n} else if (K == null) {\n    return 1;\n} "},"status":0},{"failures":[370],"tindex":"b25a5c75-13b6-11e5-bde3-2f071240e2e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b25a5c76-13b6-11e5-bde3-5b71bdfd1393","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[0,40,44,45,46,38,39,37,3,4,5,12,13,14,15,16,17,18,19,20,21,22,23,29,24,25,27,28,30,31,32,33,93,146],"tindex":"b25a5c77-13b6-11e5-bde3-959ca44c4164","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[291,371,292,293,294,372,295,373,296,297,298,299],"tindex":"b25a8388-13b6-11e5-bde3-abdf930fe1dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"b25a8389-13b6-11e5-bde3-858565faed1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"b25a838a-13b6-11e5-bde3-27bb01d75261","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"b25a838b-13b6-11e5-bde3-5d6b8adf0a43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b25a838c-13b6-11e5-bde3-15492d0321cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[],"tindex":"b25a838d-13b6-11e5-bde3-3f586dc5e042","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405],"tindex":"b25a838e-13b6-11e5-bde3-87e2710fd08e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"b25a838f-13b6-11e5-bde3-af8725e96bab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[211,183,185,218,219,221,223,225,226,227],"tindex":"b25a8390-13b6-11e5-bde3-f9253a80d5e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[200,201,203,204],"tindex":"b25ad1b1-13b6-11e5-bde3-2707db6e0ead","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"x","currentIndex":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"b25ad1b2-13b6-11e5-bde3-59f43080f9ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:232","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-2},{"failures":[406,407,408,409,410,411,412,413,212,414,213,214,415,215,216,217,416,177,178,417,179,180,181,418,419,182,420,183,421,422,184,185,423,424,425,426,427,428,218,219,429,220,430,431,221,222,432,433,223,224,225,226,227,434,435,436,437,438,439,440,441,442,443,444,445,446,447,186,187,448,188,189,190,449,450,191,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470],"tindex":"b25ad1b3-13b6-11e5-bde3-8d53acdb4d61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[406,408,414,415,215,216,217,177,178,179,180,181,419,182,183,184,185,426,427,428,218,219,429,221,223,225,226,227,436,438,445,446,186,187,188,189,190,450,191,455,456,457,458,462,466,468,469,470],"tindex":"b25ad1b4-13b6-11e5-bde3-0b8431023c5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"b25ad1b5-13b6-11e5-bde3-ddf75995069f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","key3":"key2","key4":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"b25be326-13b6-11e5-bde3-41c7b071048e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[471,472,473,474,475,476,477,478,479],"tindex":"b25c0a37-13b6-11e5-bde3-693037d755af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"total","maxElements":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[480,481,482,483,484,485,486,487,488,489,490,491,339,492,493,494,495,496,497,498,499,500,501,245,246,247,248,250,251,252,269,276,277,279,282,283,286,287,288,289,290,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,369,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"b25c0a38-13b6-11e5-bde3-81fc312581be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[587,328,588,589,590,591],"tindex":"b25c0a39-13b6-11e5-bde3-6395683607e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b25c0a3a-13b6-11e5-bde3-b5d0ade1eb0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:57","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>))"},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:137","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.util.Collection<? extends E>.size())"},"status":-2},{"failures":[],"tindex":"b25c0a3b-13b6-11e5-bde3-fda80f6c6d0a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[],"tindex":"b25c0a3c-13b6-11e5-bde3-71f773fb5891","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"b25c0a3d-13b6-11e5-bde3-6f6122441bef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"b25c0a3e-13b6-11e5-bde3-ef8f9d5be4d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[592,593],"tindex":"b25c0a3f-13b6-11e5-bde3-27ba0cb70f8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"tree","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[594],"tindex":"b25c3150-13b6-11e5-bde3-a7a0d8fc57c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[595,596],"tindex":"b25c3151-13b6-11e5-bde3-a51a5a56ce17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[318,304,320,531,532,533,597,598,599,600,327,587,601,602,603,604,605,328,606,607,305,534,608,609,610,611,612,613,535,536,329,537,614,615,538,539,616,617,540,541,542,543,544],"tindex":"b25c3152-13b6-11e5-bde3-3b739ce5ce7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"delegateMap","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[47,38,5,6,10,11,18,19,20,21,22,30,31,32,79],"tindex":"b25c3153-13b6-11e5-bde3-b7477ed64266","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"b25c3154-13b6-11e5-bde3-c9ec27e3744d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b25c3155-13b6-11e5-bde3-155389e60d01","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"b25c3156-13b6-11e5-bde3-a5b239876b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b25c3157-13b6-11e5-bde3-65d3c4fed20f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[618],"tindex":"b25c3158-13b6-11e5-bde3-d14589ba3088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"variableMap":{"count":"count","closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"b25c3159-13b6-11e5-bde3-a1417e3cbe8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"previous","modCount":"hashIndex","before":"entry","header":"previous","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637],"tindex":"b25c586a-13b6-11e5-bde3-5350d653a737","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[182,191],"tindex":"b25c586b-13b6-11e5-bde3-b58e17f9c45f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[318,319,321,322,323,324,325,326,328,305],"tindex":"b25c586c-13b6-11e5-bde3-a7e983632dc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"b25c586d-13b6-11e5-bde3-e77a5ae50b5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b25c586e-13b6-11e5-bde3-3d041629a42b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[638,639],"tindex":"b25c586f-13b6-11e5-bde3-73b6fc53209c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:187","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}