{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":266,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":146,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":173,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":378,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":447,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":127,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":251,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":10,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":521,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":134,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":40,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":41,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":25,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":281,"org.apache.commons.collections4.CollectionUtilsTest.get":21,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":489,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":210,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":517,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":151,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":486,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":243,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":247,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":482,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":67,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":520,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":42,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":441,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":319,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":401,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":306,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":376,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":310,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":526,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":275,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":235,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":353,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":221,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":460,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":484,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":472,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":398,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":244,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":291,"org.apache.commons.collections4.CollectionUtilsTest.intersection":24,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":187,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":470,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":490,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":360,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":16,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":367,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":328,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":363,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":485,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":422,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":339,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":98,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":130,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":312,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":354,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":346,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":478,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":183,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":333,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":156,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":435,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":264,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":202,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":437,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":523,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":255,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":26,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":382,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":453,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":182,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":219,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":355,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":242,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":295,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":527,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":302,"org.apache.commons.collections4.CollectionUtilsTest.union":23,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":279,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":364,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":493,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":28,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":498,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":475,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":95,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":439,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":55,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":165,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":497,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":122,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":361,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":150,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":184,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":416,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":254,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":385,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":282,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":358,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":395,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":132,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":207,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":516,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":350,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":479,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":272,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":427,"org.apache.commons.collections4.ListUtilsTest.testSubtract":252,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":325,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":159,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":348,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":167,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":400,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":424,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":322,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":231,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":263,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":458,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":169,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":52,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":529,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":375,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":366,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":250,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":34,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":206,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":329,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":374,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":308,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":421,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":372,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":471,"org.apache.commons.collections4.IteratorUtilsTest.testToList":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":227,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":513,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":30,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":246,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":414,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":229,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":318,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":168,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":452,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":480,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":514,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":162,"org.apache.commons.collections4.CollectionUtilsTest.exists":158,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":307,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":121,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":157,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":512,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":141,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":239,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":172,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":270,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":528,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":431,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":103,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":343,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":495,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":496,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":331,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":51,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":8,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":334,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":394,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":280,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":80,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":214,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":446,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":451,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":403,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":44,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":13,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":102,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":259,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":174,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":232,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":228,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":15,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":300,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":505,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":301,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":413,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":93,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":62,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":240,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":61,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":491,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":432,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":503,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":257,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":434,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":186,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":327,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":504,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":97,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":436,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":220,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":290,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":261,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":11,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":383,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":66,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":402,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":161,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":31,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":459,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":412,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":411,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":408,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":407,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":305,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":410,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":406,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":405,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":154,"org.apache.commons.collections4.CollectionUtilsTest.isFull":415,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":108,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":352,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":387,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":234,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":238,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":349,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":171,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":82,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":299,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":204,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":390,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":384,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":248,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":153,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":267,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":370,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":138,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":519,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":476,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":474,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":445,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":492,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":377,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":131,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":461,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":359,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":56,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":314,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":192,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":477,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":396,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":362,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":191,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":152,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":468,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":467,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":466,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":113,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":22,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":464,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":465,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":189,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":501,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":525,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":188,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":226,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":208,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":91,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":262,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":107,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":114,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":502,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":388,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":297,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":425,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":185,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":316,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":357,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":86,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":438,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":249,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":126,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":60,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":341,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":430,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":223,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":342,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":29,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":508,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":426,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":330,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":142,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":507,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":356,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":510,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":323,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":444,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":276,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":392,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":190,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":268,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":106},"transformations":[{"failures":[],"tindex":"8845aa4e-13a0-11e5-a6d6-d5b45e8547d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:512","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"8845aa4f-13a0-11e5-a6d6-b337848295ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[],"tindex":"8845d160-13a0-11e5-a6d6-83ebac3e5bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"8845d161-13a0-11e5-a6d6-1318abf7a97d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"8845d162-13a0-11e5-a6d6-c9759248be8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"h","lengthInBits":"h","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"h","otherOffsetInBits":"h","otherLengthInBits":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"8845d163-13a0-11e5-a6d6-4f28b953ecec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"8845f874-13a0-11e5-a6d6-55c789041208","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"end2","vDown":"vDown","delta":"delta","end2":"k","this":"this","i":"end1","end1":"start1","k":"start1","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"8845f875-13a0-11e5-a6d6-133b05ed4da0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"8845f876-13a0-11e5-a6d6-ab03b7207f4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[0,1,2,3,29],"tindex":"8845f877-13a0-11e5-a6d6-a3c604a1cc6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"total":"h","object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:225","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"88461f88-13a0-11e5-a6d6-8dc1c04d287b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"88461f89-13a0-11e5-a6d6-47a29119bec7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[],"tindex":"88461f8a-13a0-11e5-a6d6-79c78a70ecf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:72","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Trie must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:811","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"88461f8b-13a0-11e5-a6d6-dffe84637330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"88461f8c-13a0-11e5-a6d6-a5c62af1fa2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"8846469d-13a0-11e5-a6d6-69d51279f893","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:408","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values()"},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"status":-2},{"failures":[],"tindex":"8846469e-13a0-11e5-a6d6-c7a9b55aac56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"8846469f-13a0-11e5-a6d6-397d8ae75b20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"884646a0-13a0-11e5-a6d6-557658db45ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"884646a1-13a0-11e5-a6d6-039a3519ad50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[63],"tindex":"88466db2-13a0-11e5-a6d6-5b0dd8ffdc53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(K)) {\n    return org.apache.commons.collections4.map.SingletonMap<K, V>.setValue(V);\n} "},"status":-1},{"failures":[64,65,66,67,54,56,68,69,70,71,72,73,74,75,76,77],"tindex":"88466db3-13a0-11e5-a6d6-e7f38b8db9cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode","replacement":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[13,22],"tindex":"884694c4-13a0-11e5-a6d6-a7e7a2e9258a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:520","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"884694c5-13a0-11e5-a6d6-07e6d5c73ec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"884694c6-13a0-11e5-a6d6-27561d0993e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:111","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : org.apache.commons.collections4.Closure<? super E>[]) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[],"tindex":"8846bbd7-13a0-11e5-a6d6-ff4b44ea9f56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[78,79,80],"tindex":"8846bbd8-13a0-11e5-a6d6-c509f44700a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"status":-1},{"failures":[54],"tindex":"8846bbd9-13a0-11e5-a6d6-95aa4aa0a5f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"8846bbda-13a0-11e5-a6d6-057048a34b8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[81,82],"tindex":"8846e2eb-13a0-11e5-a6d6-33f6ed972134","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"8846e2ec-13a0-11e5-a6d6-9d47222add13","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"8846e2ed-13a0-11e5-a6d6-afaea99bfd17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[83,84],"tindex":"8846e2ee-13a0-11e5-a6d6-55a1dd88ac26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"nodeList must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-1},{"failures":[85,86,87,88,89,90],"tindex":"8846e2ef-13a0-11e5-a6d6-4788ceb2009c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[91,92],"tindex":"8846e2f0-13a0-11e5-a6d6-5b3dd818eac2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"a":"result","b":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-1},{"failures":[93,94,48,49,50,51,52,95,53,54,55,56,70,77,71,72,73,74,75,76,96,97,57,58,59,60,61,98,62,99,100],"tindex":"8846e2f1-13a0-11e5-a6d6-4385031ec6a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"rval","currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,63,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"88470902-13a0-11e5-a6d6-1fcb70b8cf5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[158],"tindex":"88470903-13a0-11e5-a6d6-3bfb70184796","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:849","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"88470904-13a0-11e5-a6d6-8d2338f6e613","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[159,160,161,162,163,164,165,166,167,168],"tindex":"88470905-13a0-11e5-a6d6-61d6d835aeba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"myCount","index":"otherCount","beyond":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[],"tindex":"88470906-13a0-11e5-a6d6-89625bd68a5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"88470907-13a0-11e5-a6d6-a7189863ae6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"88470908-13a0-11e5-a6d6-ff69e7316c28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"node","current":"right","tree":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"88473019-13a0-11e5-a6d6-5f6d7d4ca051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"8847301a-13a0-11e5-a6d6-951c072595e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[187,188,189,190],"tindex":"8847301b-13a0-11e5-a6d6-cdfba8469fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8847301c-13a0-11e5-a6d6-65ac2dfb7853","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2013","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"8847301d-13a0-11e5-a6d6-43daeeaae7fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[191],"tindex":"8847301e-13a0-11e5-a6d6-675b4b8dc0ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1160","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue())"},"status":-1},{"failures":[192],"tindex":"8847301f-13a0-11e5-a6d6-af39b63f230c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"status":-1},{"failures":[],"tindex":"88473020-13a0-11e5-a6d6-0d80889daeaa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>)"},"status":-2},{"failures":[54,56,77,72,74,75,76],"tindex":"88473021-13a0-11e5-a6d6-31264fde11bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[193],"tindex":"88473022-13a0-11e5-a6d6-61bb4ca45436","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:798","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[194,159,195,160,196,161,197,162,198,163,199,164,200,165,201,166,202,167,203,168],"tindex":"88473023-13a0-11e5-a6d6-4d3d42f631e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"88475734-13a0-11e5-a6d6-539d74a19bf3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":0},{"failures":[],"tindex":"88475735-13a0-11e5-a6d6-dbf72713283a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"88475736-13a0-11e5-a6d6-4d6cf1f560d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[0,1,2,3],"tindex":"88475737-13a0-11e5-a6d6-a59c98ad1d00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"88475738-13a0-11e5-a6d6-cff10a9fe9b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","this":"this","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"88475739-13a0-11e5-a6d6-e5cf1f0618ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[252,253,254,159,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,160,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,161,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,162,320,321,322,323,324,325,326,327,328,329,198,163,330,331,332,333,334,164,335,336,337,338,339,340,341,342,343,344,200,165,345,346,347,348,349,166,350,351,352,353,354,355,356,357,358,359,202,167,360,361,362,363,364,168,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394],"tindex":"88477e4a-13a0-11e5-a6d6-f97e178e14b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"88477e4b-13a0-11e5-a6d6-09a356d692af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-2},{"failures":[395,269,282,396,300,397,317,398,332,399,400,401,347,402,362,403,379,392],"tindex":"88477e4c-13a0-11e5-a6d6-c501a6feddc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[404,405,406,407,408,409,410,411,412,413,414,415,416],"tindex":"88477e4d-13a0-11e5-a6d6-934a050f6715","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"end","index":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"88477e4e-13a0-11e5-a6d6-ad5668193a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":0},{"failures":[417],"tindex":"88477e4f-13a0-11e5-a6d6-b3d0c7ffc67f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-1},{"failures":[418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445],"tindex":"88477e50-13a0-11e5-a6d6-a1bed7617bd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"88477e51-13a0-11e5-a6d6-5597c5b5f7f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"8847a562-13a0-11e5-a6d6-d746f5e9efa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-2},{"failures":[0,1,2,3],"tindex":"8847a563-13a0-11e5-a6d6-df5477a367b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[446,447,448,193,449,450,451,452,453,149,150,454,151,152,153,455,456,154,457,155,458,459,156,157,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"tindex":"8847a564-13a0-11e5-a6d6-bf35a933e2ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"8847a565-13a0-11e5-a6d6-a31796c58219","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"8847a566-13a0-11e5-a6d6-b9d12fe3d9ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[],"tindex":"8847a567-13a0-11e5-a6d6-73a8338c497b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"8847a568-13a0-11e5-a6d6-3966d19e1d93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-2},{"failures":[482,483,484,485],"tindex":"8847a569-13a0-11e5-a6d6-29cff3f6f3b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[81],"tindex":"8847cc7a-13a0-11e5-a6d6-37693f05e928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"8847cc7b-13a0-11e5-a6d6-3baf99a27d37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"8847cc7c-13a0-11e5-a6d6-4d3487738216","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"mapSize","start":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"8847cc7d-13a0-11e5-a6d6-77285256d715","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[81,82],"tindex":"8847cc7e-13a0-11e5-a6d6-5148526b0112","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[418,419,420,421,422,423,425,427,428,486,487,431,488,489],"tindex":"8847cc7f-13a0-11e5-a6d6-4bcc25b9771f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[490,491],"tindex":"8847cc80-13a0-11e5-a6d6-ddf1eede8756","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:184","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(org.apache.commons.collections4.map.LinkedMap<K, V>.get(int))"},"variableMap":{"this":"m","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"8847cc81-13a0-11e5-a6d6-3f4ae70da04a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"8847cc82-13a0-11e5-a6d6-b37316d62717","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[492,493,494,495,496,497,498,499,500],"tindex":"8847cc83-13a0-11e5-a6d6-5be9c2849500","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[0,1,2,3],"tindex":"8847cc84-13a0-11e5-a6d6-e5d49e1c14c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"8847f395-13a0-11e5-a6d6-e5fc01528a10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"lengthInBits","newCapacity":"bitIndex","proposedCapacity":"offsetInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[501,502],"tindex":"8847f396-13a0-11e5-a6d6-13e49a9ca11b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[],"tindex":"8847f397-13a0-11e5-a6d6-61a093aed97e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[],"tindex":"8847f398-13a0-11e5-a6d6-29681fa774f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"rval","currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"8847f399-13a0-11e5-a6d6-65d7dd564633","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[503,504,505,506,507,508,509,510,511,512,513,514],"tindex":"8847f39a-13a0-11e5-a6d6-d1af3aa60d19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[515,516,517,518],"tindex":"8847f39b-13a0-11e5-a6d6-41515e94e218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"8847f39c-13a0-11e5-a6d6-3d02d3d2fcaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[519,520,521,522,523,524,525,526],"tindex":"88481aad-13a0-11e5-a6d6-b11d8a1e1e17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[527],"tindex":"88481aae-13a0-11e5-a6d6-c71f69a4f4cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"88481aaf-13a0-11e5-a6d6-a9f8402d3d16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":0},{"failures":[528,529],"tindex":"88481ab0-13a0-11e5-a6d6-1b3c7e6421e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}