{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":188,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":275,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":55,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":254,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":241,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":469,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":95,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":445,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":346,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":52,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":234,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":465,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":464,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":344,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":401,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":253,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":158,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":160,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":369,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":387,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":187,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":436,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":411,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":319,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":262,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":226,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":263,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":230,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":419,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":94,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":105,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":410,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":379,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":65,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":383,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.CollectionUtilsTest.select":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":218,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":198,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":294,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":279,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":179,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":227,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":342,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":317,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":476,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":157,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":433,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":402,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":484,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":128,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":305,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":478,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":324,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":456,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":452,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":42,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":252,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":429,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":17,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":101,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":372,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":450,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":278,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":313,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":451,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":22,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":473,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":427,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":196,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":181,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":202,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":131,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":266,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":267,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":272,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":293,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":328,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":310,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":246,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":357,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":166,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":437,"org.apache.commons.collections4.list.TreeListTest.testRemove":355,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":449,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":366,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":155,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":0,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":271,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":389,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":468,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":385,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":88,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":403,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":415,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":35,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":238,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":51,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":122,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":386,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":219,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":330,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":258,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":454,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":393,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":96,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":245,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":249,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":364,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":290,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":446,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":216,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":482,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":145,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":392,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":121,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":123,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":480,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":159,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":214,"org.apache.commons.collections4.list.TreeListTest.testListEquals":382,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":11,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":184,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":435,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":418,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":416,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":233,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":276,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":477,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":257,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":367,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":16,"org.apache.commons.collections4.IteratorUtilsTest.testToList":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":431,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":54,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":323,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":229,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":322,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":106,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":43,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":274,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":207,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":199,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":289,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":354,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":404,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":124,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":470,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":351,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":408,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":302,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":269,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":270,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":66,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":268,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":434,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":240,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":394,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":118,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":362,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":244,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":194,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":388,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":15,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":399,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":333,"org.apache.commons.collections4.ListUtilsTest.testPartition":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":150,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":422,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":104,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":213,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":191,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":171,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":331,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":193,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":363,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":162,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":361,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":321,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":462,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":134,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":406,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":172,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":21,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":298,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":300,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":163,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":205,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":334,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":8,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":117,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":337,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":39,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":442,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":32,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":189,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":60,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":33,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":455,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":413,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":178,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":407,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":228,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":340,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":341,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":375,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":222,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":384,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":197,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":391,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":365,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":183,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":370,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":224,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":242,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":111,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":164,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":397,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":284,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":119,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":40,"org.apache.commons.collections4.list.TreeListTest.testBug35258":358,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":381,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":311,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":165,"org.apache.commons.collections4.ListUtilsTest.testSelect":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":223,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":147,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":151,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":398,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":424,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":125,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":19,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":68,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":471,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":149,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":133,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":255,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":210,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":18,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":231,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":425,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":38,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":34,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":405,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":140,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":430,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":248,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":368,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":458,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":327,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":265,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":304,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":264,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":461,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":141,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":102,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":190,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":154,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":292,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":73,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":453,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":168,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":259,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":130,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":297,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":421,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":335,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":167,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":466,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":203,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":326,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":315,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":161,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":409,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":432,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":282,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":306,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":220,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":176,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":374,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":280,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":380,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":277,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":208,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":287,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":137,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":316,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":420,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":85,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":232,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":441,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":200,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":428,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":211,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":148,"org.apache.commons.collections4.map.Flat3MapTest.testToString":261,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":439,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":373,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":332,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":448,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":460,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":84},"transformations":[{"failures":[],"tindex":"5995119c-13c3-11e5-8e44-6bb10478aeff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"h","vDown":"key2","i":"h","k":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"59964a1d-13c3-11e5-8e44-e7cc0db164af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"59964a1e-13c3-11e5-8e44-1d711bbe68cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"59964a1f-13c3-11e5-8e44-03e8c6a13f6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[13,14,15,16],"tindex":"59964a20-13c3-11e5-8e44-d91809792ff9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[17],"tindex":"59967131-13c3-11e5-8e44-dd019de24119","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"59967132-13c3-11e5-8e44-15c4b41e546a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"tree","current":"previous","right":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[54,55,56,57,58,59],"tindex":"59967133-13c3-11e5-8e44-fb4dc7560292","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[60,61,62],"tindex":"59969844-13c3-11e5-8e44-6f4d489b7698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"59969845-13c3-11e5-8e44-4bc20a8fe131","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"59973486-13c3-11e5-8e44-9d5f60038360","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1115","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"xFormerRightChild":"y","xFormerLeftChild":"y","x":"xFormerParent","y":"y","dataElement":"dataElement","yWasLeftChild":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[63,64],"tindex":"599a68d7-13c3-11e5-8e44-29fa8e382dac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"599a68d8-13c3-11e5-8e44-e37b41b3a94a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"convertedKey","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"599a68d9-13c3-11e5-8e44-232ff78cf24e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"599a68da-13c3-11e5-8e44-ef16df3d89be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"599a8feb-13c3-11e5-8e44-694f413f7e9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[97,98,99,100,101,102,103,104],"tindex":"599a8fec-13c3-11e5-8e44-6f946e62baaf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:157","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"599a8fed-13c3-11e5-8e44-612a96fd5129","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[134,135,136,137,138,12],"tindex":"599a8fee-13c3-11e5-8e44-c168cb37ba3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[139,140,141,142,143,144,145,146,147,148,149],"tindex":"599a8fef-13c3-11e5-8e44-859c08991c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[150,151,152],"tindex":"599a8ff0-13c3-11e5-8e44-03f92a25693b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[],"tindex":"599a8ff1-13c3-11e5-8e44-351f77de4b91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"599ab702-13c3-11e5-8e44-9fe20a7979a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[153,154,155,156],"tindex":"599ab703-13c3-11e5-8e44-9787bc09f43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"599ab704-13c3-11e5-8e44-536e85f8e8d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[157,158,150,159,160,161,162,163,164,165,166,167,168,169,170,151,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234],"tindex":"599ab705-13c3-11e5-8e44-b3fd1916fa4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"599ab706-13c3-11e5-8e44-59bae1532b58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"599ab707-13c3-11e5-8e44-bd005b138c1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"599ab708-13c3-11e5-8e44-1d904ac2d7ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[235],"tindex":"599ab709-13c3-11e5-8e44-73ed29422fcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-1},{"failures":[],"tindex":"599ab70a-13c3-11e5-8e44-1d53431eaf05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[],"tindex":"599ade1b-13c3-11e5-8e44-c95632868a0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:63","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"status":-2},{"failures":[],"tindex":"599ade1c-13c3-11e5-8e44-8fa4f3383a47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[236,237,238,239,240,241],"tindex":"599ade1d-13c3-11e5-8e44-9582787c3727","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:94","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"variableMap":{"pendingDeletions":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-1},{"failures":[242,243],"tindex":"599ade1e-13c3-11e5-8e44-a981dcb3f799","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super V, ? extends V>) == null) {\n    return V;\n} "},"status":-1},{"failures":[244,245,246,247,248,249],"tindex":"599ade1f-13c3-11e5-8e44-73cd0a8cda4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"599ade20-13c3-11e5-8e44-430fbb35adc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[250,251],"tindex":"599ade21-13c3-11e5-8e44-e793fc115093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"599ade22-13c3-11e5-8e44-6d74fe7a1421","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":0},{"failures":[252],"tindex":"599ade23-13c3-11e5-8e44-830da05b2ae8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[],"tindex":"599b0434-13c3-11e5-8e44-9d22505931a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"599b2b45-13c3-11e5-8e44-5fc59ab3430f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"599b5256-13c3-11e5-8e44-ab55f44385fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"599b5257-13c3-11e5-8e44-dd3bf6e23511","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"result","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"599b5258-13c3-11e5-8e44-85306065e6df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"deletedNode","y":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"599b5259-13c3-11e5-8e44-55ed0fef01e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:752","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<T>.remove()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:686","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    C.execute(java.util.Iterator<T>.next());\n}"},"status":0},{"failures":[253],"tindex":"599b525a-13c3-11e5-8e44-b7e941814f4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"599b525b-13c3-11e5-8e44-65ccdcb20fee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[151,174,254,202,231],"tindex":"599b525c-13c3-11e5-8e44-33d8c9833dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1104","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"599b525d-13c3-11e5-8e44-cfb29fa8e9a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"599eadbe-13c3-11e5-8e44-29ab57146817","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"599ed4cf-13c3-11e5-8e44-55174c5326e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"599ed4d0-13c3-11e5-8e44-6f2d4d3d64d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-2},{"failures":[255,256,257,258,259,260],"tindex":"599ed4d1-13c3-11e5-8e44-3bf5b141c32c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}"},"variableMap":{"this":"this","lock":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,60,283,284,285,286,287,61,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,62,304,305,306,307,308,309,310,311],"tindex":"599ed4d2-13c3-11e5-8e44-c36557b0115b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"599ed4d3-13c3-11e5-8e44-672608bd07b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"node","parent":"node","left":"right","h":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"599ed4d4-13c3-11e5-8e44-8770107307d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[312,313,20,21,314,22,23,24,315,26,27,28,29,316,317,318,319,320,321,322,34,35,323,36,37,38,324,40,41,42,43,325,326,327,328,329,330,331,47,48,332,49,50,51,333,52,53,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"599efbe5-13c3-11e5-8e44-b1680001a44e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"599efbe6-13c3-11e5-8e44-67e51e955120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[153,154,155,156],"tindex":"599efbe7-13c3-11e5-8e44-af564bbefec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"leftChild","rightChild":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"599efbe8-13c3-11e5-8e44-5d2e80256aed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:137","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, C>.clear()"},"status":-2},{"failures":[236,237,238,239,240,241],"tindex":"599efbe9-13c3-11e5-8e44-9155dae91282","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"start1","vDown":"vUp","delta":"start2","end2":"d","this":"this","i":"end1","end1":"start1","k":"end1","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[244,245,246,247,248,249],"tindex":"599efbea-13c3-11e5-8e44-af08bd4ef6f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,60,283,284,285,286,287,61,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,62,304,305,306,307,308,309,310,311],"tindex":"599efbeb-13c3-11e5-8e44-b1aca0f7f7a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"599f22fc-13c3-11e5-8e44-d30f61896455","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"599f22fd-13c3-11e5-8e44-691e5db77c00","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-2},{"failures":[354,355,356,357,358,359,360,361,362,363],"tindex":"599f22fe-13c3-11e5-8e44-45a1a5cfb5b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"599f22ff-13c3-11e5-8e44-798902d5767d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"y","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[354,355,356,357,358,359,364,360,365,366,367,368,369,370,371,372,373,374,375,376,362,377,378,379,380,381,361,382,383,384,385,386,363,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"59a45320-13c3-11e5-8e44-517bd5157358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[],"tindex":"59a45321-13c3-11e5-8e44-5f77c964a4cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"59a45322-13c3-11e5-8e44-190a762327be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"59a47a33-13c3-11e5-8e44-c5d403a8469b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"variableMap":{"hasNext":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"status":0},{"failures":[401,402,403,404,405,406,407,408,409],"tindex":"59a47a34-13c3-11e5-8e44-df2e58f49622","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[410,411,412,413,414,415,416],"tindex":"59a47a35-13c3-11e5-8e44-5dd3b58231f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[417,418],"tindex":"59a47a36-13c3-11e5-8e44-e52e6fd6fdfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"status":-1},{"failures":[],"tindex":"59a47a37-13c3-11e5-8e44-8f7e767a8636","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[419,420],"tindex":"59a47a38-13c3-11e5-8e44-3b53d710dedf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1823","type":"CtReturnImpl","sourcecode":"return int <= 0"},"variableMap":{"ret":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:127","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[],"tindex":"59a4a149-13c3-11e5-8e44-eb70ccc3ba18","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":0},{"failures":[421,106,422,107,423,111,424,116,425,119,426,120,427,123,428,126,429,127,430,132],"tindex":"59a4a14a-13c3-11e5-8e44-77f45709f860","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"59a4a14b-13c3-11e5-8e44-7950a1bc9919","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"59a4a14c-13c3-11e5-8e44-e91cc79b1a9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[431,432,433,434,435,436,153,437,154,438,439,440,441,442,443],"tindex":"59a4a14d-13c3-11e5-8e44-01017547bcda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[236,237,238,239,240,241],"tindex":"59a4a14e-13c3-11e5-8e44-9da9a9e0a9c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"vDown","d":"end1","delta":"end1","i":"end1","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"59a4c85f-13c3-11e5-8e44-31b1543b5764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"59a4c860-13c3-11e5-8e44-c58614aaa9c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460],"tindex":"59a4c861-13c3-11e5-8e44-4d087945df2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"59a4c862-13c3-11e5-8e44-87f7a1ed8c6b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"59a4c863-13c3-11e5-8e44-7913c1c2ffca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"59a4c864-13c3-11e5-8e44-6b914af3de1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"59a4c865-13c3-11e5-8e44-a501b356bf68","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":0},{"failures":[],"tindex":"59a4c866-13c3-11e5-8e44-b188cdfd6ae8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"59a4c867-13c3-11e5-8e44-5d79b6e4f8ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"59a4c868-13c3-11e5-8e44-5f051cdfc903","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"59a4ef79-13c3-11e5-8e44-db417176d80e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:478","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.remove()"},"status":-2},{"failures":[461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484],"tindex":"59a4ef7a-13c3-11e5-8e44-4540154cc217","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"59a4ef7b-13c3-11e5-8e44-872007f69aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[485],"tindex":"59a4ef7c-13c3-11e5-8e44-5bb93a1ff19c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:765","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"59a4ef7d-13c3-11e5-8e44-cfe5a86cd1ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"59a4ef7e-13c3-11e5-8e44-b1bd88dbef0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}