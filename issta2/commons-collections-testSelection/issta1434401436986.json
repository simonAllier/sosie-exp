{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":570,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":327,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":513,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullKey":522,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":251,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":406,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":794,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":405,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":594,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":227,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":277,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":283,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":497,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":717,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":700,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":738,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":299,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":384,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":150,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":553,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":494,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":232,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":782,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":613,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":775,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":577,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":666,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":600,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":259,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":744,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":116,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":517,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":590,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiRemove":465,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":692,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":333,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":784,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":777,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":506,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":685,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":736,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":701,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":450,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":683,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":598,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":280,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":221,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":707,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":732,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":571,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":200,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":495,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":161,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":441,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":238,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":10,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":803,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":344,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":763,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":779,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":489,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":338,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":162,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMakeMap":425,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":418,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":667,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":19,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":665,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":664,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":546,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":661,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":623,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":455,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":587,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":723,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":505,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":658,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":125,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":649,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":29,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":435,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":704,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":500,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":482,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":781,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":760,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":483,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":178,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":677,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":223,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":619,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":597,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":767,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":137,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":647,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":243,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":255,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":532,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":533,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove3":534,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":670,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":778,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":25,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":461,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":322,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":501,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":560,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":798,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":602,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":711,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":417,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":809,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":127,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":410,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":722,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":312,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":431,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":92,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":757,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":551,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":755,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":741,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveChangesMap":539,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":567,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":318,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":362,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":814,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":569,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":258,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":721,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":668,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":720,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullKey":436,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":473,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":304,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":812,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":686,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":780,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":239,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":768,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":493,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":574,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":690,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveChangesMap":457,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":662,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":737,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":286,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":422,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":51,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":699,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":663,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutNullValue":437,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":317,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":754,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":102,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapHashCode":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":389,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":273,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":740,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":290,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":633,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":787,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":502,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":206,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":428,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":769,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":374,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":334,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":734,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":801,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":735,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":69,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":181,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":201,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":407,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":199,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":218,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":698,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":329,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":129,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":791,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":246,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutNullValue":523,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":228,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":398,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":771,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":576,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":689,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":648,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":712,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":393,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":498,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":607,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":786,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":752,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":81,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":363,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":530,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains3":531,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":79,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":529,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":73,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":75,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":697,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":627,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":41,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":31,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":464,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":642,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":715,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":314,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":484,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":643,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":618,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":123,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":454,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":656,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":515,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":386,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":622,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":632,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":756,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":660,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":612,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":611,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":475,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":610,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":23,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":151,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":285,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":821,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":636,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":1,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":471,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":311,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":818,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":518,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":508,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":106,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":347,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":440,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":691,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":284,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testUnmodifiable":462,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":382,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":390,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":66,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":485,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":672,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":486,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":545,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":421,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":109,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":487,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":640,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":764,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":365,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":466,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":108,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":575,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":208,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":563,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":91,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":750,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":542,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":630,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":316,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":719,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":257,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":676,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":813,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":97,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":33,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":788,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":478,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":695,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":595,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveChangesMap":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":328,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":709,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":765,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":119,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":274,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":708,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":61,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":467,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":579,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":819,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":652,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":596,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":396,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":400,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":247,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":114,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":476,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":733,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":430,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":281,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":272,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":2,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":397,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":582,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":682,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":583,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":807,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":581,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":268,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":414,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":800,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":724,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":215,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":26,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":745,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":804,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":810,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":271,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":287,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":639,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":63,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testReset":547,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":416,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":323,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":356,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":678,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":624,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":438,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveChangesMap":543,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":797,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":673,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":679,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":714,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":446,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":447,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove3":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":237,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":133,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":785,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":394,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":795,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":122,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":479,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":488,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":474,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":303,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":580,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":165,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":264,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":187,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":113,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":297,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":432,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":550,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":802,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":254,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testFullMapCompatibility":480,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":593,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":385,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":27,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":231,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":650,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":770,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":759,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":180,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":584,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":536,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMakeMap":511,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":528,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":451,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":99,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":726,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":808,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":278,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":138,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":789,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":716,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":209,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":654,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":408,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":340,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":282,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":696,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":776,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":635,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":443,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":444,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains3":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":402,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":675,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":492,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":118,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":525,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":540,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":427,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":747,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":725,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMakeMap":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":315,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":555,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":339,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":399,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":229,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":609,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":748,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":589,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":746,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":245,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":350,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":392,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":460,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":773,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":526,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":226,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":496,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":728,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":729,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":224,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":507,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":702,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":573,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":372,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":332,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":213,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":641,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":331,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":335,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":653,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":731,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":629,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":256,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":98,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":167,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":713,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":146,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":684,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":361,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":671,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":727,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":751,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":646,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":599,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":783,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":130,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":59,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":348,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":321,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":419,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":524,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":43,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":621,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":816,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":292,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":131,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":412,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":820,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":236,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":822,"org.apache.commons.collections4.set.CompositeSetTest.testContains":110,"org.apache.commons.collections4.CollectionUtilsTest.isFull":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":391,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":296,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":766,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":369,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":442,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":120,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":796,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":516,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":270,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":367,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":342,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":203,"org.apache.commons.collections4.CollectionUtilsTest.reverse":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":294,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":615,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":631,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":463,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":13,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":772,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":790,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":608,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":669,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":263,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":219,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":225,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":124,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":152,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":409,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":423,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":617,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":330,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":762,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":169,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":520,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":730,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":774,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":309,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":276,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":548,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":144,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":142,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":806,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":135,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":805,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":260,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":261,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":262,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":761,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":514,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":8,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":561,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":603,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":307,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":193,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":415,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":160,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":758,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":793,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapHashCode":433,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":128,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":792,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":87,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":401,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":343,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":253,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":202,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":212,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":634,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":749,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":404,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":510,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":817,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":743,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testFullIterator":554,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":753},"transformations":[{"failures":[],"tindex":"2cb06160-13a0-11e5-beee-d971ee1691bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"2cb08871-13a0-11e5-beee-d97d97856036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-2},{"failures":[],"tindex":"2cb08872-13a0-11e5-beee-67b27ff1536c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"2cb0af83-13a0-11e5-beee-49b1101bc95d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":0},{"failures":[],"tindex":"2cb0af84-13a0-11e5-beee-cb2cbcd72db2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"2cb0af85-13a0-11e5-beee-01aae89c8552","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[32,33,34,35],"tindex":"2cb0af86-13a0-11e5-beee-ff80fbb5bb87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"variableMap":{"args":"key2","paramTypes":"key2","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"2cb0af87-13a0-11e5-beee-015682d35d60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"siblingNode","dataElement":"dataElement","child":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[36],"tindex":"2cb0d698-13a0-11e5-beee-3775817f885a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"2cb0d699-13a0-11e5-beee-57311ce7e8c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-2},{"failures":[37],"tindex":"2cb0d69a-13a0-11e5-beee-615401d41791","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:159","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2cb0d69b-13a0-11e5-beee-edd7514be92c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45],"tindex":"2cb0fdac-13a0-11e5-beee-29cea8120fe7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"chainExhausted","beforeFirst":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[],"tindex":"2cb0fdad-13a0-11e5-beee-4f0016b24423","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1476","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BoundedCollection<?>.isFull()"},"variableMap":{"bcoll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[46],"tindex":"2cb0fdae-13a0-11e5-beee-5d7f1553fba2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1442","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"2cb0fdaf-13a0-11e5-beee-7dc50b677d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:278","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{"n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:234","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[47,48,49,50,51,52,53,54],"tindex":"2cb0fdb0-13a0-11e5-beee-ebe663a1b0d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-1},{"failures":[],"tindex":"2cb124c1-13a0-11e5-beee-45d4c2a4bc28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[],"tindex":"2cb124c2-13a0-11e5-beee-0d499c9a75cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"2cb124c3-13a0-11e5-beee-9f31698053eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"2cb124c4-13a0-11e5-beee-9932ea964405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"2cb124c5-13a0-11e5-beee-b1f2beaff78e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[106,107,108,109],"tindex":"2cb14bd6-13a0-11e5-beee-a901ed2db021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[],"tindex":"2cb14bd7-13a0-11e5-beee-8503d30a1d1c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[],"tindex":"2cb14bd8-13a0-11e5-beee-4b93c0a03c1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2cb14bd9-13a0-11e5-beee-9d4d20eb55ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"2cb14bda-13a0-11e5-beee-c1325c36dcff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"newCapacity","start":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[110,55,111,112,113,114,57,115,116,117,118,59,60,62,63,64,65,67,68,69],"tindex":"2cb14bdb-13a0-11e5-beee-0f5b0a78ae00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2cb172ec-13a0-11e5-beee-c3f94370b749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"2cb172ed-13a0-11e5-beee-259c7a15b771","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[119,120,121,122,123],"tindex":"2cb172ee-13a0-11e5-beee-3565e094ae59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[47,124,125,126,127,128,129,130,131,132,133,134,36,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"2cb172ef-13a0-11e5-beee-7d0970b78184","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"2cb172f0-13a0-11e5-beee-015b379a9efc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[165,166,167,24],"tindex":"2cb172f1-13a0-11e5-beee-2786a3581060","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[168,169,170,171,172],"tindex":"2cb19a02-13a0-11e5-beee-871b08a0ca9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"2cb19a03-13a0-11e5-beee-1108dfdb6c97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:278","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.calculateHashCode(K[])"},"status":-2},{"failures":[],"tindex":"2cb19a04-13a0-11e5-beee-593b3437bc97","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":0},{"failures":[],"tindex":"2cb19a05-13a0-11e5-beee-256c5a98da46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"2cb19a06-13a0-11e5-beee-69064e9dcb9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"2cb19a07-13a0-11e5-beee-a704cb79daae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[173,174,175,176,177,178,179],"tindex":"2cb19a08-13a0-11e5-beee-4bce36b01347","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"2cb19a09-13a0-11e5-beee-af2e8c3af389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"2cb19a0a-13a0-11e5-beee-9bbdeb890a96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2cb1c11b-13a0-11e5-beee-cf835daf0cab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[180,181,182,183,184,185,186,187,188,168,189,169,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"2cb1c11c-13a0-11e5-beee-47b8c1c782e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"2cb1c11d-13a0-11e5-beee-b1a2e1c0a2ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:434","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2},{"failures":[],"tindex":"2cb1c11e-13a0-11e5-beee-992d9e929bfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"2cb1c11f-13a0-11e5-beee-7d50c0e5032f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-2},{"failures":[],"tindex":"2cb1c120-13a0-11e5-beee-cbbbbbcfefdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[33,34,35,202],"tindex":"2cb1c121-13a0-11e5-beee-2b040fe54349","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"2cb1c122-13a0-11e5-beee-39f9d3c5af9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2cb1e833-13a0-11e5-beee-15442b632d44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259],"tindex":"2cb1e834-13a0-11e5-beee-abe3303fcb4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[260,261,262,263,264,265,266,267,268,269,270,271],"tindex":"2cb1e835-13a0-11e5-beee-1d2e9ada0a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"2cb1e836-13a0-11e5-beee-05cf3d0f3d10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"2cb1e837-13a0-11e5-beee-230ca6f337bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[106,107,108,109],"tindex":"2cb1e838-13a0-11e5-beee-311024e00a72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"retval","currentIndex":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[],"tindex":"2cb1e839-13a0-11e5-beee-9df9a3dc5434","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[272,273,274,275,276,120,121,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,122,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,123,401,402,403,404,405,406,407,408,409,410],"tindex":"2cb1e83a-13a0-11e5-beee-5f084ba372fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[411,412,413,414,252,415,416,417,418,419,253,254,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,255,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,256,501,502,503,504,505,257,258,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,259,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546],"tindex":"2cb20f4b-13a0-11e5-beee-cf2fc120b4ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[],"tindex":"2cb20f4c-13a0-11e5-beee-755ab997b9db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"2cb20f4d-13a0-11e5-beee-e765377954be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-2},{"failures":[106,107,108],"tindex":"2cb20f4e-13a0-11e5-beee-0b6e00224188","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[547,548,549,550,551,552,553,554,555],"tindex":"2cb20f4f-13a0-11e5-beee-371fab3f3277","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"2cb20f50-13a0-11e5-beee-43ba42d9d01f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedTransformer.chainedTransformer(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-2},{"failures":[111],"tindex":"2cb20f51-13a0-11e5-beee-adba0fbd47d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2cb23662-13a0-11e5-beee-b17d266fd73f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"cmp","modifications":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[556],"tindex":"2cb23663-13a0-11e5-beee-dd7a7b0393df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"2cb23664-13a0-11e5-beee-dd521dd1510d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[557,558,559,560,561,562],"tindex":"2cb23665-13a0-11e5-beee-47228f772544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:853","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.util.Map.Entry<?, ?>.getKey());\n    return (java.util.Map.Entry<K, V> != null) && (java.util.Map.Entry<K, V>.equals(java.util.Map.Entry<?, ?>));\n} "},"variableMap":{"entry":"value","parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"2cb23666-13a0-11e5-beee-711db948f1df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[180,563,181,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,170,587,588,190,171,589,590,591,172,191,192,592,593,182,183,594,184,185,186,595,187,188,596,168,597,598,189,169,599,600,193,601,194,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,195,196,626,197,198,199,627,200,201,628,629,630,631,632],"tindex":"2cb25d77-13a0-11e5-beee-79e91936dccb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-1},{"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,126,127,128,138,145,146,148,151,152,155,156,157,158,159,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,559,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,562,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743],"tindex":"2cb25d78-13a0-11e5-beee-f3dda2174e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[744],"tindex":"2cb28489-13a0-11e5-beee-db3f34726b9c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}"},"status":-1},{"failures":[272,273,275,276,120,121,277,280,317,282,283,290,291,292,296,297,298,301,305,306,307,309,310,314,318,320,321,322,324,325,326,327,329,330,332,334,335,336,345,346,348,349,350,351,352,122,353,354,357,363,364,366,367,368,369,371,372,373,374,376,377,379,381,382,383,388,393,394,396,397,398,399,400,123,401,402,405],"tindex":"2cb2848a-13a0-11e5-beee-fd1a33f663cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"2cb2848b-13a0-11e5-beee-57b84536bd60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[745,746,747,748,749,750],"tindex":"2cb2848c-13a0-11e5-beee-fdf18242190b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"lineageIndex","lengthInBits":"lineageIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"2cb2d2ad-13a0-11e5-beee-356ba5c9d1ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"2cb2d2ae-13a0-11e5-beee-09edde86f760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[],"tindex":"2cb2d2af-13a0-11e5-beee-d96622f87dd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":0},{"failures":[],"tindex":"2cb2d2b0-13a0-11e5-beee-8ba5595ac07f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"rval","this":"this","dataElement":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[751,752],"tindex":"2cb2d2b1-13a0-11e5-beee-83e4e95eaea9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780],"tindex":"2cb2d2b2-13a0-11e5-beee-8f6c3386afe5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[186,199],"tindex":"2cb2d2b3-13a0-11e5-beee-b742e84a7853","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"2cb2d2b4-13a0-11e5-beee-358b7523ca9f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index1","maxElements":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"2cb2d2b5-13a0-11e5-beee-353016f73b0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[182,183,184,185,186,187,188,168,189,169,195,196,197,198,199,200,201],"tindex":"2cb2f9c6-13a0-11e5-beee-7734ecbb76bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1337","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1363","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()"},"status":-1},{"failures":[],"tindex":"2cb2f9c7-13a0-11e5-beee-0b06ef8aded0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"left","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"2cb2f9c8-13a0-11e5-beee-c3c5ea0718a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"2cb2f9c9-13a0-11e5-beee-87a1cc05dabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:189","type":"CtTryImpl","sourcecode":"try {\n    if (java.io.ByteArrayInputStream != null) {\n        java.io.ByteArrayInputStream.close();\n    } \n} catch (final java.io.IOException ex) {\n}"},"variableMap":{"bais":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"2cb2f9ca-13a0-11e5-beee-b5e92fef65a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"2cb2f9cb-13a0-11e5-beee-a1c497752b1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(super.values())"},"status":-2},{"failures":[],"tindex":"2cb2f9cc-13a0-11e5-beee-4b30942916cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:142","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super K>) != null) && ((org.apache.commons.collections4.Predicate<? super K>.evaluate(K)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\");\n} "},"status":-2},{"failures":[781],"tindex":"2cb2f9cd-13a0-11e5-beee-4f866f3bddda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[165,166,167,24],"tindex":"2cb2f9ce-13a0-11e5-beee-d98973e47a1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"2cb2f9cf-13a0-11e5-beee-b59a0419550c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[782,783,784,785,786,787,788,789,790,791,792,793],"tindex":"2cb320e0-13a0-11e5-beee-6fa93f9958ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2cb320e1-13a0-11e5-beee-03c4ed3ed3d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,37,818,819,820,821,822],"tindex":"2cb320e2-13a0-11e5-beee-a7d28c43b191","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}