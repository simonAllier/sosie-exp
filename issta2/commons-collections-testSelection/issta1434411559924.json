{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":769,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":586,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":188,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":743,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":274,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":772,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":727,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":379,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":365,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":375,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":686,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":239,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":354,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":125,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":693,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":495,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":678,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":508,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":758,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":559,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":1,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":50,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":291,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":410,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":423,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":543,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":251,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":65,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":545,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":276,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":705,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":464,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":199,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":753,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":403,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":599,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":425,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":593,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":518,"org.apache.commons.collections4.CollectionUtilsTest.intersection":163,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":484,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":327,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":263,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":452,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":659,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":435,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":255,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":549,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":444,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":492,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":390,"org.apache.commons.collections4.map.CompositeMapTest.testPut":155,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":747,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":407,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":498,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":584,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":712,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":361,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":576,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":707,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":746,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":348,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":349,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFirstKey":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":197,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":243,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":613,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":428,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":419,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":490,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":323,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":324,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":439,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":539,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":764,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":639,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":735,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":176,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":14,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":752,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":442,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":328,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":656,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":55,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":771,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":468,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":347,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":457,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":563,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":388,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":670,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":615,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":572,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":776,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":267,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":116,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":218,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":538,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":629,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":583,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":184,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":297,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":666,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":662,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":744,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":731,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":698,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":767,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":569,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":688,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":181,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":722,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":768,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":307,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":306,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":646,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":178,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":418,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":401,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":269,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":355,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":638,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":64,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":544,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":750,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":170,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":757,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":552,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":737,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":738,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":736,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":641,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":626,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":61,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":479,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":720,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":451,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":723,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":20,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":500,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":725,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":634,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":701,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":608,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":284,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":597,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":98,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":602,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":258,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":571,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":579,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":192,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":671,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":254,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":573,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":459,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":412,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":687,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":339,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":400,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":706,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":189,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":56,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":689,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":675,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":149,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":115,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":278,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":517,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":277,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":159,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":605,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":658,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":660,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":227,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":209,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":558,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":766,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":332,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":285,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":402,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":568,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":541,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":237,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":530,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":234,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":338,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":680,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":393,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":642,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":392,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":692,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":756,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":405,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":536,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":616,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":470,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":759,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":751,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":430,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":137,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":169,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":700,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":404,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":317,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":762,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":222,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":685,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":226,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":524,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":650,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":46,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":537,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":259,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":211,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":471,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":491,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":591,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":567,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":589,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":420,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":551,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":594,"org.apache.commons.collections4.map.Flat3MapTest.testToString":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":166,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":303,"org.apache.commons.collections4.map.ListOrderedMapTest.testFirstKey":106,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":486,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":382,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":172,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":318,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":78,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":119,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":41,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":356,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":704,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":566,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":480,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":564,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":18,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":316,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":732,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":229,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":733,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":233,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":652,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":416,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":542,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":411,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":667,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":27,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":548,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":695,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":465,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":493,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":474,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":220,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":447,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":555,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":230,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":503,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":511,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":257,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":417,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":618,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":206,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":761,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":432,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":52,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":143,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":714,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":467,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":546,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":612,"org.apache.commons.collections4.map.CompositeMapTest.testGet":154,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":309,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":648,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":207,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":728,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":350,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":617,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":351,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":293,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":676,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":540,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":774,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":637,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":114,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":228,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":94,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":203,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":446,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":325,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":478,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":644,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":139,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":415,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":554,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":740,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":741,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":765,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":383,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":489,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":321,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":320,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":679,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":690,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":337,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":651,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":684,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":336,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":481,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":691,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":694,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":221,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":497,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":513,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":138,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":718,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":421,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":630,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":121,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":117,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":609,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":21,"org.apache.commons.collections4.ListUtilsTest.testSubtract":409,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":729,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":550,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":709,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":124,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":406,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":216,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":173,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":236,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":476,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":441,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":436,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":399,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":463,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":663,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":440,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":655,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":577,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":683,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":205,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":377,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":773,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":708,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":232,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":214,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":673,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":453,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":426,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":357,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":654,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":157,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":156,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":742,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":682,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":702,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":283,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":24,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":296,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":672,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":422,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":244,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":25,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":533,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":381,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":516,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":610,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":191,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":193,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":360,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":275,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":150,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":141,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":607,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":590,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":632,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":653,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":161,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":715,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":249,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":158,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":250,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":755,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":359,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":343,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":208,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":527,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":719,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":721,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":775,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":645,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":501,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":505,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":344,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":434,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":578,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":507,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":677,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":488,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":450,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":112,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":574,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":636,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":627,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":311,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":183,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":592,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":603,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":448,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":69,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":509,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":506,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":458,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":15,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":461,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":71,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":0,"org.apache.commons.collections4.set.CompositeSetTest.testContains":152,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":611,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":697,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":622,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":726,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":219,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":132,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":601,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":312,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":499,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":713,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":395,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":526,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":253,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":624,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":674,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":212,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":195,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":512,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":130,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":373,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":374,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":364,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":587,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":560,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":649,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":633,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":13,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":760,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":730,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":668,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":606,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":556,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":315,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":314,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":469,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":510,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":387,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":175,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":248,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":754,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":604,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":473,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":134,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":570,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":96,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":482,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":749,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":631,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":770,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":261,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":262,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":185,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":582,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":146,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":623,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":342,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":557,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":109,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":12,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":696,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":724,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":11,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":745,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":748,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":368,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":362,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":241,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":369,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":235,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":87,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":144,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":443,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":304,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":305,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":370,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":363,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":496,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":47,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":371,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":494,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":238,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":515,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":475,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":625,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":300},"transformations":[{"failures":[],"tindex":"be73a176-13b7-11e5-9b6f-e9416daccd6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"be73c887-13b7-11e5-9b6f-51c5433877ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"be73c888-13b7-11e5-9b6f-b57d4fe04580","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[0],"tindex":"be73c889-13b7-11e5-9b6f-19123b68b482","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure<? super T>)"},"variableMap":{"closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"be74d9fa-13b7-11e5-9b6f-af622e0005c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"be74d9fb-13b7-11e5-9b6f-87eb2ce92030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"be74d9fc-13b7-11e5-9b6f-df97487f8fda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-2},{"failures":[34],"tindex":"be74d9fd-13b7-11e5-9b6f-27daa02eb78a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"be74d9fe-13b7-11e5-9b6f-6354e295a5a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"be74d9ff-13b7-11e5-9b6f-6f4a18ea64be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"item":"obj","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"be750110-13b7-11e5-9b6f-4fdc5adf40e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":0},{"failures":[52],"tindex":"be750111-13b7-11e5-9b6f-43cfc8bf68dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"be750112-13b7-11e5-9b6f-b5345da734eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.MapIterator<? extends K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n} "},"status":-2},{"failures":[36,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,39,40,42,43,44,45,47,48,49],"tindex":"be750113-13b7-11e5-9b6f-c944a9447461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[68,69,70,71],"tindex":"be750114-13b7-11e5-9b6f-e5f3d17bf58f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"added","nextCalled":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"be750115-13b7-11e5-9b6f-83806f572f1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"be750116-13b7-11e5-9b6f-070863f72747","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}"},"status":-2},{"failures":[],"tindex":"be750117-13b7-11e5-9b6f-37c15480ab93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-2},{"failures":[91,92,93,94],"tindex":"be752828-13b7-11e5-9b6f-6333cd2fb750","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[95,96],"tindex":"be752829-13b7-11e5-9b6f-35c7f68d736b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:574","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"be75282a-13b7-11e5-9b6f-07356bde3bb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"be75282b-13b7-11e5-9b6f-1dcbcba91642","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"be75282c-13b7-11e5-9b6f-2b5d6e017ccb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[97,98,99,100,101,102,103],"tindex":"be75282d-13b7-11e5-9b6f-d9a7aff79e56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl","sourcecode":"return (this.int) > (this.int)"},"variableMap":{"startIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[104,105,106,107],"tindex":"be75282e-13b7-11e5-9b6f-2591e1fd8eaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[108,109,110,111,112,113,114,115,116,117],"tindex":"be75282f-13b7-11e5-9b6f-85fe960ebc13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"be754f40-13b7-11e5-9b6f-0fe7f04b522a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[],"tindex":"be754f41-13b7-11e5-9b6f-01c928388274","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[150,151,152,35,153,154,155,156,157,158,159,160,161,162,163,164],"tindex":"be754f42-13b7-11e5-9b6f-2303e1fa7a89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"variableMap":{"helper":"helper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-1},{"failures":[],"tindex":"be754f43-13b7-11e5-9b6f-8fa49dff9cae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-2},{"failures":[118,119,120,121,122,165,166,167,123,124,125,168,169,170,171,172,173,126,127,128,129,130,131,132,133,134,135,136,137,138,139,174,175,176,177,140,178,141,142,143,144,145,146,147,148,149,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239],"tindex":"be754f44-13b7-11e5-9b6f-9785b601e57d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[240,241,242,243,244,245],"tindex":"be754f45-13b7-11e5-9b6f-b1ddfd9a9031","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"start2","d":"delta","offset":"d","vDown":"vUp","delta":"end2","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vDown","equator":"equator","end2":"end2","end1":"delta","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"be754f46-13b7-11e5-9b6f-ed82966ee075","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[246],"tindex":"be757657-13b7-11e5-9b6f-039e5fa73890","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"be757658-13b7-11e5-9b6f-c3e87f77a1f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"be7687c9-13b7-11e5-9b6f-65988aeb2577","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[],"tindex":"be76aeda-13b7-11e5-9b6f-0f4f1130a5a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"methodName","defaultValue":"methodName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:72","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"be76aedb-13b7-11e5-9b6f-b5281e2fc8c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"p","left":"p","h":"parent","right":"h","child":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"be76aedc-13b7-11e5-9b6f-a19492486406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"path","right":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"be76aedd-13b7-11e5-9b6f-2b91bba48d5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"next","key2":"key5","previous":"next","hashCode":"hashCode","key3":"key5","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[108,109,110,111,112,114,117,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,19,20,21,22,23,284,24,25,26,27,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352],"tindex":"be76aede-13b7-11e5-9b6f-97dd6342248a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"be76aedf-13b7-11e5-9b6f-7d181715d11d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"key3","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"be76aee0-13b7-11e5-9b6f-2f45f09c718e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"leftChild","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"be76d5f1-13b7-11e5-9b6f-dd8a9eef9036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[7],"tindex":"be76d5f2-13b7-11e5-9b6f-81ef1d353ac8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} "},"status":-1},{"failures":[],"tindex":"be76d5f3-13b7-11e5-9b6f-09c5783ae964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:929","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"be76d5f4-13b7-11e5-9b6f-a1c307b3d94d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[],"tindex":"be76d5f5-13b7-11e5-9b6f-13b426fb7341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"variableMap":{"predicates":"preds","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-2},{"failures":[97,98,99,100,353,101,354,355,356,357,102,103],"tindex":"be76d5f6-13b7-11e5-9b6f-cddce8fff73a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"variableMap":{"comparator":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[358],"tindex":"be76d5f7-13b7-11e5-9b6f-752b7bce4355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"be76d5f8-13b7-11e5-9b6f-c74fa7f16c4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[359,360,361,362,363,364,365],"tindex":"be76fd09-13b7-11e5-9b6f-d791de49220e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"be76fd0a-13b7-11e5-9b6f-d55fd50ac4d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:921","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"be76fd0b-13b7-11e5-9b6f-df8592148157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"be76fd0c-13b7-11e5-9b6f-4327ad20fc94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"siblingNode","to":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[68,69,70,71],"tindex":"be76fd0d-13b7-11e5-9b6f-f5f6da2e1679","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"added","beforeFirst":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"be76fd0e-13b7-11e5-9b6f-e30377bd3447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[366,367,368,369,370,371,372,373,374,375,376,377],"tindex":"be77241f-13b7-11e5-9b6f-eda1a48d8482","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"be772420-13b7-11e5-9b6f-01341c5d18b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"xFormerParent","dataElement":"dataElement","child":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394],"tindex":"be772421-13b7-11e5-9b6f-6f4f5039cc06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[34,395,396,397,398,399,400,401,402,403],"tindex":"be772422-13b7-11e5-9b6f-69d01c07e32a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"be772423-13b7-11e5-9b6f-a553cfde2974","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"be772424-13b7-11e5-9b6f-e1aebfa952ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"be772425-13b7-11e5-9b6f-7db258b3d711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key1","hashCode":"hashCode","key3":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[404,405,406,407],"tindex":"be772426-13b7-11e5-9b6f-5d28cd303308","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl","sourcecode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} "},"status":-1},{"failures":[],"tindex":"be772427-13b7-11e5-9b6f-f9e0a2397d3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"entry","previous":"current","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[408],"tindex":"be772428-13b7-11e5-9b6f-4f096254012c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtIfImpl","sourcecode":"if (java.util.List<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>));\n    return java.util.List<E>;\n} "},"status":-1},{"failures":[409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,91,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,92,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,93,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,94,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,161,671,672,673,164,674],"tindex":"be774b39-13b7-11e5-9b6f-09fbd44cdc32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"be774b3a-13b7-11e5-9b6f-6304ae143421","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"be774b3b-13b7-11e5-9b6f-05bbdfa25b42","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"be774b3c-13b7-11e5-9b6f-b58e8070f2f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-2},{"failures":[],"tindex":"be774b3d-13b7-11e5-9b6f-4b8113b8d0ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"be774b3e-13b7-11e5-9b6f-0dc055cf7f29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[],"tindex":"be774b3f-13b7-11e5-9b6f-fdeca663b29c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"key","d":"total","delta":"total","i":"total","k":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"be774b40-13b7-11e5-9b6f-3b366678c8af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"be777251-13b7-11e5-9b6f-495a092572dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[240,241,242,244,245],"tindex":"be777252-13b7-11e5-9b6f-376c3340739f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>)"},"status":-1},{"failures":[],"tindex":"be799533-13b7-11e5-9b6f-9b1e3d3d52b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[209,210,211,675,212,213,214,215,216,217,676,218,219,220,677,221,222,223,678,679,680,681,224,225,226,682,683,684,227,228,685,229,230,231,232,233,234,235,236,237,238,239,686,687],"tindex":"be79bc44-13b7-11e5-9b6f-e392fc4342b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[688,689],"tindex":"be79bc45-13b7-11e5-9b6f-8f0bac6e094f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closures must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"be79bc46-13b7-11e5-9b6f-8da3ac750dc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"x","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"be79bc47-13b7-11e5-9b6f-f3f5643dcc09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"be79bc48-13b7-11e5-9b6f-c1e4f8f3fc23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:386","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[240,241,242,243,244,245],"tindex":"be79bc49-13b7-11e5-9b6f-4d729879fdc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[690,691,692,693,694,695,696,697],"tindex":"be79bc4a-13b7-11e5-9b6f-c70c9fea8b9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[],"tindex":"be79bc4b-13b7-11e5-9b6f-5d21edcac23a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"be79bc4c-13b7-11e5-9b6f-0b09250590cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"be79bc4d-13b7-11e5-9b6f-c518af5d5a27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[68,69,70,71],"tindex":"be79e35e-13b7-11e5-9b6f-5358645aaa84","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[118,698,699,120,121,122,165,166,167,123,124,125,168,169,170,171,172,173,126,127,128,129,130,131,132,133,134,135,136,137,138,139,174,175,177,140,178,141,142,143,144,145,146,147,148,149,700,119,181,182,701,183,184,185,186,187,188,702,703,189,190,191,704,705,192,193,194,706,707,708,709,710,195,711,712,713,714,715,716,196,197,717,198,199,200,201,202,203,204,205,206,207,208,718,719,720,721,722,209,210,211,675,212,213,214,215,216,217,723,676,218,219,220,724,677,221,222,223,678,679,680,681,224,225,725,226,726,682,727,683,728,684,227,228,685,229,230,231,232,233,234,235,236,237,238,239,686,687,729,730,731],"tindex":"be79e35f-13b7-11e5-9b6f-fd55bc895fbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[246,732,733,734,13,735,14,736,737,738,739,740,741,742,743,744,745,746,108,109,747,110,111,112,15,113,114,748,115,749,750,116,117,751,752,753,247,248,754,249,250,755,756,757,758,759,760,761,762,763,251,764,765,766],"tindex":"be79e360-13b7-11e5-9b6f-ad638be68a85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"be79e361-13b7-11e5-9b6f-bd83414535a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":0},{"failures":[767,768,769,80,82,770,771,772,773,774,775,776],"tindex":"be79e362-13b7-11e5-9b6f-35733d9aa268","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"be79e363-13b7-11e5-9b6f-012b7ab826cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:114","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.intValue()"},"variableMap":{"count":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}"},"status":-2},{"failures":[],"tindex":"be79e364-13b7-11e5-9b6f-d1ce8aeb74d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[767,768,769,80,82,770,771,772,773,774,775,776],"tindex":"be79e365-13b7-11e5-9b6f-e9957b630c32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":96,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}