{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":463,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":221,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":336,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":506,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":417,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":158,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":327,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":64,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":209,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":291,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":129,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":230,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":229,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":306,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":503,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":15,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":374,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":335,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":382,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":313,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":390,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":136,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":126,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":462,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":241,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":202,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":432,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":439,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":495,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":499,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":128,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":409,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":448,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":44,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":444,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":509,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":76,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":308,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":139,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":515,"org.apache.commons.collections4.CollectionUtilsTest.select":2,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":453,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":488,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":99,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":342,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":473,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":265,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":496,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":525,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":440,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":375,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":450,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":263,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":73,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":381,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":105,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":296,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":418,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":422,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":8,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":244,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":300,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":309,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":339,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":429,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":513,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":133,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":371,"org.apache.commons.collections4.map.CompositeMapTest.testGet":531,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":271,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":251,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":403,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":0,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":468,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":43,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":530,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":36,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":367,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":237,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":471,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":289,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":494,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":47,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":141,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":360,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":446,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":442,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":355,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":210,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":72,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":268,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":361,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":74,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":24,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":157,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":19,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":124,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":315,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":193,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":192,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":383,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":445,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":127,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":190,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":191,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":410,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":459,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":518,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":212,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":119,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":486,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":272,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":103,"org.apache.commons.collections4.ListUtilsTest.testSubtract":302,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":369,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":187,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":10,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":380,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":333,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":484,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":249,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":293,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":337,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":458,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":419,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":420,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":377,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":264,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":479,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":523,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":94,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":208,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":436,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":345,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":498,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":438,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":482,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":233,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":236,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":285,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":252,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":201,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":231,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":491,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":516,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":316,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":214,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":20,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":319,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":399,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":140,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":205,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":290,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":107,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":443,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":426,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":408,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":455,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":102,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":384,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":514,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":483,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":466,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":470,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":220,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":194,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":98,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":235,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":510,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":172,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":122,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":434,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":87,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":350,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":356,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":366,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":145,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":61,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":394,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":142,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":131,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":50,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":480,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":153,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":469,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":245,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":328,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":492,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":321,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":378,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":464,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":115,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":400,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":184,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":402,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":232,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":392,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":116,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":520,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":318,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":497,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":275,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":490,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":118,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":404,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":472,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":218,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":451,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":217,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":196,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":493,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":437,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":250,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":292,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":164,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":225,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":329,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":246,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":169,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":507,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":211,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":299,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":527,"org.apache.commons.collections4.ListUtilsTest.testSelect":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":197,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":441,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":401,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":364,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":152,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":78,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":456,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":526,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":363,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":243,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":238,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":188,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":277,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":423,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":425,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":512,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":379,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":385,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":267,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":110,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":416,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":14,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":330,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":310,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":200,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":227,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":326,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":343,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":270,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":135,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":125,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":454,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":45,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":323,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":351,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":258,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":389,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":457,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":478,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":266,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":215,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":353,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":66,"org.apache.commons.collections4.map.LRUMapTest.testLRU":175,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":431,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":144,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":113,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":88,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":362,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":170,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":338,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":391,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":149,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":287,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":406,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":30,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":501,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":305,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":397,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":297,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":398,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":352,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":22,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":183,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":372,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":279,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":295,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":75,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":278,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":31,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":280,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":281,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":57,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":68,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":415,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":517,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":143,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":146,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":354},"transformations":[{"failures":[],"tindex":"ef600b05-13e7-11e5-be06-49f669d2576c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[0],"tindex":"ef616a96-13e7-11e5-be06-8d5086f8d173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[1,2],"tindex":"ef6191a7-13e7-11e5-be06-0d2b0088aa20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ef6191a8-13e7-11e5-be06-71fb278fe1b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"ef61b8b9-13e7-11e5-be06-9f149ea12805","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[],"tindex":"ef61b8ba-13e7-11e5-be06-fb8d750ba79b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":0},{"failures":[],"tindex":"ef61dfcb-13e7-11e5-be06-13516a688686","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"total","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[25],"tindex":"ef61dfcc-13e7-11e5-be06-c764d607ac99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1595","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The comparator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"ef6206dd-13e7-11e5-be06-bb919fcc3099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"ef6206de-13e7-11e5-be06-5737d6fd4356","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"ef622def-13e7-11e5-be06-7b8d0f83d8ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[154,155,156,157,158,159,160,161,162],"tindex":"ef622df0-13e7-11e5-be06-873f45e7645e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"yFormerRightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"ef6402b1-13e7-11e5-be06-f7656d2232f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"variableMap":{"cursor":"cursor","node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"ef6429c2-13e7-11e5-be06-9f95b76db4da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index1","maxElements":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[26,163,27,164,165,28,29,166,30,167,31,168,32,33,34,35,36,169,37,38,39,170,40,171,41,42,43,46,47,48,49,50,172,173,51,52,53,54,174,175,56,57,58,59,176,177,178,179,180,181,182,183,184,185,186,71,72,73,74,75,187,188,76,77,78,79,189,190,191,192,193,80,194,195,196,197,198,199,200,201,202,203,204,205,206,81,82,83,84,85,207,208,86,87,88,89,209,210,211,212,213,214,215,91,92,93,94,95,216,96,97,98,99,217,218,219,220,100,221,222,101,102,103,104,105,223,106,107,108,109,224,112,113,114,115,116,225,226,117,118,119,120,227],"tindex":"ef6429c3-13e7-11e5-be06-df16b81dae7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"ef6450d4-13e7-11e5-be06-c9fd96e22041","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:52","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>))"},"status":-2},{"failures":[228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"tindex":"ef6450d5-13e7-11e5-be06-1b03288dd579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"ef6450d6-13e7-11e5-be06-e56401d35943","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","newCapacity":"length","proposedCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"ef6450d7-13e7-11e5-be06-d35d8945e2af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"childValue","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[0],"tindex":"ef6450d8-13e7-11e5-be06-49adf1bbcdab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":-1},{"failures":[],"tindex":"ef6477e9-13e7-11e5-be06-c1de806f7d79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"key","obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ef6477ea-13e7-11e5-be06-ab0ccb74f80b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[286,287,288,289,290,291],"tindex":"ef65fe8b-13e7-11e5-be06-2f01debb4e44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"delta","end2":"k","this":"this","i":"end2","end1":"i","k":"end2","start2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"ef65fe8c-13e7-11e5-be06-e17c28b1d005","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":0},{"failures":[292,293,294,295,296,297,298,299,300,301],"tindex":"ef65fe8d-13e7-11e5-be06-d5bc47c1e477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"ef66259e-13e7-11e5-be06-6f65e7beb06a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[154,155,156,157,158,159,160,161,162],"tindex":"ef66259f-13e7-11e5-be06-7798662023af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"to","rightChild":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[302,303],"tindex":"ef6625a0-13e7-11e5-be06-dbbf97c9d30e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ef6625a1-13e7-11e5-be06-750d3ff7e596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"node","to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[286,287,288,289,290,291],"tindex":"ef6ae092-13e7-11e5-be06-1fd1c22a4eea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"delta","start":"i","end":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"ef6ba3e3-13e7-11e5-be06-93ceee40147a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[304,305,306,307,308,309,310,311,312,60,61,62,63,64,65,66,67,68,313,314,315,316,317,318,319,91,92,93,94,95,96,97,98,99,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,238,239,241,242,243,246,248,251,252],"tindex":"ef6ba3e4-13e7-11e5-be06-a3fb87c3090b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[309,325,331],"tindex":"ef6ba3e5-13e7-11e5-be06-47d382c3c1ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"first","beforeFirst":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":-1},{"failures":[],"tindex":"ef6bcaf6-13e7-11e5-be06-878b8d5234a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"ef6bcaf7-13e7-11e5-be06-1f85edd47692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"ef6bcaf8-13e7-11e5-be06-49b65e000292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-2},{"failures":[335],"tindex":"ef6bcaf9-13e7-11e5-be06-4bdd5154f653","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:380","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.remove(java.util.Collection<E>)"},"status":-1},{"failures":[],"tindex":"ef6bcafa-13e7-11e5-be06-bf15e8683301","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"ef6bcafb-13e7-11e5-be06-3f54f859a7eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-2},{"failures":[],"tindex":"ef6bf20c-13e7-11e5-be06-7d553d977e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[110,336,337,338,339,340,341,342],"tindex":"ef6bf20d-13e7-11e5-be06-497fbf06d611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[],"tindex":"ef6bf20e-13e7-11e5-be06-25a94cd876fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"ef6bf20f-13e7-11e5-be06-71a459abd496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"ef6bf210-13e7-11e5-be06-6bebc76d619a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"variableMap":{"this":"uniqueSet","set1":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[],"tindex":"ef6bf211-13e7-11e5-be06-a1fe9d81c063","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"ef6c1922-13e7-11e5-be06-edce37157e45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[177,178,176,70],"tindex":"ef6c1923-13e7-11e5-be06-033db0aa0e17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[343,344,345,346,154,155,347,348,349,156,157,158,159,160,161,162],"tindex":"ef6c6744-13e7-11e5-be06-4f6673439824","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[125,127,130,134,135,137,141,143,147,150,153],"tindex":"ef6e8a25-13e7-11e5-be06-a9c63f619a9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-1},{"failures":[],"tindex":"ef6e8a26-13e7-11e5-be06-eb0337437e71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[],"tindex":"ef6eb137-13e7-11e5-be06-67e15433c14e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[350,351],"tindex":"ef6eb138-13e7-11e5-be06-319e0907d32a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ef6eb139-13e7-11e5-be06-87062ccee7ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ef6eb13a-13e7-11e5-be06-5fc2f19450bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"ef6eb13b-13e7-11e5-be06-dd229c32eb5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[44,352,45,172,353,354,355,356,357,210,358,359,101,102,103,104,105,106,107,108,109,110,360,361],"tindex":"ef6eb13c-13e7-11e5-be06-17f073a59d5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"ef6ed84d-13e7-11e5-be06-7d93d7fca442","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":0},{"failures":[362],"tindex":"ef6ed84e-13e7-11e5-be06-91692513ed9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"ef6ed84f-13e7-11e5-be06-2f6fb7620f15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"variableMap":{"root":"p","h":"p","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"ef6ed850-13e7-11e5-be06-ff24cad71bc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","leftChild":"x","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":0},{"failures":[363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,232,233,238,239,241,242,243,244,246,248,251,252,266,270,271,272],"tindex":"ef6ed851-13e7-11e5-be06-eb04b580e4c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ef6eff62-13e7-11e5-be06-39cf82416689","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"ef6eff63-13e7-11e5-be06-fb49ccd4c095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[],"tindex":"ef6eff64-13e7-11e5-be06-c5e7da139c79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":0},{"failures":[],"tindex":"ef6f4d85-13e7-11e5-be06-4dec9403c8e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[228],"tindex":"ef6f7496-13e7-11e5-be06-ff0c7f843746","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"beginIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"ef6f7497-13e7-11e5-be06-01c3cc3b511a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:554","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"ef6f7498-13e7-11e5-be06-130bcbf9d72f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"variableMap":{"size":"length","cnt":"length","i":"size","locks":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[],"tindex":"ef6f7499-13e7-11e5-be06-c156accafcca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,3,419,420,421,4,422,423,424,425,426,427,5,6,428,7,8,429,9,10,430,431,11,12,13,432,433,434,435,436,437,438,14,15,16,17,18,19,20,21,22,23,24],"tindex":"ef71224a-13e7-11e5-be06-6307d38ebe75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"ef71495b-13e7-11e5-be06-652dbc6a4522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[],"tindex":"ef71495c-13e7-11e5-be06-4197f8e7f607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[176,177,70,178],"tindex":"ef71495d-13e7-11e5-be06-793e3c01facd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"ef71495e-13e7-11e5-be06-5f90599aedc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[439,440],"tindex":"ef71706f-13e7-11e5-be06-df0583b29c2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[441,442,443,444,445,446,447],"tindex":"ef717070-13e7-11e5-be06-9dfb2ddaa230","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ef717071-13e7-11e5-be06-653703dfecbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"ef717072-13e7-11e5-be06-05ef9a9374b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[],"tindex":"ef717073-13e7-11e5-be06-5bf9c1cbb753","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"from","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[448],"tindex":"ef717074-13e7-11e5-be06-b36aa37e0423","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:226","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex();\n} "},"status":-1},{"failures":[],"tindex":"ef717075-13e7-11e5-be06-b3119051f16e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:448","type":"CtIfImpl","sourcecode":"if (java.lang.Byte == null) {\n    java.lang.Byte = java.lang.Byte;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[449,450,451,452,453],"tindex":"ef719686-13e7-11e5-be06-fba172f8af9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:169","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion) {\n    case EQUAL :\n        boolean = int == 0;\n        break;\n    case GREATER :\n        boolean = int > 0;\n        break;\n    case LESS :\n        boolean = int < 0;\n        break;\n    case GREATER_OR_EQUAL :\n        boolean = int >= 0;\n        break;\n    case LESS_OR_EQUAL :\n        boolean = int <= 0;\n        break;\n    default :\n        throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));\n}"},"status":-1},{"failures":[],"tindex":"ef719687-13e7-11e5-be06-99920c437a91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-2},{"failures":[],"tindex":"ef719688-13e7-11e5-be06-0baecb24a671","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"index1","maxElements":"index1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[49,52,174,74,77,198,203,206,84,87,209,454,104,107,224,115,118,227],"tindex":"ef71bd99-13e7-11e5-be06-ff944e7345af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,15,455,18,19,20,21,22,24],"tindex":"ef71e4aa-13e7-11e5-be06-e706892a8689","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ef71e4ab-13e7-11e5-be06-a3805aba3fbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"iterable","b":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"ef71e4ac-13e7-11e5-be06-6109a3d511ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[],"tindex":"ef71e4ad-13e7-11e5-be06-61c4556afe81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,3,419,420,421,4,422,423,424,425,426,427,5,6,428,7,8,429,9,10,430,431,11,12,13,432,433,434,435,436,437,438,14,15,16,17,18,19,20,21,22,23,24],"tindex":"ef71e4ae-13e7-11e5-be06-af44f643f6ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"ef73925f-13e7-11e5-be06-8958dd5b067f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"ef739260-13e7-11e5-be06-b1adffe9b931","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:489","type":"CtAssignmentImpl","sourcecode":"java.lang.Integer = java.lang.Integer"},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:445","type":"CtInvocationImpl","sourcecode":"java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)))"},"status":-2},{"failures":[456,457,458,459,460,461,462,463,464,465,466,467,504,468,469,470,471,505,472,473,474,475,476,477,478,479,480,506,481,482,483,484,485,486,487,488,489,490,507,491,492,493,494,508,495,496,497,498,499,500,501,502,503,509],"tindex":"ef739261-13e7-11e5-be06-09d634a9394d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"ef73b972-13e7-11e5-be06-29684fac3754","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"ef74a3d3-13e7-11e5-be06-6faa219c7a60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"i","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[210,529,530],"tindex":"ef74a3d4-13e7-11e5-be06-639a5a8ebc2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[5,6,428,7,8,9,10,431,11,12,13,432,435],"tindex":"ef74a3d5-13e7-11e5-be06-a366d5bfca00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-1},{"failures":[],"tindex":"ef74a3d6-13e7-11e5-be06-cb016ed4a612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[531,431],"tindex":"ef74a3d7-13e7-11e5-be06-f7f4fb279400","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"ef74a3d8-13e7-11e5-be06-ab6517e17bb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}