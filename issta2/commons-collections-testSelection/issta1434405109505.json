{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":187,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":115,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":176,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectEqualsSelf":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":377,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":399,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":230,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":200,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":358,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":107,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":356,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":264,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":277,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":278,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":265,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":152,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":84,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":235,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":232,"org.apache.commons.collections4.CollectionUtilsTest.get":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":229,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":355,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":153,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":374,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectEqualsSelf":195,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":144,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":91,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":308,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":100,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":175,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":279,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":267,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":389,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":287,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":204,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":334,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":409,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":249,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":47,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":401,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":45,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":120,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":164,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":361,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":29,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":138,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":332,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":333,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":123,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":242,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":305,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":129,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":301,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":307,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":19,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":250,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":65,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":331,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":350,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":17,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":314,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":38,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":145,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":233,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":289,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":231,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":369,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":111,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":268,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":247,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":148,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":177,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":302,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":408,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":89,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":379,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":275,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":371,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":260,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":360,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":156,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":243,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":372,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":87,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":349,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":106,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":313,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":69,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":166,"org.apache.commons.collections4.IteratorUtilsTest.testToList":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":255,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":368,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":163,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":327,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":367,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":348,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":85,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":199,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":203,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":276,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":337,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":370,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":46,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":357,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":244,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":272,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":258,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":15,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":16,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":352,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":261,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":86,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":381,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":118,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":299,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":202,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":281,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":351,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":254,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":225,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":155,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":292,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":237,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":139,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":220,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":216,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":132,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":224,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":74,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":96,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":149,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":56,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":252,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":320,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":97,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":181,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":83,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":222,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":71,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":346,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":345,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":342,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":341,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":344,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":343,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":338,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":340,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":286,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":94,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":375,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":161,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":263,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":108,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":385,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":366,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":295,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":273,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":217,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":185,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":262,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":383,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":269,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":365,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":387,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":248,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":323,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":274,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":303,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":186,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":12,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":364,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":219,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":316,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":117,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":66,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":304,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":212,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":234,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":40,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":157,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":32,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":207,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":109,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":150,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":174,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testAdd":245,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":173,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":211,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":112,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":190,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":354,"org.apache.commons.collections4.map.LRUMapTest.testLRU":405,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":72,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":236,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":403,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":214,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":253,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":402,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":406,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":404,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":282,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":407,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":143,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":336,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":221,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":330,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":238,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":285},"transformations":[{"failures":[],"tindex":"b9af8772-13a8-11e5-a438-fbe6c5ad4c9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b9afae83-13a8-11e5-a438-e51a7788da77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"b9afae84-13a8-11e5-a438-9719033ddfb9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"b9afae85-13a8-11e5-a438-39f7631babc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20],"tindex":"b9afae86-13a8-11e5-a438-c597b8a2c45d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31],"tindex":"b9afd597-13a8-11e5-a438-61c896917572","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"b9afd598-13a8-11e5-a438-0be8fb4634bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[32,33],"tindex":"b9affca9-13a8-11e5-a438-bf104b48e634","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:161","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super I>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n        return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n    } \n}"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"b9affcaa-13a8-11e5-a438-23fbcf560b65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"tree","right":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[48],"tindex":"b9affcab-13a8-11e5-a438-314336cb4dc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1},{"failures":[49,50,51],"tindex":"b9affcac-13a8-11e5-a438-b7b01bf65315","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"b9b023bd-13a8-11e5-a438-7bda5b904d09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"b9b04ace-13a8-11e5-a438-e7ff90e2ca21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b9b04acf-13a8-11e5-a438-eb05c4649862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl","sourcecode":"this.int = -1"},"status":-2},{"failures":[67,68,69,70],"tindex":"b9b04ad0-13a8-11e5-a438-2bcf97718e60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"b9b04ad1-13a8-11e5-a438-0fb4386225fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"status":-2},{"failures":[71,72,52,53,54,55,56,73,57,74,75,76,77,78,58,59,60,61,62,79,63,64,65,66,80,81,82],"tindex":"b9b04ad2-13a8-11e5-a438-95fefa765419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[83,84],"tindex":"b9b071e3-13a8-11e5-a438-019dbbfeefe1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:128","type":"CtForEachImpl","sourcecode":"for (final C C : java.util.Collection<? extends C>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C);\n}"},"status":-1},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"b9b071e4-13a8-11e5-a438-41bfed88e6bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b9b071e5-13a8-11e5-a438-1dd94eac3c93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[52,53,54,55,56,133,57,58,59,134,60,61,62,135,63,64,65,66,136],"tindex":"b9b071e6-13a8-11e5-a438-03f51c18c533","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b9b071e7-13a8-11e5-a438-a9f7e1b77444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"b9b071e8-13a8-11e5-a438-6928504baa83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll1","b":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"status":0},{"failures":[137,138,139],"tindex":"b9b071e9-13a8-11e5-a438-4fdf02093a94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"status":-1},{"failures":[],"tindex":"b9b071ea-13a8-11e5-a438-cd9bc448d48d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K), V)"},"status":-2},{"failures":[],"tindex":"b9b098fb-13a8-11e5-a438-f70d19efff1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"b9b098fc-13a8-11e5-a438-0bf7edf9bbb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[140,141,142,83,143,144,145,146,147,148,149,150,151,152,84,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191],"tindex":"b9b098fd-13a8-11e5-a438-f93b1425dba2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[192],"tindex":"b9b098fe-13a8-11e5-a438-ed78c37e6a17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[70,67,68,69],"tindex":"b9b098ff-13a8-11e5-a438-c79e0a6ff698","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:233","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[93,94,193,95,85,86,87,88,89,90,91,92,96,107,97,98,194,99,100,101,102,103,104,105,106,195,108,109,110,111,196,120,112,113,114,115,116,117,118,119,121,132,122,123,197,124,125,126,127,128,129,130,131,198],"tindex":"b9b09900-13a8-11e5-a438-adb3d6d48bf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[34,35,36,199,200,201,202,203,37,38,39,40,41,204,42,43,44,45,46,205,206,207,208,209,210,211,212],"tindex":"b9b09901-13a8-11e5-a438-5da8f52aa4be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b9b0c012-13a8-11e5-a438-a139c7929997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244],"tindex":"b9b0c013-13a8-11e5-a438-b3c43d9c174c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"b9b0c014-13a8-11e5-a438-6bc2979b0b80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[245],"tindex":"b9b0c015-13a8-11e5-a438-c72103d376b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Initial capacity must be a non negative number\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:157","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() method is not supported\")"},"status":-1},{"failures":[64,66,80,246,81,82,247],"tindex":"b9b0c016-13a8-11e5-a438-ffeac3f8680f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[142,83,84,154],"tindex":"b9b0c017-13a8-11e5-a438-73eb5d4dcc43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":-1},{"failures":[],"tindex":"b9b0c018-13a8-11e5-a438-839851d733fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"predecessor","parent":"right","h":"predecessor","predecessor":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b9b0c019-13a8-11e5-a438-b59e8013cf46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[248,249],"tindex":"b9b0e72a-13a8-11e5-a438-794c594482de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"b9b0e72b-13a8-11e5-a438-2907d8869f74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"b9b0e72c-13a8-11e5-a438-299b6c3e6748","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[250,251,252,253,254,171],"tindex":"b9b0e72d-13a8-11e5-a438-a34f9e998734","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"b9b0e72e-13a8-11e5-a438-9fa10fc8f561","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"obj","parentNode":"obj","dataElement":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:229","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return java.util.Set<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[107,255,132],"tindex":"b9b0e72f-13a8-11e5-a438-e1d4e468ce5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[],"tindex":"b9b0e730-13a8-11e5-a438-ef6fd9004460","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b9b0e731-13a8-11e5-a438-03c5caee97a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[67,70,68,69],"tindex":"b9b10e42-13a8-11e5-a438-bd080d665839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[256,257,258,259],"tindex":"b9b10e43-13a8-11e5-a438-b1d71c21003e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-1},{"failures":[],"tindex":"b9b18374-13a8-11e5-a438-29903865499c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"b9b1aa85-13a8-11e5-a438-7f6a755e7741","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"b9b1aa86-13a8-11e5-a438-2594285aedf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[86,260,113,261],"tindex":"b9b1aa87-13a8-11e5-a438-cbae39f717e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b9b1aa88-13a8-11e5-a438-a731d986b803","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"b9b1aa89-13a8-11e5-a438-639217747a16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[],"tindex":"b9b1aa8a-13a8-11e5-a438-630800806c79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[262,263,264,265,266,267,268,269,270,271,272,201,202,203,46,207,208,273,210,211,274,212,47,275,276],"tindex":"b9b1aa8b-13a8-11e5-a438-f1b5256d3f14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"p","h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[262,264,277,278,267,269],"tindex":"b9b1aa8c-13a8-11e5-a438-3d60d6a03ab3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[279,280],"tindex":"b9b1aa8d-13a8-11e5-a438-1954d8862bf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b9b1d19e-13a8-11e5-a438-070e99000499","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"b9b1d19f-13a8-11e5-a438-8b38ed266c6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[281,282,283,284,285,286,287,288,289,290,291,292,293,69,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"b9b1d1a0-13a8-11e5-a438-6b4b20790b19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b9b1d1a1-13a8-11e5-a438-8d121566aa9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"variableMap":{"length":"h","chars":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[262,264,277,278,267,269,201,202,203,46,207,208,211,212],"tindex":"b9b1d1a2-13a8-11e5-a438-bb5b68c89a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"b9b1d1a3-13a8-11e5-a438-e162066e61a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b9b1d1a4-13a8-11e5-a438-793a210b01e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":0},{"failures":[],"tindex":"b9b1d1a5-13a8-11e5-a438-c3b579e03021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"b9b1d1a6-13a8-11e5-a438-079c018fe505","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[313],"tindex":"b9b1f8b7-13a8-11e5-a438-71d3af657c7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[140,168,173,174],"tindex":"b9b1f8b8-13a8-11e5-a438-59306c907d4c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[314,315],"tindex":"b9b1f8b9-13a8-11e5-a438-3fe386eb2f12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[],"tindex":"b9b1f8ba-13a8-11e5-a438-c3c9886590ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"hashCode","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"b9b1f8bb-13a8-11e5-a438-2b6a55e6208b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[316,317],"tindex":"b9b1f8bc-13a8-11e5-a438-b3b917a28124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334],"tindex":"b9b1f8bd-13a8-11e5-a438-89b4fddc6d38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[335],"tindex":"b9b1f8be-13a8-11e5-a438-9919e46e679e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"b9b21fcf-13a8-11e5-a438-579933aaf3d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":0},{"failures":[],"tindex":"b9b21fd0-13a8-11e5-a438-179df4f8f2d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"b9b21fd1-13a8-11e5-a438-e51d58d04705","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":0},{"failures":[336,337],"tindex":"b9b21fd2-13a8-11e5-a438-07298c7214e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"status":-1},{"failures":[],"tindex":"b9b21fd3-13a8-11e5-a438-7196a42edce6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"path","previous":"path","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":0},{"failures":[68,69,70,67],"tindex":"b9b21fd4-13a8-11e5-a438-1fabe2225989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"h","index":"h","beyond":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"b9b21fd5-13a8-11e5-a438-db2ea9c90b72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[],"tindex":"b9b21fd6-13a8-11e5-a438-27fb7d0b82da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"variableMap":{"buf":"buf","first":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"b9b21fd7-13a8-11e5-a438-5bc3750073fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"b9b21fd8-13a8-11e5-a438-654464e9a7ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[338,339,340,341,342,343,344,345,346,347,348],"tindex":"b9b21fd9-13a8-11e5-a438-a31d566b210a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"full","beforeFirst":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[349,250,350,351,352,353,354,355,356,357,358,359],"tindex":"b9b246ea-13a8-11e5-a438-5302f28c2cf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"leastIndex","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[360,361],"tindex":"b9b246eb-13a8-11e5-a438-f3d3d80071e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-1},{"failures":[349,250,350,351,352,353,354,355,356,357,358,359],"tindex":"b9b246ec-13a8-11e5-a438-4959644d6b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"b9b246ed-13a8-11e5-a438-85471c9cda55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)"},"status":-2},{"failures":[],"tindex":"b9b246ee-13a8-11e5-a438-8956a20618b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"variableMap":{"result":"object","size":"value","length":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[362,363,364,365,366,367,368,369,370,371,372,335,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397],"tindex":"b9b246ef-13a8-11e5-a438-99e382545e83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[398,399,400,401,402,403],"tindex":"b9b246f0-13a8-11e5-a438-351682a4769c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:274","type":"CtForImpl","sourcecode":"for (int int = 0 ; java.util.Iterator<java.util.Comparator<E>>.hasNext() ; ++int) {\n    final java.util.Comparator<? super E> java.util.Comparator<? super E> = java.util.Iterator<java.util.Comparator<E>>.next();\n    int int = java.util.Comparator<? super E>.compare(E, E);\n    if (int != 0) {\n        if ((java.util.BitSet.get(int)) == true) {\n            if (int > 0) {\n                int = -1;\n            } else {\n                int = 1;\n            }\n        } \n        return int;\n    } \n}"},"status":-1},{"failures":[404,405,406,407,408,409,280],"tindex":"b9b246f1-13a8-11e5-a438-dfb5cf4401a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[],"tindex":"b9b246f2-13a8-11e5-a438-cb2fc9fc7c69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"b9b246f3-13a8-11e5-a438-13f586e0294a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"b9b246f4-13a8-11e5-a438-43675eca56d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"variableMap":{"length":"count","chars":"element"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:622","type":"CtIfImpl","sourcecode":"if (O.equals(java.lang.Object)) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"b9b26e05-13a8-11e5-a438-1d34a7a1daf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}