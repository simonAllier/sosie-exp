{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":305,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":210,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":29,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":279,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":465,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":534,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":117,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":250,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":603,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":404,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":459,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":257,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":515,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":484,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":497,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":63,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":482,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":151,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":599,"org.apache.commons.collections4.CollectionUtilsTest.collect":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":323,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":611,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":397,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":553,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":666,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":448,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":656,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":605,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":606,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":269,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":563,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":241,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":529,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":270,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":549,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":421,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":55,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":530,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":571,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":364,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":595,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":491,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":658,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":109,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":524,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":637,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":635,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":540,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":223,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":513,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":415,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":438,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":670,"org.apache.commons.collections4.CollectionUtilsTest.transform2":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":50,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":550,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":620,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":273,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":435,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":370,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":405,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":316,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":449,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":614,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":615,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":613,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":413,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":253,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":175,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":608,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":131,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":298,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":320,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":600,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":557,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":624,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":249,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":500,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":268,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":134,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":592,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":591,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":154,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":686,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":561,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":335,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":314,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":246,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":662,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":638,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":653,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":650,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":499,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":177,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":433,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":159,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":589,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":311,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":216,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":380,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":626,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":8,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":0,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":258,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":532,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":217,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":612,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":13,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":441,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":661,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":14,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":604,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":219,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":329,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":609,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":631,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":476,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":682,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":596,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":622,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":155,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":654,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":232,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":198,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":231,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":230,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":640,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":463,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":657,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":256,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":607,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":516,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":110,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":362,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":583,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":616,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":260,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":16,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":367,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":470,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":280,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":373,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":214,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":283,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":452,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":418,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":377,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":632,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":221,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":623,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":667,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":359,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":519,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":434,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":170,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":633,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":556,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":122,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":344,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":545,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":602,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":355,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":512,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":508,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":62,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":439,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":386,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":363,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":120,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":462,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":511,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":509,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":643,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":303,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":211,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":574,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":340,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":224,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":267,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":389,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":304,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":58,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":87,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":45,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":149,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":646,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":627,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":111,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":498,"org.apache.commons.collections4.map.LRUMapTest.testReset":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":547,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":67,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":619,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":639,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":517,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":265,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":533,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":483,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":348,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":669,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":419,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":588,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":262,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":642,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":156,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":474,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":291,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":287,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":402,"org.apache.commons.collections4.map.LinkedMapTest.testReset":430,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":478,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":672,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":601,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":21,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":288,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":416,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":629,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":346,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":366,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":282,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":361,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":671,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":473,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":315,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":46,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":495,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":31,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":684,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":33,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":278,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":184,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":277,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":368,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":276,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":317,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":564,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":477,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":69,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":334,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":469,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":651,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":668,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":254,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":677,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":400,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":94,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":536,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":537,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":527,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":538,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":192,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":43,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":96,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":688,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":248,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testRemove":490,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":649,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":209,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":376,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":562,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":194,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":559,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":188,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":295,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":100,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":372,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":213,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":102,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":350,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":264,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":412,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":541,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":451,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":35,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":594,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":365,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":506,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":510,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":186,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":53,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":148,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":457,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":579,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":502,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":685,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":552,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":85,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":84,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":327,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":347,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":297,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":80,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":630,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":83,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":489,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":77,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":79,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":78,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":436,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":178,"org.apache.commons.collections4.CollectionUtilsTest.isFull":446,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":408,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":431,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":2,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":259,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":466,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":333,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":621,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":101,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":687,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":212,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":388,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":681,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":225,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":247,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":453,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":586,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":628,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":351,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":207,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":576,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":660,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":425,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":554,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":573,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":566,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":546,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":222,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":567,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":399,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":64,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":531,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":442,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":7,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":116,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":93,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":150,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":569,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":575,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":450,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":356,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":4,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":239,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":238,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":302,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":664,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":655,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":331,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":332,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":634,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":535,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":652,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":385,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":153,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":89,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":472,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":330,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":309,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":163,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":294,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":444,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":353,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":407,"org.apache.commons.collections4.map.LRUMapTest.testLRU":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":542,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":139,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":676,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":293,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":625,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":255,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":525,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":461,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":182,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":349,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":683,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":378,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":518,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":106,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":169,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":680,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":204,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":558,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":98,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":38,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":593,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":424,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":206,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":584,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":460,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":140,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":396,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":565,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":555,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":220,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":171,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":455,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":200,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":409,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":387,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":675,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":468,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":679,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":406,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":375},"transformations":[{"failures":[0,1,2],"tindex":"88992c4f-13c6-11e5-a919-21ccdf332fdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[],"tindex":"889c87b0-13c6-11e5-a919-0bb68a5b9a61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"size","newCapacity":"size","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[3,4,5,6],"tindex":"889c87b1-13c6-11e5-a919-c3c4a4b9f402","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"889c87b2-13c6-11e5-a919-fdbb016c1e7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"889caec3-13c6-11e5-a919-47b3cc080ad3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[],"tindex":"889caec4-13c6-11e5-a919-4bad3148909e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:924","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"root","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"889dc035-13c6-11e5-a919-03d4469131fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16],"tindex":"889e8386-13c6-11e5-a919-55f41c992e2d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"889e8387-13c6-11e5-a919-af199aa6a58e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"889e8388-13c6-11e5-a919-0fffe1e100a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"tree","current":"tree","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[17,18,19,20,21,22],"tindex":"889eaa99-13c6-11e5-a919-bf3aea340cfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"y","vDown":"vUp","i":"i","k":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[23,24],"tindex":"889eaa9a-13c6-11e5-a919-0d4cfd93b397","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1087","type":"CtIfImpl","sourcecode":"if (java.util.Collection<T> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-1},{"failures":[25,26,27,28,29,30,1,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,2,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"889eaa9b-13c6-11e5-a919-773654ef4f16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"hashCode","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"889ed1ac-13c6-11e5-a919-39f5c5aaa268","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:253","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"889ed1ad-13c6-11e5-a919-29834ee391ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"889ed1ae-13c6-11e5-a919-43723f207a06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1049","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"889ef8bf-13c6-11e5-a919-5b836ad50ff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hashCode","removeIndex":"modCount","currentIndex":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"889f6cf0-13c6-11e5-a919-072a8645fed1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"889f6cf1-13c6-11e5-a919-b182160c0010","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"validForUpdate","changed":"validForUpdate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[64,65,66,67,68,69,70,71],"tindex":"889f6cf2-13c6-11e5-a919-6f70ec0ef65b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"889f9403-13c6-11e5-a919-613bceb47cbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"889f9404-13c6-11e5-a919-09133ecaf903","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtIfImpl","sourcecode":"if (java.lang.Short == null) {\n    java.lang.Short = java.lang.Short;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"889fbb15-13c6-11e5-a919-79f477164d4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-2},{"failures":[17],"tindex":"889fbb16-13c6-11e5-a919-973fac687dc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"variableMap":{"list":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"889fbb17-13c6-11e5-a919-4f6b9a63a23a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":0},{"failures":[],"tindex":"889fe228-13c6-11e5-a919-e7ea800d24e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"889fe229-13c6-11e5-a919-df7eecd4d5e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"88a0093a-13c6-11e5-a919-a97b0a1141c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"node","current":"node","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[72,73],"tindex":"88a0304b-13c6-11e5-a919-1be74d734465","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-1},{"failures":[74,75,76],"tindex":"88a18fdc-13c6-11e5-a919-3de9455b8d36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[],"tindex":"88a18fdd-13c6-11e5-a919-752b593551ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"next","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87],"tindex":"88a1b6ee-13c6-11e5-a919-35ef62031187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"88a1ddff-13c6-11e5-a919-a30b2db1ec81","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"88a1de00-13c6-11e5-a919-61dd8d27044e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,15,16,300,301],"tindex":"88a1de01-13c6-11e5-a919-abc0f17d1f52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"newCapacity","index":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[302,303,304,305,3,4,306,307,308,309,5,310,6,311,312,313],"tindex":"88a22c22-13c6-11e5-a919-b5db06b50b89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[292,293,314,294,295,296,297,299,15,16,300,315],"tindex":"88ac3e43-13c6-11e5-a919-290ddb203dae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"88ac6554-13c6-11e5-a919-5be9bca9ac0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":0},{"failures":[316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,25,332,333,334,335,336,337,338,339,340,341,342,343,344,26,27,28,29,30,1,31,32,345,346,33,34,35,36,37,38,39,40,41,42,43,347,348,349,350,351,352,44,45,46,47,48,49,2,50,51,353,354,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"88ac6555-13c6-11e5-a919-d9b976a572fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"88ac6556-13c6-11e5-a919-17a27dc32303","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"88ac8c67-13c6-11e5-a919-99f5722f9399","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[355,356,357,358,359,360,361,362,363,364,365],"tindex":"88ac8c68-13c6-11e5-a919-b53fc70c7b9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtIfImpl","sourcecode":"if (java.lang.Long != null) {\n    final long long = java.lang.Long.longValue();\n    return (long >= 0) && (long >= long);\n} "},"status":-1},{"failures":[],"tindex":"88ac8c69-13c6-11e5-a919-798f05bc0656","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"88ac8c6a-13c6-11e5-a919-09b33d4e38c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"88ac8c6b-13c6-11e5-a919-25f9dcc88bab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"88ac8c6c-13c6-11e5-a919-694c323f272f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"88acb37d-13c6-11e5-a919-67dae9485ca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[210,211,209,366],"tindex":"88acb37e-13c6-11e5-a919-bb9e6b33e13b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"variableMap":{"len":"h","bound":"h","type":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[367],"tindex":"88adebff-13c6-11e5-a919-859b12e616ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-1},{"failures":[],"tindex":"88adec00-13c6-11e5-a919-17ad5a43c21f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:93","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.lengthInBits(K)"},"status":-2},{"failures":[],"tindex":"88adec01-13c6-11e5-a919-15eeb502eb5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:613","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[],"tindex":"88adec02-13c6-11e5-a919-2178a82cbe3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1037","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"88adec03-13c6-11e5-a919-7beee0cff399","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"88adec04-13c6-11e5-a919-71af38c5574e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.ByteArrayOutputStream.close();\n} catch (final java.io.IOException ex) {\n}"},"variableMap":{"baos":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"88adec05-13c6-11e5-a919-47cb43085a95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","left":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[161,162,163,164,368,165,166,167,168,369,169,170,171,172,173,174,175,370,371,372,373,374,176,375,177,376,377,178,179,180,378,379,181,182,183,184,185,186,187,380,381,382,383,384,385,386,387,188,189,388,190,191,192,193,195,196,197,198,389,390,391,392,393,394,203,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,214,215,216,217,416,218,219,220,221,223,224,225,226,417,418,419,420,421,422,423,246,247,424,248,249,250,251,253,254,255,256,425,426,427,428,429,430,431,262,263,264,265,432,266,267,268,269,270,271,272,273,433,434,435,436,437,281,282,438,283,284,285,286,287,288,289,290,439,440,292,293,314,294,295,296,299,15,16,300,441,442,443,444,445],"tindex":"88ae1316-13c6-11e5-a919-cb7946421271","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"88ae1317-13c6-11e5-a919-c13e5c693d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1049","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[446,447,448,449,77,78,79,80,81,82,83,84,85,86,87,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"88ae1318-13c6-11e5-a919-0d525426d40f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"88ae3a29-13c6-11e5-a919-cbe37732649c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"valueSet","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[488,489],"tindex":"88ae3a2a-13c6-11e5-a919-4d5e2c31c246","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"retain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"88ae3a2b-13c6-11e5-a919-73f2b21a02d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"p":"key2","foundCurrentElement":"modified","nextElement":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[292,293,314,294,295,296,297,299,15,16,300],"tindex":"88ae3a2c-13c6-11e5-a919-c52423ccaf3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[490,491],"tindex":"88ae3a2d-13c6-11e5-a919-4fea08e3bad4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":-1},{"failures":[],"tindex":"88ae613e-13c6-11e5-a919-c737099df55f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"node","to":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"88ae613f-13c6-11e5-a919-b38a309cf25c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"parent","tree":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"88ae6140-13c6-11e5-a919-15637434b4cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"88ae6141-13c6-11e5-a919-cf4d1814b70e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"88ae6142-13c6-11e5-a919-7f52b86a1874","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[209,210,366,211],"tindex":"88ae8853-13c6-11e5-a919-07d8da0326b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[492,493,494,495,149],"tindex":"88ae8854-13c6-11e5-a919-2196dddf1e0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"variableMap":{"start":"callCounter","end":"callCounter","full":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[188,189,388,190,191,192,193,195,196,197,198,496,399,400,401,402,403,404,405,406,407,408,409,497,216,217,416,218,219,220,221,223,224,225,226,498,234,235,499,236,237,238,239,241,242,243,244,500,246,247,424,248,249,250,251,253,254,255,256,501,264,265,432,266,267,268,269,270,271,272,273,502,281,282,438,283,284,285,286,287,288,289,290,503,292,293,294,295,296,299,15,16,300],"tindex":"88ae8855-13c6-11e5-a919-7bc0a2a163c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"88ae8856-13c6-11e5-a919-ada43cd7be9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"88ae8857-13c6-11e5-a919-cfeb937cc0ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:225","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"88aeaf68-13c6-11e5-a919-dd03b20c7dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-2},{"failures":[],"tindex":"88aeaf69-13c6-11e5-a919-45df0991883e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[448,449,78,79,80,81,82,83,84,85,86,87,450,452,453,454,463,464,469,471],"tindex":"88aeaf6a-13c6-11e5-a919-ab155e40a8ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"maxElements","newCapacity":"start","proposedCapacity":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"88aeaf6b-13c6-11e5-a919-f3b674c9333b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.isEmpty()) {\n    return \"{}\";\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()"},"status":-2},{"failures":[209,210,366,211],"tindex":"88aeaf6c-13c6-11e5-a919-d15ad22372eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"88aeaf6d-13c6-11e5-a919-3305735fc5dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"88aeaf6e-13c6-11e5-a919-4b1f2089eee7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"lock","type":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}"},"status":-1},{"failures":[3,4,309,5,310,6,311,312,313],"tindex":"88aed67f-13c6-11e5-a919-f5040ec9bb0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[529,530,7,531,8,532,9,10,11,12,13,14,533,534,439,440,292,293,294,295,296,297,298,299,15,16,300,535,536,537,538,301,445,539],"tindex":"88b00f00-13c6-11e5-a919-6b5275a41c64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:343","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    default :\n        org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n        return null;\n    case 2 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 1 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n    case 0 :\n        int = K == null ? 0 : K.hashCode();\n        K = K;\n        V = V;\n        break;\n}"},"status":-1},{"failures":[],"tindex":"88b00f01-13c6-11e5-a919-5b3f4db0f3e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:406","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,303,591,304,305,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,3,607,608,609,4,610,611,612,613,614,615,306,307,616,308,617,618,309,5,619,620,310,6,311,312,313],"tindex":"88b03612-13c6-11e5-a919-7502dd26dda8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"88b03613-13c6-11e5-a919-af275d4a7cdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649],"tindex":"88b03614-13c6-11e5-a919-6de8bdfcac19","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[],"tindex":"88b03615-13c6-11e5-a919-c3f9a38695f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"88b05d26-13c6-11e5-a919-cdf7f309457f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"88b05d27-13c6-11e5-a919-737fa70c1831","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"node","parent":"child","left":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[650],"tindex":"88b05d28-13c6-11e5-a919-5fb3257b2fca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[651,652,653,654,655,656,657,658,512,515,516,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688],"tindex":"88b05d29-13c6-11e5-a919-9f82be84f498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"88b05d2a-13c6-11e5-a919-fd870afa2608","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"88b05d2b-13c6-11e5-a919-d5daf7cd6eb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof java.util.Set<?>) {\n    return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0;\n} "},"status":-2},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"88b0843c-13c6-11e5-a919-85632c9af79d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"88b0843d-13c6-11e5-a919-254e399f2840","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"88b0843e-13c6-11e5-a919-4d2cc41d956f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"status":-2},{"failures":[],"tindex":"88b0843f-13c6-11e5-a919-5525775e8e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[123,140,142],"tindex":"88b08440-13c6-11e5-a919-87ce7e4030ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[25,1,31,32,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,2,50,51,52,45,46,47,48,49,53,54,55,56,57,58,59,60,61,62,63],"tindex":"88b08441-13c6-11e5-a919-69fab13cd6bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}