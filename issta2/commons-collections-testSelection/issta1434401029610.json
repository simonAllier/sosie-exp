{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":214,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":471,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":622,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":694,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":27,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":604,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":527,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":733,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":44,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":574,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":472,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":310,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":97,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":717,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":422,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":736,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":658,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":670,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":410,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":266,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":295,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":300,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":224,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":577,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":608,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":424,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":431,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":238,"org.apache.commons.collections4.map.ListOrderedMap2Test.testSerializeDeserializeThenCompare":607,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":741,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":447,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":706,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":231,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":287,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":288,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":185,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":6,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":169,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":399,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":565,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":193,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":220,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":644,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":164,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":335,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":56,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":550,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":660,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":70,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":588,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":610,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":272,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":558,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":642,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":429,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":514,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":252,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":308,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":727,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":29,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":477,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":123,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":739,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":629,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":695,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":493,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":415,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":684,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":555,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":598,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":135,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":241,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":242,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":240,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":314,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":641,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":699,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":591,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":355,"org.apache.commons.collections4.map.TransformedMapTest.testSerializeDeserializeThenCompare":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":441,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":65,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":530,"org.apache.commons.collections4.map.TransformedSortedMapTest.testSerializeDeserializeThenCompare":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":275,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":303,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":338,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":578,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":179,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":525,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":625,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":33,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":500,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":435,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":589,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":677,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":543,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":719,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":215,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":313,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":212,"org.apache.commons.collections4.map.ListOrderedMapTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":183,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":696,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":426,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":662,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":326,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":210,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":675,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":501,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":204,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":332,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":488,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":154,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":336,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":363,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":482,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":281,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":357,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":701,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":378,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":255,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":329,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":490,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":95,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":397,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":333,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":11,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":301,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":203,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":621,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":497,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":552,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":247,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":323,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":548,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":346,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":451,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":144,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":720,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":133,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":269,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":229,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":522,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":59,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":511,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":635,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":445,"org.apache.commons.collections4.list.TreeListTest.testRemove":508,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":665,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":250,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":258,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":693,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":221,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":388,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":649,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":106,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":579,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":344,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":19,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":381,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":116,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":311,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":384,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":595,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":199,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":233,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":709,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":659,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":450,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":503,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":534,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":664,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":461,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":698,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":244,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":540,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":556,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":425,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":669,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":69,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":339,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":379,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":703,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":273,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":617,"org.apache.commons.collections4.ListUtilsTest.testSubtract":318,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":633,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":691,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":536,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":710,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":671,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":124,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":413,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":732,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":654,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":484,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":485,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":430,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":650,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":122,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":469,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":624,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":376,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":178,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":573,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":443,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":227,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":520,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":643,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":406,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":414,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":460,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":327,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":586,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":103,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":330,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":101,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":637,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":76,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":312,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":467,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":483,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":82,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":261,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":374,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":325,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":343,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":157,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":545,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":267,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":452,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":149,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":724,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":251,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":307,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":126,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":648,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":21,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":524,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":395,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":494,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":217,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":509,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":580,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":597,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":119,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":679,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":434,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":626,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":277,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":513,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":390,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":538,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":45,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":260,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":226,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":96,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":291,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":278,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":296,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":516,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":506,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":554,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":714,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":688,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":271,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":722,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":419,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":657,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":353,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":392,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":464,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":476,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":91,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":479,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":517,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":729,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":75,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":602,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":620,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":186,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":515,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":309,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":259,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":98,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":582,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":453,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":285,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":551,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":645,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":529,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":356,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":639,"org.apache.commons.collections4.ArrayStackTest.testNewStack":743,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":37,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":320,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":718,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":537,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":115,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":439,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":377,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":502,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":321,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":302,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":279,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":605,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":505,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":673,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":721,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":184,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":535,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":15,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":348,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":681,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":181,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":561,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":473,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":570,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":704,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":369,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":541,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":383,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":163,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":567,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":458,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":583,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":689,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":401,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":686,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":117,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":391,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":532,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":492,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":219,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":705,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":674,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":362,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":396,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":306,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":575,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":289,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":172,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":668,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":360,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":367,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":646,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":143,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":702,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":628,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":88,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":48,"org.apache.commons.collections4.list.TreeListTest.testBug35258":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":394,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":444,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":182,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":373,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":417,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":566,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":609,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":284,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":510,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":416,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":134,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":208,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":454,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":370,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":606,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":486,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":601,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":661,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":521,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":407,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":666,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":404,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":389,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":560,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":737,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":581,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":690,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":173,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":615,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":55,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":364,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":189,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":345,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":412,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":526,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":636,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":102,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":716,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":366,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":611,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":647,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":197,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":712,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":474,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":572,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":683,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":248,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":236,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":282,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":603,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":742,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":449,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":553,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":457,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":427,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":528,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":433,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":87,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":518,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":728,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":546,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":334,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":459,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":700,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":305,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":446,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":630,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":304,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":571,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":7,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":740,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":249,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":687,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":569,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":491,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":623,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":634,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":130,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":432,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":468,"org.apache.commons.collections4.map.FixedSizeMapTest.testSerializeDeserializeThenCompare":563,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":385,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":557,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":47,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":692,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":168,"org.apache.commons.collections4.map.LRUMapTest.testLRU":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":600,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":455,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":393,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":616,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":653,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":61,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":104,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":678,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":110,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":708,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":368,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":405,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":682,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":341,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":568,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":738,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":542,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":180,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":487,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":713,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":495,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":218,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":697,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":290,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":152,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":205,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":614,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":81,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":619,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":408,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":735,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":342,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":420,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":723,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":299,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":99,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":436,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":651},"transformations":[{"failures":[],"tindex":"39df20a6-139f-11e5-a7a3-1b8aff9813f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"39df47b7-139f-11e5-a7a3-e3f8ff53a5f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"39df47b8-139f-11e5-a7a3-419672aef44c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"39df47b9-139f-11e5-a7a3-63edc95e97df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":0},{"failures":[],"tindex":"39df6eca-139f-11e5-a7a3-b3dde1af9f5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"39df6ecb-139f-11e5-a7a3-07cee0912eb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"status":-2},{"failures":[],"tindex":"39df6ecc-139f-11e5-a7a3-333ee437b9d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"39df6ecd-139f-11e5-a7a3-5b88c9674c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"39df6ece-139f-11e5-a7a3-7b389ee503fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":-2},{"failures":[92,93,94,95,96,97],"tindex":"39df95df-139f-11e5-a7a3-bbd89597bbb4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"delta","d":"end2","vDown":"vDown","delta":"offset","end2":"start2","this":"this","i":"delta","end1":"start1","k":"end2","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[98],"tindex":"39df95e0-139f-11e5-a7a3-61250d767324","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"39df95e1-139f-11e5-a7a3-55425d209e86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent","replacement":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126],"tindex":"39df95e2-139f-11e5-a7a3-ddbd1a1455c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[127,128],"tindex":"39dfbcf3-139f-11e5-a7a3-896b3baef0c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"39dfbcf4-139f-11e5-a7a3-bfa2266008f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"cmp","index":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"39dfbcf5-139f-11e5-a7a3-7f34643a198f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[129],"tindex":"39dfbcf6-139f-11e5-a7a3-9bc4a78108e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:387","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"39dfe407-139f-11e5-a7a3-cf804465ebfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"39dfe408-139f-11e5-a7a3-b18b0296079a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[130,131,132,133,134,135,136,137],"tindex":"39dfe409-139f-11e5-a7a3-9f2ab5eac5a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[138,139,140,141],"tindex":"39dfe40a-139f-11e5-a7a3-3ffe9187ecec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"key2","o":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"39dfe40b-139f-11e5-a7a3-c57fb383953b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"tindex":"39e00b1c-139f-11e5-a7a3-39f05d237f0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"39e00b1d-139f-11e5-a7a3-41cdc168616b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"39e00b1e-139f-11e5-a7a3-4f29a220b776","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"39e0322f-139f-11e5-a7a3-4f7a7bdbd91b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"39e03230-139f-11e5-a7a3-f742bd994848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[270,271,272,273,274,275,276,277,278,279,70,280,0,1,281,2,3,4,282,6,7,8,9,283,10,11,284,12,13,14,285,16,17,18,19,286,20,21,287,22,23,24,288,26,27,28,29,289,30,31,290,32,33,34,291,36,37,38,39,292,40,41,293,42,43,44,294,46,47,48,49,295,50,51,296,52,53,54,297,56,57,58,59,298,60,61,62,63,64,66,67,68,69],"tindex":"39e03231-139f-11e5-a7a3-dbfbaedc9344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"39e03232-139f-11e5-a7a3-29019e5ca173","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1730","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return null;\n} "},"variableMap":{"this":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"39e03233-139f-11e5-a7a3-ed180f5543b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value can be removed at present\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"status":-2},{"failures":[],"tindex":"39e03234-139f-11e5-a7a3-d3b4ae919a4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"39e03235-139f-11e5-a7a3-6519a3721e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"39e03236-139f-11e5-a7a3-d7d0f9dc3287","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[258,259,260,261,262,263,264,265,266,267,268,269],"tindex":"39e05947-139f-11e5-a7a3-27300fc14785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"39e05948-139f-11e5-a7a3-a133ce0e1ce5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[],"tindex":"39e05949-139f-11e5-a7a3-6510573c4934","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":0},{"failures":[299,300,301,302,303,304,305,306,307,308,309,310,311,312,313],"tindex":"39e0594a-139f-11e5-a7a3-bffd387d3adb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"39e0594b-139f-11e5-a7a3-477aef9e024d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[314,315],"tindex":"39e0594c-139f-11e5-a7a3-010936e415cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"39e0594d-139f-11e5-a7a3-e7c89e1f9168","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[316,317,315],"tindex":"39e0594e-139f-11e5-a7a3-853c0d29289f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"modCount","maxElements":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[],"tindex":"39e0805f-139f-11e5-a7a3-1300e0f72897","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"39e08060-139f-11e5-a7a3-2f978d003bef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-2},{"failures":[],"tindex":"39e08061-139f-11e5-a7a3-bba958bda11d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"39e08062-139f-11e5-a7a3-1fc6e27a25f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"39e08063-139f-11e5-a7a3-b31531004068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[308,310,313],"tindex":"39e08064-139f-11e5-a7a3-b3a9423a38c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"39e08065-139f-11e5-a7a3-b5c21b74818e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"39e0a776-139f-11e5-a7a3-91f044b489a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"variableMap":{"maximumCacheSize":"index","cacheSize":"index","this":"setOrder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333],"tindex":"39e0a777-139f-11e5-a7a3-db6f7deb8de7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:318","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"39e0a778-139f-11e5-a7a3-9dffd1cf03d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"39e0a779-139f-11e5-a7a3-2399e431201e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:67","type":"CtLocalVariableImpl","sourcecode":"final int int = int / (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-2},{"failures":[],"tindex":"39e0a77a-139f-11e5-a7a3-93f2f07d5868","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"convertedKey","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"39e0a77b-139f-11e5-a7a3-0daa67e1ebdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"39e0a77c-139f-11e5-a7a3-33eb62de4c66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"39e0ce8d-139f-11e5-a7a3-574b696ed68f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[],"tindex":"39e0ce8e-139f-11e5-a7a3-916f212f37f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[270,271,273,274,275,277,278,279,70,334,335,10,11,12,13,14,16,17,18,19,336,20,21,22,23,24,26,27,28,29,337,30,31,32,33,34,36,37,38,39,338,339,340,341,342,40,41,42,43,44,46,47,48,49,343,140,50,51,52,53,54,56,57,58,59,344,345,346,60,61,62,63,64,66,67,68,69,347,348,349,85,350,351,352,353,354,355,356,357,89,358,359,360,361,362,363],"tindex":"39e0ce8f-139f-11e5-a7a3-cf253647a83e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"39e0ce90-139f-11e5-a7a3-d1421cba502c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[364,365,366],"tindex":"39e0ce91-139f-11e5-a7a3-b3225f74d69a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"39e0ce92-139f-11e5-a7a3-c1c5098eb5ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-2},{"failures":[232,236,249,255,256],"tindex":"39e0ce93-139f-11e5-a7a3-ab5262145551","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"39e0ce94-139f-11e5-a7a3-8d9afde77cf4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[166,167,176,177,179,180,181,183,184,207,208,218,219,220,222,223,225,226,227,229,230,232,235,236,249,255,256],"tindex":"39e0f5a5-139f-11e5-a7a3-ef47f5973de6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507],"tindex":"39e0f5a6-139f-11e5-a7a3-a7f96013038e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[508,509,510,511,512,513,514,515,516,517],"tindex":"39e0f5a7-139f-11e5-a7a3-9163d88e7142","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"39e0f5a8-139f-11e5-a7a3-5959edcb3ec5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[518],"tindex":"39e0f5a9-139f-11e5-a7a3-4fd5b9100e91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtIfImpl","sourcecode":"if (java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n} "},"status":-1},{"failures":[519,520],"tindex":"39e0f5aa-139f-11e5-a7a3-d786e05c5538","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[521,522],"tindex":"39e11cbb-139f-11e5-a7a3-835b58b57081","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[523,524,525,526],"tindex":"39e11cbc-139f-11e5-a7a3-81a96eeaefdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-1},{"failures":[168,174,176,177,179,180,181,182,184],"tindex":"39e11cbd-139f-11e5-a7a3-639445cb3695","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[],"tindex":"39e11cbe-139f-11e5-a7a3-c9d75d463ad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[527,528],"tindex":"39e11cbf-139f-11e5-a7a3-2974f4ff9d5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[529,530,531,532,533,534,535],"tindex":"39e11cc0-139f-11e5-a7a3-69dc8f2018ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:217","type":"CtIfImpl","sourcecode":"if ((int != (-1)) && (int != int)) {\n    super.remove(int);\n} "},"status":-1},{"failures":[],"tindex":"39e11cc1-139f-11e5-a7a3-5b7517839fe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[],"tindex":"39e11cc2-139f-11e5-a7a3-77541ac2250e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[],"tindex":"39e11cc3-139f-11e5-a7a3-031508cbc1cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"key","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"39e11cc4-139f-11e5-a7a3-d7dbc09bab9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"cmp","newCapacity":"cmp","proposedCapacity":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"39e143d5-139f-11e5-a7a3-4fe2e1a7912a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[536],"tindex":"39e143d6-139f-11e5-a7a3-8b5802ebb543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:110","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:356","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\")"},"status":-1},{"failures":[],"tindex":"39e143d7-139f-11e5-a7a3-ef6dba387a02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[176,177,179,180,181,182,184,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,50,51,296,52,53,54,297,56,57,58,59,707,298,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741],"tindex":"39e143d8-139f-11e5-a7a3-cd1a247150c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"39e143d9-139f-11e5-a7a3-57cabac4affb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"39e143da-139f-11e5-a7a3-b1e3d49d307c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"39e16aeb-139f-11e5-a7a3-c580c1749692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int + 1)]) - 1"},"variableMap":{"vUp":"key3","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:366","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"39e16aec-139f-11e5-a7a3-0351b22b0886","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"39e16aed-139f-11e5-a7a3-efa8055c8287","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"x","to":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":0},{"failures":[174,168,176,177,179,180,181,182,184,742,217,209,210,211,213,214,222,223,224,225,226,227,228,230,232,235,236],"tindex":"39e16aee-139f-11e5-a7a3-dd157f81995c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"39e16aef-139f-11e5-a7a3-77051fefd628","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":0},{"failures":[743],"tindex":"39e16af0-139f-11e5-a7a3-673cf676213e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:165","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:90","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"status":-1},{"failures":[],"tindex":"39e16af1-139f-11e5-a7a3-f9e0fd4368aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"39e16af2-139f-11e5-a7a3-4f24a87cf7c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"39e16af3-139f-11e5-a7a3-79c3432233fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"39e16af4-139f-11e5-a7a3-0b1dc3dd754a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"39e16af5-139f-11e5-a7a3-05e10435fad5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1115","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"xFormerRightChild":"y","xFormerLeftChild":"xFormerParent","x":"xFormerParent","y":"xFormerParent","dataElement":"dataElement","yWasLeftChild":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"39e19106-139f-11e5-a7a3-c540d5f9ad9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"39e19107-139f-11e5-a7a3-d19fea1b8b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"left","current":"root","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}