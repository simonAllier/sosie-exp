{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":433,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":227,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":244,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":313,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":154,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":561,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":118,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":151,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":690,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":112,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":775,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":303,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":122,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":257,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":696,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":621,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":390,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":733,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":231,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":402,"org.apache.commons.collections4.ListUtilsTest.testLazyList":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":787,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":203,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":287,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":444,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":658,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":768,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":383,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":660,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":246,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":35,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":249,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":606,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":181,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":274,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":712,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":399,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":501,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":145,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":446,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":515,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":638,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":682,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":304,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":749,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":220,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":280,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":514,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":550,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":587,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":464,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":530,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":773,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":312,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":175,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":123,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":671,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":54,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":400,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":692,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":212,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":732,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":328,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":631,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":396,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":431,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":3,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":275,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":747,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":416,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":707,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":422,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":779,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":75,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":522,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":440,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":689,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":291,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":468,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":450,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":380,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":270,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":70,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":91,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":336,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":596,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":107,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":584,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":221,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":541,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":7,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":762,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":765,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":152,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":592,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":417,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":474,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":350,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":562,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":525,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":412,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":334,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":62,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":215,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":729,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":755,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":461,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":232,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":566,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":753,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":599,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":685,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":785,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":430,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":162,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":788,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":558,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":554,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":176,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":324,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":796,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":557,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":639,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":722,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":163,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":409,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":774,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":241,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":708,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":615,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":676,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":706,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":767,"org.apache.commons.collections4.map.LRUMapTest.testReset":253,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":45,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":482,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":604,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":397,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":703,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":792,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":659,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":229,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":235,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":763,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":138,"org.apache.commons.collections4.map.LinkedMapTest.testReset":233,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":675,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":219,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":302,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":483,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":752,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":493,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":95,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":586,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":421,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":276,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":632,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":355,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":572,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":510,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":285,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":705,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":346,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":738,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":320,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":601,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":305,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":315,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":411,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":426,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":480,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":649,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":89,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":311,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":413,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":594,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":756,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":516,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":341,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":132,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":330,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":742,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":791,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":360,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":386,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":333,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":507,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":549,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":552,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":63,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":771,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":737,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":711,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":186,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":251,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":250,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":404,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":234,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":19,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":589,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":225,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":38,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":681,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":790,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":551,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":87,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":408,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":656,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":318,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":256,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":665,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":388,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":553,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":700,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":726,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":724,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":770,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":651,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":709,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":612,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":457,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":683,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":391,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":568,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":354,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":720,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":719,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":718,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":36,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":199,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":793,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":478,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":616,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":319,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":343,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":236,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":135,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":187,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":329,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":339,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":106,"org.apache.commons.collections4.map.LRUMapTest.testLRU":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":454,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":794,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":535,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":644,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":652,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":496,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":316,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":374,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":129,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":613,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":691,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":786,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":499,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":407,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":441,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":673,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":78,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":310,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":764,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":630,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":789,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":254,"org.apache.commons.collections4.map.Flat3MapTest.testToString":795,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":71,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":487,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":268,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":289,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":684,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":209,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":435,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":362,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":364,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":321,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":94,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":739,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":28,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":264,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":702,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":382,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":761,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":406,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":781,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":201,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":494,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":279,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":373,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":537,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":349,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":451,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":657,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":223,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":438,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":559,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":603,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":284,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":669,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":445,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":607,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":693,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":381,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":488,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":617,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":769,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":583,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":306,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":520,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":677,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":301,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":172,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":146,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":624,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":578,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":272,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":314,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":357,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":721,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":439,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":527,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":169,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":757,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":668,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":177,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":149,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":338,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":369,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":751,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":37,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":641,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":609,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":661,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":521,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":533,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":666,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":728,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":491,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":161,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":645,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":783,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":379,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":766,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":365,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":100,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":247,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":39,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":471,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":42,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":655,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":714,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":395,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":577,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":332,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":736,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":64,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":575,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":642,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":157,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":217,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":492,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":590,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":543,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":218,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":455,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":213,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":101,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":688,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":517,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":591,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":650,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":502,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":528,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":389,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":536,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":495,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":317,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":298,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":626,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":629,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":542,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":113,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":442,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":772,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":174,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":567,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":782,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":361,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":335,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":511,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":740,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":485,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":278,"org.apache.commons.collections4.ListUtilsTest.testSubtract":401,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":228,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":43,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":680,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":672,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":458,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":248,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":352,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":710,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":475,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":548,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":288,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":195,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":490,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":465,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":640,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":784,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":605,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":750,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":555,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":540,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":581,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":96,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":67,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":179,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":699,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":588,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":387,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":539,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":730,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":136,"org.apache.commons.collections4.CollectionUtilsTest.filter":0,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":746,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":437,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":780,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":85,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":262,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":281,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":443,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":153,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":323,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":282,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":662,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":776,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":297,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":372,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":117,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":635,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":518,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":84,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":664,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":159,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":31,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":345,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":376,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":150,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":245,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":778,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":509,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":363,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":498,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":538,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":570,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":205,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":88,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":260,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":295,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":647,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":648,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":283,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":670,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":531,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":130,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":628,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":618,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":296,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":462,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":424,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":620,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":271,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":585,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":734,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":331,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":414,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":576,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":564,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":463,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":472,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":470,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":513,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":556,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":505,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":178,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":55,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":191,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":622,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":427,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":619,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":375,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":344,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":593,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":602,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":204,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":394,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":368,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":519,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":476,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":503,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":115,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":158,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":512,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":646,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":292,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":148,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":309,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":144,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":479,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":473,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":563,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":545,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":625,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":484,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":392,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":196,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":434,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":420,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":741,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":777,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":534,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":142,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":108,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":571,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":124,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":259,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":183,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":337,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":134,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":758,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":560,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":508,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":679,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":713,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":2,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":611,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":727,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":623,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":529,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":760,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":453,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":704,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":286,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":715,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":716,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":717,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":171,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":410,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":170,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":497,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":79,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":723,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":140,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":21,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":429,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":210,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":97,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":294,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":114,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":403,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":327,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":744,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":325,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":743,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":33,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":385,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":16,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":384,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":532,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":598,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":697,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":754,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":694,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":222,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":69,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":353,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":634,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":459,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":192,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":481,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":489,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":377,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":265},"transformations":[{"failures":[],"tindex":"e3e08d4b-139f-11e5-94fc-1d2795b78df0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e3e0b45c-139f-11e5-94fc-fbfe530ca955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-2},{"failures":[],"tindex":"e3e0b45d-139f-11e5-94fc-034932596083","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"node","node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"e3e0db6e-139f-11e5-94fc-07bc92ac320d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"e3e0db6f-139f-11e5-94fc-272471a233e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e3e0db70-139f-11e5-94fc-6d48fc4ae76d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[0,1],"tindex":"e3e0db71-139f-11e5-94fc-27db814d1f09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12],"tindex":"e3e0db72-139f-11e5-94fc-792c0e5fdb7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"e3e0db73-139f-11e5-94fc-a5859ecf8446","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":0},{"failures":[],"tindex":"e3e10284-139f-11e5-94fc-bb04dc07a1aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"header","size":"modCount","before":"header","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":0},{"failures":[],"tindex":"e3e10285-139f-11e5-94fc-859698c45811","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"e3e10286-139f-11e5-94fc-550eca4ec728","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:454","type":"CtLocalVariableImpl","sourcecode":"final V V = java.util.Map<K, V>.remove(K)"},"status":-2},{"failures":[],"tindex":"e3e10287-139f-11e5-94fc-238f4475c3d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"e3e12998-139f-11e5-94fc-3b3971824fcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashIndex","newCapacity":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,3,27,4,28,29],"tindex":"e3e12999-139f-11e5-94fc-81fb8e8b0b13","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e3e1299a-139f-11e5-94fc-cf01f890215a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"entry","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:228","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e3e1299b-139f-11e5-94fc-edaa645ce7da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"bitIndex","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"e3e1299c-139f-11e5-94fc-cdd66b0ea47a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"variableMap":{"args":"array","paramTypes":"array","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-2},{"failures":[],"tindex":"e3e150ad-139f-11e5-94fc-777df899b14d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:399","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator()"},"status":0},{"failures":[30,31,32,33,34,35,36,37,38,39,40],"tindex":"e3e150ae-139f-11e5-94fc-c12381f488d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e3e150af-139f-11e5-94fc-c7a5defca24f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[41],"tindex":"e3e150b0-139f-11e5-94fc-f505ed17e2c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl","sourcecode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}"},"status":-1},{"failures":[],"tindex":"e3e150b1-139f-11e5-94fc-85c33c7bfff4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"e3e150b2-139f-11e5-94fc-e5b3b2ccd874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"e3e150b3-139f-11e5-94fc-e7b686a2c34b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"e3e176c4-139f-11e5-94fc-f18e0f0c0896","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[],"tindex":"e3e176c5-139f-11e5-94fc-87beee0e7eb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1164","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n    return false;\n} "},"status":0},{"failures":[81,82,83,84],"tindex":"e3e176c6-139f-11e5-94fc-d3b1f10873b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:997","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.int)"},"status":-1},{"failures":[],"tindex":"e3e176c7-139f-11e5-94fc-2b4de0acbf44","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[85,86],"tindex":"e3e176c8-139f-11e5-94fc-c5d299f353d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[87],"tindex":"e3e176c9-139f-11e5-94fc-1768d57699d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:797","type":"CtIfImpl","sourcecode":"if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[88,89,90,91,92],"tindex":"e3e19dda-139f-11e5-94fc-91c9aa63c686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-1},{"failures":[93,94,95,96,97],"tindex":"e3e19ddb-139f-11e5-94fc-c7b84d91f09a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"e3e19ddc-139f-11e5-94fc-61181779f99c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"e3e19ddd-139f-11e5-94fc-753ceb65ce99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106],"tindex":"e3e19dde-139f-11e5-94fc-89d6f9b28e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"e3e19ddf-139f-11e5-94fc-edbfd5250591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:83","type":"CtInvocationImpl","sourcecode":"java.util.SortedSet<E>.clear()"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[138],"tindex":"e3e19de0-139f-11e5-94fc-2310cd6c369c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[139,140,141,142,143,144,145,146,147,148,149],"tindex":"e3e19de1-139f-11e5-94fc-35002903a584","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"e3e19de2-139f-11e5-94fc-33497bb2886b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[150,151],"tindex":"e3e1c4f3-139f-11e5-94fc-d57baf077e66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[152,153,154],"tindex":"e3e1c4f4-139f-11e5-94fc-350cbdc39216","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[155],"tindex":"e3e1c4f5-139f-11e5-94fc-cf5b7fcb30fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"e3e1c4f6-139f-11e5-94fc-61f999fef767","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:201","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"variableMap":{"entry":"before","header":"before","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"e3e1c4f7-139f-11e5-94fc-0b118ae52345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209],"tindex":"e3e1c4f8-139f-11e5-94fc-13e7f4f6108a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"e3e1c4f9-139f-11e5-94fc-3b711c722fca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-2},{"failures":[210,211],"tindex":"e3e1c4fa-139f-11e5-94fc-c9f2c0e8edd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[13,14,15,16,17,212,18,20,21,23,24,25,213,26,3,27,4],"tindex":"e3e1ec0b-139f-11e5-94fc-8bc52ae4eee7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[93,94,95,96],"tindex":"e3e1ec0c-139f-11e5-94fc-6b8f7d584ff5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"e3e1ec0d-139f-11e5-94fc-313e5af94d35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"e3e1ec0e-139f-11e5-94fc-8bc4c56846a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[152,153,154,384,385],"tindex":"e3e1ec0f-139f-11e5-94fc-27ba958055a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"e3e1ec10-139f-11e5-94fc-a7da97e9f7a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":0},{"failures":[],"tindex":"e3e1ec11-139f-11e5-94fc-a5842bae0732","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[],"tindex":"e3e21322-139f-11e5-94fc-23a4a7c757f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[],"tindex":"e3e21323-139f-11e5-94fc-ebac3c35b2e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[],"tindex":"e3e21324-139f-11e5-94fc-2fe2a1b9d832","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"e3e21325-139f-11e5-94fc-77a4f5e2058d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"e3e21326-139f-11e5-94fc-0172f3879c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:252","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"e3e21327-139f-11e5-94fc-0f255c6265de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-2},{"failures":[150,151,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400],"tindex":"e3e21328-139f-11e5-94fc-bf8102e79c4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e3e21329-139f-11e5-94fc-3b899c181953","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"deletedNode","currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[401,402,403,404,405,43,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,42,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,45,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,44,455,456,457,458,459,460,461,462,463,464,465,46,47,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,49,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,48,516,517,518,519,520,521,522,523,524,525,526,50,51,527,528,529,530,531,53,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,52,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,55,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,54,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,57,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,56,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,59,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,58,666,667,668,669,670,671,672,673,674,675,676,60,61,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,88,89,90,698,699,91,92],"tindex":"e3e23a3a-139f-11e5-94fc-93de0d955102","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[95,217,218,220,221,222,223,226,232,700,701],"tindex":"e3e23a3b-139f-11e5-94fc-63a5d2b4f199","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"e3e23a3c-139f-11e5-94fc-e35fa423d44c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:238","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[],"tindex":"e3e23a3d-139f-11e5-94fc-571c97cfd712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[150,151,702,703,386,387,704,705,706,707,388,389,708,390,391,392,393,394,709,395,710,711,396,397,712,713,714,715,716,717,718,719,720,398,721,722,399,723,724,725,726,727,728,729,730,400],"tindex":"e3e23a3e-139f-11e5-94fc-a5eba155723a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","beforeFirst":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"e3e23a3f-139f-11e5-94fc-4bab73503717","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"iterable","b":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-2},{"failures":[],"tindex":"e3e23a40-139f-11e5-94fc-d5a1e700ae70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"e3e23a41-139f-11e5-94fc-1bece734f9c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[731,732],"tindex":"e3e26152-139f-11e5-94fc-81988adcaeb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[733,734,735,736,737,738,739,740,741,742,743,744],"tindex":"e3e26153-139f-11e5-94fc-15b11b905ef0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e3e26154-139f-11e5-94fc-7f99b9fd8430","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"variableMap":{"composite":"key4","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:668","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"e3e26155-139f-11e5-94fc-1d9369625a5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"oldCapacity","start":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"e3e26156-139f-11e5-94fc-e78fc325da76","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[152,745,153,154,384,385],"tindex":"e3e26157-139f-11e5-94fc-bf5c59cc81bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"end1","d":"start2","vDown":"vDown","delta":"i","end2":"i","this":"this","i":"k","end1":"i","k":"k","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"e3e26158-139f-11e5-94fc-55c3e765672e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1573","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"variableMap":{"valueTransformer":"factory","keyTransformer":"factory","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"e3e26159-139f-11e5-94fc-d90b22386ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[746],"tindex":"e3e2615a-139f-11e5-94fc-ebfb570cec30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:159","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].equals(java.util.Map<K, V>)) {\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[int - 1];\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int);\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1));\n    this.java.util.Map<K, V>[] = java.util.Map<K, V>[];\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"e3e2615b-139f-11e5-94fc-a379084f37e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e3e2615c-139f-11e5-94fc-0dcdb59b5f38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:142","type":"CtReturnImpl","sourcecode":"return this.java.util.Comparator<? super E>.compare(E, E)"},"status":-2},{"failures":[142,143,144,145,146,147,148,149],"tindex":"e3e2886d-139f-11e5-94fc-37ebd2adcadb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"e3e2886e-139f-11e5-94fc-fd26dda60192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"status":-2},{"failures":[747],"tindex":"e3e2886f-139f-11e5-94fc-3f0eae44e225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"size","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:96","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[748,749,750,751,752,753,754,755,756,757,758,759,760,34,761,37,762,763,38,764,39,40],"tindex":"e3e28870-139f-11e5-94fc-4900d674c61c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"e3e28871-139f-11e5-94fc-51d95041530e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e3e28872-139f-11e5-94fc-994b0b7324c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends I>.hasNext()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"e3e28873-139f-11e5-94fc-412c946cb944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,355,785,377,786],"tindex":"e3e28874-139f-11e5-94fc-07f0fbc918f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"e3e28875-139f-11e5-94fc-614f63da3624","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[787,788,789,790,6,8,10,11,12],"tindex":"e3e28876-139f-11e5-94fc-6b432d59b3e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"e3e28877-139f-11e5-94fc-13e367110a64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":-2},{"failures":[],"tindex":"e3e28878-139f-11e5-94fc-2d40069bffec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"otherValue","this":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[791,792],"tindex":"e3e2af89-139f-11e5-94fc-550c0266548a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[793,794],"tindex":"e3e2af8a-139f-11e5-94fc-671bc12d8018","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:726","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<T>.hasNext()) {\n    C.execute(T);\n} else {\n    return T;\n}"},"status":-1},{"failures":[795],"tindex":"e3e2af8b-139f-11e5-94fc-f76a1a120840","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"e3e2af8c-139f-11e5-94fc-2f3f307f3ebd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[796],"tindex":"e3e2af8d-139f-11e5-94fc-33782af384d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}