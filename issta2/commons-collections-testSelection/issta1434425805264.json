{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":246,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":103,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":367,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":519,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":257,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":206,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":518,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":513,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":387,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":465,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":66,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":477,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":75,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":237,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":265,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":424,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":459,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":251,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":255,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":381,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":244,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":294,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":377,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":196,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":187,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":259,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":390,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":207,"org.apache.commons.collections4.ListUtilsTest.testEquals":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":396,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":474,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":317,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":494,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":135,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":318,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":220,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":534,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":312,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":419,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":182,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":531,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":217,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":248,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":322,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":149,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":60,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":38,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":402,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":89,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":284,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":278,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":538,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":107,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":93,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":165,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":298,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":445,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":287,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":394,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":274,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":269,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":540,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":280,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":133,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":226,"org.apache.commons.collections4.FactoryUtilsTest.testSingletonPatternInSerialization":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":18,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":0,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":356,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":428,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":314,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":379,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":422,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":460,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":343,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":342,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":492,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":341,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":517,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":340,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":472,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":427,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":451,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":358,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":542,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":524,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":176,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":334,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":11,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":203,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":153,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":180,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":195,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":409,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":406,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":86,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":442,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":69,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":543,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":141,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":383,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":516,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":533,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":438,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":197,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":350,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":539,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":407,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":470,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":137,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":490,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":429,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":77,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":279,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":354,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":250,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":315,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":489,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":80,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":130,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":359,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":532,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":480,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":528,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":413,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":536,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":277,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":267,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":184,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":204,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":462,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":247,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":303,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":443,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":478,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":320,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":404,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":372,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":527,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":292,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":109,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":366,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":296,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":365,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":400,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":449,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":344,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":258,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":430,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":285,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":523,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":221,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":202,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":541,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":85,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":281,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":436,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":126,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":385,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":230,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":119,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":216,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":288,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":171,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":336,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":455,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":249,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":435,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":507,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":111,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":238,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":268,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":62,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":335,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":270,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":132,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":511,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":56,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":260,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":30,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":9,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":319,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":27,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":503,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":302,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":502,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":452,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":323,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":499,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":498,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":501,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":495,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":283,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":512,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":497,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":496,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":537,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":290,"org.apache.commons.collections4.CollectionUtilsTest.isFull":491,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":128,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":120,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":520,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":475,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":227,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":198,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":214,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":393,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":316,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":509,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":469,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":448,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":525,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":157,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":420,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":461,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":262,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":468,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":466,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":94,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":44,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":201,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":375,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":105,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":272,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":243,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":242,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":91,"org.apache.commons.collections4.CollectionUtilsTest.find":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":426,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":434,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":401,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":412,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":310,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":378,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":391,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":526,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":423,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":245,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":483,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":450,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":2,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":3,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":360,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":65,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":464,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":209,"org.apache.commons.collections4.map.LRUMapTest.testLRU":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":432,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":25,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":229,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":169,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":222,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":515,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":295,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":454,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":510,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":293,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":388,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":308,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":264,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":346,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":114,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":380,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":514,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":152,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":32,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":194,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":305,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":371,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":405,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":370,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":522,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":415},"transformations":[{"failures":[],"tindex":"eb5359aa-13d8-11e5-afaf-fbd435bf8324","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"to","rightChild":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"eb5380bb-13d8-11e5-afaf-d54ede7dbec7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"bitIndex","modifications":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[0],"tindex":"eb53a7cc-13d8-11e5-afaf-c72a8a667e1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().offer(E)"},"status":-1},{"failures":[1],"tindex":"eb53a7cd-13d8-11e5-afaf-dbacbfd0dfb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory"},"status":-1},{"failures":[2,3,4,5],"tindex":"eb53a7ce-13d8-11e5-afaf-7bd19cebb761","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"eb53a7cf-13d8-11e5-afaf-dd2c92add98e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:189","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"result":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"eb555580-13d8-11e5-afaf-a70aa2cb0c51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"predecessor","current":"predecessor","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"eb575151-13d8-11e5-afaf-21af3777396a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[16],"tindex":"eb575152-13d8-11e5-afaf-df32578d59ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"eb575153-13d8-11e5-afaf-755cd975c038","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[17,18,19,20,21,22,23,24],"tindex":"eb577864-13d8-11e5-afaf-5d0a3005ec63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"eb577865-13d8-11e5-afaf-67dcf20afd21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"eb577866-13d8-11e5-afaf-57b03da9931e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"eb577867-13d8-11e5-afaf-1fe267f7f427","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-2},{"failures":[80],"tindex":"eb577868-13d8-11e5-afaf-01900ea83ca3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[81],"tindex":"eb579f79-13d8-11e5-afaf-2b4a22f46bb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"eb579f7a-13d8-11e5-afaf-5f8d7c5c183b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"eb5862cb-13d8-11e5-afaf-f5e8dafb9b33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[82,83,84,85,86,87,88,89],"tindex":"eb5889dc-13d8-11e5-afaf-378dfa129072","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"status":-1},{"failures":[],"tindex":"eb5889dd-13d8-11e5-afaf-43c46af40dbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"length","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[90,91,92,93,94],"tindex":"eb5889de-13d8-11e5-afaf-f94499cfdf3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"eb5889df-13d8-11e5-afaf-0788ef52ac9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"eb5889e0-13d8-11e5-afaf-8bb0bd4bd88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"eb58b0f1-13d8-11e5-afaf-3106e485561f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[143,144,145,146,147,148,149,150,151,152,153,154,155],"tindex":"eb58b0f2-13d8-11e5-afaf-c7bc8ea89568","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-1},{"failures":[],"tindex":"eb58b0f3-13d8-11e5-afaf-570ef8286126","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":0},{"failures":[156,157,158,159,160,161,162,163,164],"tindex":"eb58b0f4-13d8-11e5-afaf-73cbb6d7150e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"eb58b0f5-13d8-11e5-afaf-193739b1bc4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"eb58b0f6-13d8-11e5-afaf-4fa037bf2d27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[165],"tindex":"eb58d807-13d8-11e5-afaf-5f75a0ed2954","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"variableMap":{"i":"i","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"eb58d808-13d8-11e5-afaf-279ced3c6399","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[26,166],"tindex":"eb62ea29-13d8-11e5-afaf-031b5b5d1dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"eb62ea2a-13d8-11e5-afaf-713ab57f0766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"eb62ea2b-13d8-11e5-afaf-898d284fa3dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"eb6449bc-13d8-11e5-afaf-110f102f83ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[167],"tindex":"eb6449bd-13d8-11e5-afaf-0d505fddc636","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:212","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":-1},{"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"tindex":"eb6449be-13d8-11e5-afaf-6d03c18255ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284],"tindex":"eb6470cf-13d8-11e5-afaf-21bcfe82314b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"status":-1},{"failures":[285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"eb6470d0-13d8-11e5-afaf-cdda2b253e30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"eb6470d1-13d8-11e5-afaf-5b53336e2652","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:150","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode())"},"status":-2},{"failures":[],"tindex":"eb65f772-13d8-11e5-afaf-f5d63ab5fd05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"eb65f773-13d8-11e5-afaf-d111210985b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"eb65f774-13d8-11e5-afaf-89839df192c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2009","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator().hasNext())"},"variableMap":{"this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:238","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n    if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[2,3,4,313,314,315,316,317,318,319,320,321,322],"tindex":"eb661e85-13d8-11e5-afaf-8b22b05b3494","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[168,169,170,171,172,323,324,173,174,175,176,325,177,178,180,181,182,183,184,185,186,187,326,327,328,329,81,330,331,332,333,334,335,336,189,190,192,193,194,195,337,196,197,198,199,338,339,340,341,342,343,344,345,346,347,348,349,213,214,216,217,218,219,350,220,221,222,223,351,225,226,228,229,230,231,352,232,233,234,235,353,237,238,240,241,242,243,354,244,245,246,247,355,356,357,358,359,360,361,249,250,252,253,254,255,256,257,258,259,362,363,364,365,366,367,368,285,287,290,291,292,294,295,369,296,370,297,298,299,300,301,302,304,305,306,307,308,309,371,310,372,311,312],"tindex":"eb661e86-13d8-11e5-afaf-2fa95a640b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[173,184,196,208,220,232,244,256],"tindex":"eb661e87-13d8-11e5-afaf-ebfe4f276ef9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[373,117,140],"tindex":"eb661e88-13d8-11e5-afaf-8f8cf7ed633d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"eb661e89-13d8-11e5-afaf-371b04d9e5d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"parent","parent":"parent","left":"parent","h":"left","right":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"eb661e8a-13d8-11e5-afaf-057042a41c89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":0},{"failures":[374],"tindex":"eb661e8b-13d8-11e5-afaf-9f1977bf1dbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:258","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Iterator<?>.next()"},"status":-1},{"failures":[],"tindex":"eb661e8c-13d8-11e5-afaf-0b6d02a56eb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:797","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[],"tindex":"eb66459d-13d8-11e5-afaf-59d700068f2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"eb66459e-13d8-11e5-afaf-f34ec3f66372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"eb66459f-13d8-11e5-afaf-0d9cab6d4b11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[],"tindex":"eb6645a0-13d8-11e5-afaf-798d3af54a03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":0},{"failures":[],"tindex":"eb6645a1-13d8-11e5-afaf-89dc583be0af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[375,376,323,186,177,178,180,181,182,184,185,187,195,219,377,378,379,380,231,356,255],"tindex":"eb6645a2-13d8-11e5-afaf-254094f3eaee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[381,382],"tindex":"eb6645a3-13d8-11e5-afaf-67856fcbd8f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[383,384,385],"tindex":"eb6645a4-13d8-11e5-afaf-f31db6305f26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"eb6645a5-13d8-11e5-afaf-5db39e8f1702","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"reuse":"header","removeLRUEntry":"removeLRUEntry","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[145,386,387,388,389,390,391,392,393,394,395],"tindex":"eb6645a6-13d8-11e5-afaf-e936079b7ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"eb666cb7-13d8-11e5-afaf-b15b5c13f313","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-2},{"failures":[],"tindex":"eb666cb8-13d8-11e5-afaf-1122af64ff32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"eb666cb9-13d8-11e5-afaf-b58c2fd9dde1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"eb666cba-13d8-11e5-afaf-fddb0471e849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"eb666cbb-13d8-11e5-afaf-510880af62ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[396,397,398,399,400,401,402,403,404,405,373,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,95,429,430,431,432,433,434,435,96,97,98,436,437,438,439,440,441,442,443,444,445,446,447,448,107,100,101,102,103,104,105,106,449,99,108,109,110,450,111,112,113,114,115,116,117,118,119,451,452,453,454,455,456,457,120,458,459,460,461,462,463,130,123,124,125,126,127,128,129,464,121,122,131,132,133,134,135,136,137,138,139,140,141,142,465],"tindex":"eb666cbc-13d8-11e5-afaf-e70788130138","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"eb666cbd-13d8-11e5-afaf-1baa75493414","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":0},{"failures":[466,467,468,469,470,471,472,473,474,475,156],"tindex":"eb666cbe-13d8-11e5-afaf-65924950ccf2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"eb666cbf-13d8-11e5-afaf-d90e88798e13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[476],"tindex":"eb6693d0-13d8-11e5-afaf-4f321d453b99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:159","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"eb6693d1-13d8-11e5-afaf-7b49fcbdc847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"this","delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":0},{"failures":[],"tindex":"eb6693d2-13d8-11e5-afaf-a7b61d23132e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:49","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<I, O>)(org.apache.commons.collections4.functors.ExceptionTransformer.org.apache.commons.collections4.Transformer))"},"variableMap":{"org.apache.commons.collections4.functors.ExceptionTransformer.INSTANCE":"org.apache.commons.collections4.functors.NOPTransformer.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPTransformer:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Transformer<T, T>)(org.apache.commons.collections4.functors.NOPTransformer.org.apache.commons.collections4.Transformer))"},"status":-2},{"failures":[347,348],"tindex":"eb6693d3-13d8-11e5-afaf-85e07e51b83d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:278","type":"CtInvocationImpl","sourcecode":"super.addMapping(int, int, K, V)"},"status":-1},{"failures":[146,147,148,149,150,151,152,153,154,477,478,392,479,480,393,481,395],"tindex":"eb6693d4-13d8-11e5-afaf-cb592e2351d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"eb6693d5-13d8-11e5-afaf-07444b69014c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[146,147,148,149,150,151,152,153,154,477,478,392,479,480,393,481,395],"tindex":"eb6693d6-13d8-11e5-afaf-4bce70e0534a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:116","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if ((java.util.Collection<E>.isEmpty()) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"eb6693d7-13d8-11e5-afaf-47405ec5a659","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[72,74,482,483,76,79,484,485,486,487],"tindex":"eb6693d8-13d8-11e5-afaf-859451c86220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[488,489,490],"tindex":"eb677e39-13d8-11e5-afaf-913f3eae3bee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"lastReturned","listSize":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1},{"failures":[],"tindex":"eb677e3a-13d8-11e5-afaf-41bcd513ff5e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"status":0},{"failures":[],"tindex":"eb677e3b-13d8-11e5-afaf-b36e14a79a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[72,74,483,79,485,486,487],"tindex":"eb677e3c-13d8-11e5-afaf-dfa90b7781c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"yFormerLeftChild","replacement":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"eb681a7d-13d8-11e5-afaf-c38ddf5c8e46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"right","parent":"parent","left":"parent","h":"p","right":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528],"tindex":"eb681a7e-13d8-11e5-afaf-219b809ac2df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:236","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"eb681a7f-13d8-11e5-afaf-ddc8bd32af45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[2,3,4,313,314,316,317,318,319,321,322],"tindex":"eb684190-13d8-11e5-afaf-955c80fbe7d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[529,530,531,143,153],"tindex":"eb684191-13d8-11e5-afaf-03280ab908ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"eb684192-13d8-11e5-afaf-f71d940f5569","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"eb684193-13d8-11e5-afaf-ed266093ec49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:585","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"eb684194-13d8-11e5-afaf-135cc3ffe052","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    java.lang.Boolean = java.lang.Boolean;\n} "},"variableMap":{"answer":"childValue","defaultValue":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[],"tindex":"eb684195-13d8-11e5-afaf-fffbada97e2f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"key1","o2":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":0},{"failures":[532],"tindex":"eb684196-13d8-11e5-afaf-5b7dd5b414e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            int++;\n        } \n    }\n} "},"status":-1},{"failures":[533,534,535,536,537,537,538,538,539],"tindex":"eb684197-13d8-11e5-afaf-efdfa98eaaba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[540,541,542],"tindex":"eb684198-13d8-11e5-afaf-29d253289d51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[543,544],"tindex":"eb684199-13d8-11e5-afaf-a305488a5742","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-1},{"failures":[],"tindex":"eb68419a-13d8-11e5-afaf-2f6c39c77f42","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[545],"tindex":"eb68419b-13d8-11e5-afaf-09a915ec2f23","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"eb6868ac-13d8-11e5-afaf-958d2a3f85e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"root","h":"root","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"eb6868ad-13d8-11e5-afaf-a9f66e8814ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}