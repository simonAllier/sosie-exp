{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":294,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":852,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":148,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":704,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":373,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":629,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":202,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":750,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":972,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":969,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":139,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":335,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":100,"org.apache.commons.collections4.CollectionUtilsTest.collect":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":684,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":718,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":478,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":140,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":532,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":653,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":685,"org.apache.commons.collections4.CollectionUtilsTest.get":301,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":515,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":763,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":410,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":826,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":60,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":426,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":440,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":250,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":315,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":227,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":446,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":882,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":183,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":797,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":868,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":520,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":799,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":259,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":633,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":988,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":955,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":506,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":491,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":69,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":654,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":173,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":911,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":870,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":905,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":688,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":772,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":267,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":414,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":664,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":944,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":880,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":339,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":551,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":936,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":63,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":275,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":777,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":94,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":493,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":753,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":67,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":850,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":660,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":970,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":843,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":284,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":591,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":490,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":578,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":467,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":474,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":167,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":155,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":925,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":873,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":864,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":596,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":597,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":595,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":452,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":521,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":573,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":793,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":884,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":874,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":239,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":563,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":823,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":443,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":609,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":486,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":505,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":328,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":934,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":941,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":423,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":342,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":434,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":257,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":808,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":329,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":959,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":242,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":199,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":463,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":534,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":949,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":630,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":830,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":427,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":751,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":927,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":839,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":33,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":783,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":300,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":614,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":502,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":187,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":120,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":611,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":792,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":408,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":179,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":878,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":605,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":813,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":929,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":937,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":241,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":144,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":539,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":229,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":314,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":747,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":743,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":488,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":559,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":293,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":773,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":172,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":836,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":232,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":251,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":590,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":769,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":623,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":709,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":180,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":59,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":332,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":558,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":807,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":557,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":556,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":601,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":728,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":872,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":56,"org.apache.commons.collections4.map.LRUMapTest.testReset":524,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":863,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":674,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":953,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":68,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":620,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":670,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":51,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":822,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":438,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":501,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":616,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":655,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":514,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":706,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":527,"org.apache.commons.collections4.map.LinkedMapTest.testReset":610,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":806,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":346,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":331,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":542,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":652,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":588,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":723,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":477,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":892,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":898,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":291,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":943,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":829,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":974,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":661,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":755,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":561,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":361,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":817,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":851,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":920,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":963,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":665,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":689,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":818,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":909,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":644,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":330,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":952,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":456,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":914,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":669,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":340,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":838,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":845,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":589,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":782,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":152,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":323,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":372,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":840,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":679,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":725,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":680,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":951,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":857,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":424,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":907,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":451,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":149,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":694,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":347,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":52,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":126,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":348,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":638,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":771,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":637,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":639,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":368,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":600,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":255,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":917,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":615,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":398,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":740,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":618,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":741,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":111,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":649,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":707,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":824,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":93,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":714,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":403,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":946,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":401,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":422,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":266,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":211,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":435,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":677,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":461,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":678,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":404,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":835,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":234,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":795,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":383,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":964,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":137,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":784,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":134,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":785,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":441,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":238,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":742,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":417,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":724,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":246,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":513,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":175,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":628,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":572,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":248,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":247,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":790,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":168,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":673,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":928,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":961,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":349,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":504,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":268,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":875,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":236,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":705,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":529,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":197,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":11,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":812,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":75,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":859,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":309,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":189,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":668,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":317,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":351,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":757,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":394,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":2,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":617,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":494,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":518,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":124,"org.apache.commons.collections4.map.LRUMapTest.testLRU":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":858,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":282,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":732,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":778,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":791,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":380,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":607,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":697,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":113,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":274,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":962,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":22,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":552,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":902,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":834,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":855,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":865,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":805,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":691,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":159,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":371,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":906,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":550,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":715,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":575,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":883,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":244,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":89,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":926,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":549,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":466,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":269,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":854,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":442,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":362,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":290,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":560,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":104,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":473,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":341,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":984,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":50,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":603,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":987,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":833,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":262,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":433,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":576,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":686,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":899,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":621,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":583,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":627,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":133,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":734,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":8,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":861,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":796,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":418,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":856,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":748,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":672,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":802,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":662,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":869,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":956,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":885,"org.apache.commons.collections4.CollectionUtilsTest.transform2":308,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":279,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":759,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":122,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":675,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":939,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":366,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":809,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":476,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":758,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":45,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":766,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":585,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":565,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":376,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":703,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":13,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":566,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":171,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":497,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":862,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":304,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":930,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":801,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":599,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":571,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":49,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":164,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":517,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":624,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":350,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":877,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":775,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":982,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":958,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":800,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":369,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":924,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":357,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":730,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":786,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":178,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":976,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":470,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":896,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":626,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":779,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":208,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":472,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":471,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":27,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":16,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":400,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":530,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":635,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":303,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":828,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":975,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":794,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":298,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":66,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":821,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":302,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":128,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":776,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":819,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":161,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":938,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":411,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":897,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":947,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":726,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":110,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":286,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":412,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":710,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":205,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":860,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":450,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":105,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":261,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":272,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":593,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":592,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":910,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":948,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":594,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":788,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":912,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":432,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":431,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":631,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":733,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":977,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":430,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":900,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":381,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":462,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":123,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":752,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":768,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":739,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":447,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":696,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":722,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":321,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":612,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":866,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":568,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":814,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":646,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":503,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":636,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":921,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":663,"org.apache.commons.collections4.ListUtilsTest.testSubtract":720,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":437,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":832,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":804,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":392,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":876,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":647,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":118,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":327,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":169,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":887,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":103,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":448,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":185,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":313,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":895,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":933,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":881,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":774,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":954,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":744,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":737,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":932,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":844,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":292,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":973,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":163,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":213,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":567,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":343,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":297,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":212,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":181,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":116,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":712,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":719,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":945,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":871,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":338,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":258,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":983,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":358,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":667,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":324,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":867,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":201,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":355,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":787,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":345,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":656,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":306,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":264,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":307,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":320,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":207,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":190,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":922,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":365,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":117,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":711,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":151,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":642,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":25,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":634,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":641,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":986,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":436,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":971,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":85,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":632,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":658,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":602,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":459,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":687,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":519,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":919,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":735,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":903,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":195,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":683,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":322,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":536,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":985,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":510,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":511,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":512,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":480,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":965,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":166,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":781,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":17,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":693,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":299,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":606,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":546,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":727,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":569,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":756,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":760,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":458,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":957,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":879,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":265,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":407,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":762,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":979,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":271,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":564,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":942,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":495,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":820,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":841,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":231,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":713,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":156,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":577,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":143,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":886,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":316,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":904,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":745,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":26,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":716,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":915,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":940,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":237,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":182,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":764,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":761,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":846,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":46,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":363,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":228,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":950,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":496,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":789,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":280,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":198,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":19,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":393,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":548,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":923,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":888,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":121,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":295,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":913,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":127,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":217,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":579,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":754,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":908,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":981,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":780,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":453,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":48,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":370,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":43,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":890,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsSelfHashCode":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":34,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":460,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":252,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":701,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":245,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":186,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":853,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":968,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":695,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":827,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":604,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":731,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":40,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":816,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":535,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":485,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":516,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":484,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":586,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":749,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":918,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":233,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":810,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":150,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":108,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":581,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":580,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":960,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":765,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":657,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":931,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":439,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":547,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":980,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":54,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":508,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":916,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":353,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":507,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":445,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":893,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":74,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":837,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":500,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":901,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":815,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":296,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":38,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":39,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":385,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":145,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":848,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":226,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":288,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":889,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":344,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":825,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":492,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":978,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":489,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":499,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":966,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":9,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":699,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":135,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":91,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":160,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":555,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":729,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":935,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":219,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":554,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":967,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":278,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":276,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":700,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":387,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":622,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":415,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":360,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":770,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":659,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":692,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":891,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":894,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":543},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"b22fbb4a-13bc-11e5-a107-a73eb268691d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36],"tindex":"b22fe25b-13bc-11e5-a107-031f68a4942c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"b22fe25c-13bc-11e5-a107-1fe1c9709a0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"b22fe25d-13bc-11e5-a107-5f177b8a0f76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}"},"status":-2},{"failures":[],"tindex":"b22fe25e-13bc-11e5-a107-b798e3f95c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"b22fe25f-13bc-11e5-a107-bdd164950aed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b2300970-13bc-11e5-a107-29160d3ac50c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"b2300971-13bc-11e5-a107-3974451950e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"b2300972-13bc-11e5-a107-1fa87fe4664c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[87],"tindex":"b2300973-13bc-11e5-a107-1b78ae7d69af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"b2300974-13bc-11e5-a107-65966a720ef1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,28,29,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,34,35,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"b2303085-13bc-11e5-a107-37441fbbceba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"b2303086-13bc-11e5-a107-554aee7eedc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":-2},{"failures":[50,53,52,51,54,55,56,167,57,58,59,60,61,62,63,64,65,168,66,169,170,67,68,69,70,71,72,73,74,75,76,77,78,171,172,173,174,175,176,177,79,178,179,80,85,86],"tindex":"b2303087-13bc-11e5-a107-7944182c8fbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"endIndex2","index":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198],"tindex":"b2303088-13bc-11e5-a107-496027372390","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"uniqueIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-1},{"failures":[199,200,201,202,203,204],"tindex":"b2305799-13bc-11e5-a107-fb7e14283000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"variableMap":{"d":"i","vDown":"vUp","i":"k","k":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[205,206,207,208],"tindex":"b230579a-13bc-11e5-a107-657dd2ce05cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"b230579b-13bc-11e5-a107-3f43c14eb4d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b230579c-13bc-11e5-a107-39ee7dce25fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"b2307ead-13bc-11e5-a107-754b91267257","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"cmp","modifications":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"b2307eae-13bc-11e5-a107-f34ca0d12bd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":0},{"failures":[],"tindex":"b2307eaf-13bc-11e5-a107-473003f563a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} "},"status":0},{"failures":[],"tindex":"b2307eb0-13bc-11e5-a107-4da1df4477a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"b2307eb1-13bc-11e5-a107-5967da68d85a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:345","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>"},"status":-2},{"failures":[209,210,211,212,213,214,215,216,217,218],"tindex":"b230a5c2-13bc-11e5-a107-05fd533b4a21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[219,220,221,222,223],"tindex":"b230a5c3-13bc-11e5-a107-3d86b7ca57f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[224,225],"tindex":"b230a5c4-13bc-11e5-a107-8f8dcaf6c938","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"b230a5c5-13bc-11e5-a107-23d2bc7fc439","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"variableMap":{"indent":"h","org.apache.commons.collections4.MapUtils.INDENT_STRING":"key1","out":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,88,89,241,90,91,92,93,94,95,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,98,99,100,101,102,103,104,106,107,261,108,262],"tindex":"b230a5c6-13bc-11e5-a107-3760494a2cf7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"b230a5c7-13bc-11e5-a107-6fcf12f7169a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280],"tindex":"b230ccd8-13bc-11e5-a107-f941fdbc91ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"b230ccd9-13bc-11e5-a107-59e10415a722","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyValueSet(java.util.BitSet)) || org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyHasNext(java.util.ArrayList<java.util.Iterator<? extends E>>))"},"status":-2},{"failures":[],"tindex":"b230ccda-13bc-11e5-a107-014c57ea52cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"b230ccdb-13bc-11e5-a107-8d8db1a221d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:868","type":"CtInvocationImpl","sourcecode":"java.util.Properties.put(java.lang.Object, java.lang.Object)"},"variableMap":{"answer":"key","value":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object)"},"status":-2},{"failures":[281,282],"tindex":"b230ccdc-13bc-11e5-a107-7fa07e7fabe8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[283,284,285,286],"tindex":"b230ccdd-13bc-11e5-a107-65fa83244d89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"size","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"status":-1},{"failures":[],"tindex":"b230ccde-13bc-11e5-a107-6d5ecc9ed755","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[287],"tindex":"b230ccdf-13bc-11e5-a107-6f6bf9fec07c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:248","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"b230cce0-13bc-11e5-a107-e52b11d56a57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"b230f3f1-13bc-11e5-a107-55dd313a7da8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[288,289,290,291,292],"tindex":"b230f3f2-13bc-11e5-a107-bbd31ff2f447","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[293,254,294,107,108,295,296,257,260,297,298,299,300],"tindex":"b230f3f3-13bc-11e5-a107-fb8156995110","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[301],"tindex":"b2311b04-13bc-11e5-a107-39cfb235a1d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<?>.next();\n} "},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1263","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<?>.next();\n    } \n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[],"tindex":"b2311b05-13bc-11e5-a107-f7f417c10b7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b2311b06-13bc-11e5-a107-3713fb25e840","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:315","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"b2311b07-13bc-11e5-a107-f37e4a6a690f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"b2311b08-13bc-11e5-a107-cfa14decf555","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[302,303],"tindex":"b2311b09-13bc-11e5-a107-5b321e9b0175","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.SortedBag<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return org.apache.commons.collections4.SortedBag<E>;\n} "},"status":-1},{"failures":[],"tindex":"b2311b0a-13bc-11e5-a107-5dcc3dd94862","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b2311b0b-13bc-11e5-a107-1bb82826abbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"left","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[304,305,306,307],"tindex":"b231421c-13bc-11e5-a107-6f9f0a3aa3f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-1},{"failures":[],"tindex":"b231421d-13bc-11e5-a107-819c5ac1f0df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"b231421e-13bc-11e5-a107-09295fefa663","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:147","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[308,309,310],"tindex":"b231421f-13bc-11e5-a107-136f822e6f3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends I> != null) {\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable<? extends I>.iterator(), org.apache.commons.collections4.Transformer<? super I, ? extends O>, R);\n} "},"status":-1},{"failures":[],"tindex":"b2314220-13bc-11e5-a107-f1b055828c05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[311,312,313,314,315,316,317,318,319,320,321],"tindex":"b2314221-13bc-11e5-a107-9f2dfc63cc18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtIfImpl","sourcecode":"if (java.lang.Long != null) {\n    final long long = java.lang.Long.longValue();\n    return (long >= 0) && (long >= long);\n} "},"status":-1},{"failures":[],"tindex":"b2314222-13bc-11e5-a107-81af2443e129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[],"tindex":"b2314223-13bc-11e5-a107-ed6a0f9b6283","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[322,323,324,325,326],"tindex":"b2316934-13bc-11e5-a107-2dd61dd6a29f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"b2316935-13bc-11e5-a107-3d702c4a6c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b2316936-13bc-11e5-a107-d7be5ea8808b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"b2316937-13bc-11e5-a107-43e9b47c5d36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[327,328,329,330,331,332,333,334,335,336,337,338],"tindex":"b2316938-13bc-11e5-a107-edb0ccdc1ba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"b2316939-13bc-11e5-a107-d3ad832ff233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"b231693a-13bc-11e5-a107-4573bdb8cf98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-2},{"failures":[339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"b231904b-13bc-11e5-a107-859e40e5ef29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object)"},"variableMap":{"obj":"value","delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"b231904c-13bc-11e5-a107-09bef8548fed","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"b231904d-13bc-11e5-a107-5fd456df5a34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b231904e-13bc-11e5-a107-cbbc6cf79d9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-2},{"failures":[],"tindex":"b231904f-13bc-11e5-a107-2f2935d33359","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"b2319050-13bc-11e5-a107-a1403b86f25a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[357,358],"tindex":"b2319051-13bc-11e5-a107-b107e14a65ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:295","type":"CtWhileImpl","sourcecode":"while ((java.lang.ref.ReferenceQueue<java.lang.Object>.poll()) != null) {\n}"},"variableMap":{"queue":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[359,0,2,3,5,6,7,8,9,10,360,11,361,12,13,362,14,16,17,19,20,21,22,23,24,363,25,364,26,27,365,366,367,368,369,370,371,372,339,373,374,375,376,377,340,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,341,394,395,396,397,398,399,400,401,402,289,290,291,292,403,404,405,406,219,407,408,409,410,411,412,413,414,342,415,416,417,418,419,343,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,344,455,456,457,458,459,345,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,346,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,347,495,496,497,498,499,348,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,349,516,517,518,519,520,521,522,523,220,524,221,525,526,222,223,283,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,350,580,581,582,583,584,351,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,352,601,602,603,604,605,606,607,608,284,285,609,286,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,353,656,657,658,659,660,661,662,663,354,664,665,666,667,668,355,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,356,685,686,687,688,689,690,691,692,693,694],"tindex":"b231b762-13bc-11e5-a107-858c0d81ed19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b231b763-13bc-11e5-a107-3f22acbd2d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"b231b764-13bc-11e5-a107-11115f6c14e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-2},{"failures":[],"tindex":"b231b765-13bc-11e5-a107-d3f9df106fbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b231b766-13bc-11e5-a107-f118cfa95dcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[209,210,695,211,212,213,696,214,215,216,217,218,697,698],"tindex":"b231de77-13bc-11e5-a107-eb4a2905f034","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"b231de78-13bc-11e5-a107-bf18679aae56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-2},{"failures":[699,700,701,702,703,704,705,706,707,707,708,708,709,710],"tindex":"b231de79-13bc-11e5-a107-d3ba802b44c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"b231de7a-13bc-11e5-a107-e32efcdf8d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b231de7b-13bc-11e5-a107-d15baac59ce6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"bitIndex","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b231de7c-13bc-11e5-a107-ef5e3049bbd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b231de7d-13bc-11e5-a107-15a0c92da62b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"b231de7e-13bc-11e5-a107-49b7286adb50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:335","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[711,712,713,714,715,716,717,718],"tindex":"b231de7f-13bc-11e5-a107-8ba30f213445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[322,323,324,719,325,326,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,263,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,264,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,205,808,809,810,811,812,813,814,815,206,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,265,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,207,882,883,884,266,267,268,269,270,271,272,273,274,275,885,276,277,278,886,887,888,889,890,891,892,893,279,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,208,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,280,953,954,955,956,957,958,959,960,961,962,963],"tindex":"b2320590-13bc-11e5-a107-970780a45192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"b2320591-13bc-11e5-a107-ef66040ef1cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[539,545,562,623,629,646],"tindex":"b2320592-13bc-11e5-a107-89250e71ed2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[199,200,201,202,203,204],"tindex":"b2320593-13bc-11e5-a107-d926c893d277","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"end1","vDown":"vDown","delta":"delta","end2":"d","this":"this","i":"end1","end1":"k","k":"i","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b2320594-13bc-11e5-a107-ad27b295457c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"b2320595-13bc-11e5-a107-178214131352","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:139","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return K == null ? 0 : -1;\n} else if (K == null) {\n    return 1;\n} "},"status":0},{"failures":[964],"tindex":"b2320596-13bc-11e5-a107-b708939b640f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:232","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n    case BEFORE :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n    case AFTER :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n    case EXCEPTION :\n        final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n        throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n    default :\n        throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n}"},"status":-1},{"failures":[],"tindex":"b2322ca7-13bc-11e5-a107-81b527aadac9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b2322ca8-13bc-11e5-a107-5d68f360f074","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"node","parent":"node","left":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b2322ca9-13bc-11e5-a107-83bcd824fcc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[965,966,967,968,969,970,971],"tindex":"b2322caa-13bc-11e5-a107-4bc8ab32edf1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-1},{"failures":[115,972,973,974,975,976,977,978,979,980,144,981,982,983,984,985,986,987,988],"tindex":"b2322cab-13bc-11e5-a107-05266b99b792","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"b2322cac-13bc-11e5-a107-b90ab579728a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:305","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"node":"previous","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}