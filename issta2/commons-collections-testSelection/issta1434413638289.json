{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":714,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":588,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":705,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":75,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":439,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":264,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":423,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":325,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":162,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":403,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":432,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":222,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":291,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":429,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":519,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":51,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":52,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":377,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":31,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":67,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":364,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":113,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":38,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":568,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":15,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":410,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":329,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":672,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":657,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":148,"org.apache.commons.collections4.CollectionUtilsTest.get":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":567,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":120,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":418,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":472,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":323,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":383,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":336,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":324,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":105,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":369,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":502,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":247,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":245,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":218,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":610,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":407,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":367,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":605,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":634,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":696,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":670,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":651,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":98,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":286,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":607,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":327,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":695,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":679,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":616,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":308,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":393,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":528,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":172,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":636,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":106,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":524,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":173,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":475,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":482,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":26,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":348,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":629,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":214,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":370,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":509,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":609,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":683,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":645,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":235,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":176,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":340,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":345,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":322,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":272,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":611,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":209,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":677,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":643,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":669,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":145,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":129,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":698,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":608,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":341,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":541,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":498,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":596,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":464,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":248,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":453,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":390,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":152,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":489,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":444,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":545,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":365,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":352,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":27,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":578,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":331,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":404,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":565,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":602,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":398,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":389,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":558,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":303,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":81,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":255,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":2,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":639,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":486,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":556,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":630,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":667,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":293,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":601,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":649,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":88,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":252,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":655,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":686,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":229,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":33,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":224,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":213,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":260,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":615,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":628,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":675,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":119,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":282,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":446,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":680,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":219,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":202,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":506,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":411,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":427,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":242,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":58,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":666,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":699,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":233,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":708,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":687,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":142,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":597,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":529,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":302,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":501,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":688,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":658,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":351,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":99,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":463,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":477,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":520,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":183,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":543,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":492,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":574,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":593,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":400,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":632,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":315,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":550,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":157,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":316,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":96,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":538,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":193,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":600,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":355,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":720,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":276,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":368,"org.apache.commons.collections4.ListUtilsTest.testSubtract":455,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":185,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":266,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":221,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":238,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":243,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":257,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":234,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":549,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":642,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":678,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":186,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":94,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":585,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":208,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":357,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":112,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":715,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":653,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":674,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":267,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":268,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":646,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":694,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":271,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":513,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":251,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":505,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":712,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":706,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":571,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":144,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":90,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":478,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":397,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":713,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":435,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":92,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":254,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":460,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":614,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":684,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":380,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":638,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":637,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":68,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":307,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":504,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":184,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":244,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":693,"org.apache.commons.collections4.CollectionUtilsTest.filter":443,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":391,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":318,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":65,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":559,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":164,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":606,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":425,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":134,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":40,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":239,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":146,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":30,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":417,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":280,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":372,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":613,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":459,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":339,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":633,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":493,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":441,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":451,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":177,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":373,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":273,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":623,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":300,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":656,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":211,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":290,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":682,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":566,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":366,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":466,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":440,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":647,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":539,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":554,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":537,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":703,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":80,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":422,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":194,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":413,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":326,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":378,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":555,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":192,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":288,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":527,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":405,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":424,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":719,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":531,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":376,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":503,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":522,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":552,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":349,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":573,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":457,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":354,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":581,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":206,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":592,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":95,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":717,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":297,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":91,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":279,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":458,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":491,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":42,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":344,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":575,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":66,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":228,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":690,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":265,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":387,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":409,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":292,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":496,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":226,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":469,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":299,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":402,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":697,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":311,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":711,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":644,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":580,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":471,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":379,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":317,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":665,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":681,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":718,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":312,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":557,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":576,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":137,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":548,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":107,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":269,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":165,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":281,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":83,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":481,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":330,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":583,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":618,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":534,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":408,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":508,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":510,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":514,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":102,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":161,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":473,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":470,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":582,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":174,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":13,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":710,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":689,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":692,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":388,"org.apache.commons.collections4.set.CompositeSetTest.testContains":278,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":561,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":362,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":420,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":431,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":540,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":704,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":530,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":189,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":709,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":332,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":465,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":232,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":490,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":294,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":685,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":306,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":342,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":171,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":199,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":660,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":412,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":445,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":392,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":476,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":603,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":197,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":434,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":594,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":110,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":263,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":595,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":385,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":49,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":381,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":589,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":511,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":564,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":135,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":499,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":201,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":169,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":494,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":553,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":518,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":535,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":598,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":617,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":77,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":544,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":701,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":123,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":335,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":419,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":334,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":415,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":700,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":474,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":641,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":662,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":384,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":159,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":716,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":256,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":533,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":627,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":650,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":154,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":572,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":659,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":295,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":158,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":394,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":166,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":167,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":421,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":168,"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetRemoveChangesMap":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":310,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":62,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":584,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":361,"org.apache.commons.collections4.map.LRUMapTest.testLRU":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":104,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":626,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":296,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":488,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":500,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":562,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":599,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":249,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":309,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":350,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":8,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":16,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":442,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":7,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":414,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":668,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":702,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":44,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":448,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":45,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":454,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":521,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":261,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":569,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":591,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":631,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":612,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":577,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":86,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":497,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":676,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":149,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":343,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":525,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":707,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":46,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":673,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":190,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":275,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":262,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":671,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":648,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":125,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":216,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":479,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":223,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":289,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":363,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":401,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":663,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":622,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":652,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":590,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":360},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"953b7803-13bc-11e5-88f2-99b4d3446ca3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[9,10,11,12,13,14],"tindex":"953b9f14-13bc-11e5-88f2-6744f5c1ca03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"953b9f15-13bc-11e5-88f2-3f23eca009d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:184","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends J, ? extends U>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends J, ? extends U>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"953bc626-13bc-11e5-88f2-dfa5e80b72c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[],"tindex":"953bc627-13bc-11e5-88f2-29d3c4565bec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"953bc628-13bc-11e5-88f2-b7b35c4dc85b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"953bed39-13bc-11e5-88f2-4b9468f3a581","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[37],"tindex":"953bed3a-13bc-11e5-88f2-098686188a00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:274","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"953bed3b-13bc-11e5-88f2-fb2a6deb8ce0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"lengthInBits","index":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[38,39,40,41],"tindex":"953bed3c-13bc-11e5-88f2-ebd8f1219d9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"953c144d-13bc-11e5-88f2-011c9a11f1dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[54,55,56,57],"tindex":"953c144e-13bc-11e5-88f2-5b0c88775fff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"953c144f-13bc-11e5-88f2-976c06c0bd34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113],"tindex":"953c1450-13bc-11e5-88f2-dfe8ed154126","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hashCode","removeIndex":"hashCode","currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"953c3b61-13bc-11e5-88f2-1da219e16b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"right","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"953c3b62-13bc-11e5-88f2-cb8a85489d8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:160","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"953c3b63-13bc-11e5-88f2-25038caeaad7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1681","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"expectedModifications":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:495","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int = int"},"status":-2},{"failures":[],"tindex":"953c3b64-13bc-11e5-88f2-9b058285872f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"953c3b65-13bc-11e5-88f2-f54ff54fe213","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"953c3b66-13bc-11e5-88f2-db8a51e9c8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139],"tindex":"953c6277-13bc-11e5-88f2-2d77bcf39ef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:190","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)) {\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"953c6278-13bc-11e5-88f2-51ebdcaef643","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[],"tindex":"953c6279-13bc-11e5-88f2-3b497b24b60b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[114,115,116,117,118,120,121,122,123,124,125,126,127,128,130],"tindex":"953c627a-13bc-11e5-88f2-2162ce824180","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"953c627b-13bc-11e5-88f2-4b1f534ded34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"953c898c-13bc-11e5-88f2-ddd3b4c2505e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[],"tindex":"953c898d-13bc-11e5-88f2-ed54c0c5cd86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"953c898e-13bc-11e5-88f2-63c4f95fd2f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[166,167,168,169,170,171,172,173,174,175,176],"tindex":"953c898f-13bc-11e5-88f2-c578d2ea3ffa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"953c8990-13bc-11e5-88f2-a3904c8f508c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1005","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1))"},"variableMap":{"size":"index","this":"setOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:299","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(E))) {\n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(int, E);\n} "},"status":-2},{"failures":[38,40,41],"tindex":"953c8991-13bc-11e5-88f2-71aad89f6c7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"slotFilled","changed":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:87","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[177,178,179,180,181,55,182,183,184,185,186,56,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,57,203,204,205,206,207,208,209,210],"tindex":"953c8992-13bc-11e5-88f2-fb6e59ce5de0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[211,212,213,214,215,216,217,218,219,220,221],"tindex":"953c8993-13bc-11e5-88f2-dd7d0866e7d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"other","o2":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"953cb0a4-13bc-11e5-88f2-53b392873f7e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":0},{"failures":[],"tindex":"953cb0a5-13bc-11e5-88f2-83c4f8442b7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[222,223,224,76,83,84,89,96,105,106,111],"tindex":"953cb0a6-13bc-11e5-88f2-97bed90f6140","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[225],"tindex":"953cb0a7-13bc-11e5-88f2-394a739938a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<?>.next();\n} "},"status":-1},{"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"953cb0a8-13bc-11e5-88f2-edda63df8477","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[255,256,257,258,259],"tindex":"953cb0a9-13bc-11e5-88f2-c3007d300805","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[260,261,262,263,264],"tindex":"953cb0aa-13bc-11e5-88f2-290c88be410c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[265],"tindex":"953cb0ab-13bc-11e5-88f2-cfaa2788713b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"953cb0ac-13bc-11e5-88f2-594856bfdb1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[266],"tindex":"953cd7bd-13bc-11e5-88f2-8790db765af5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:268","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:139","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.addComparator(java.util.Comparator<E>, false)"},"status":-1},{"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286],"tindex":"953cfece-13bc-11e5-88f2-2741ba70cbe8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"953de92f-13bc-11e5-88f2-1d4c8962a1c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"953de930-13bc-11e5-88f2-ad7783988e07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[287,288,289,290],"tindex":"953e1041-13bc-11e5-88f2-af0250d6fe2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:139","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TransformedList<E>.getList().add(int, E)"},"status":-1},{"failures":[291,90,112],"tindex":"953e1042-13bc-11e5-88f2-c769d0f655f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303,212,213,304,214,215,216,217,218,305,306,219,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"953e1043-13bc-11e5-88f2-13561c87c032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"953e1044-13bc-11e5-88f2-852ba6d3a377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"953e1045-13bc-11e5-88f2-3becca15e883","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-2},{"failures":[377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393],"tindex":"953e1046-13bc-11e5-88f2-73cd5253b4df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[121,123],"tindex":"953e1047-13bc-11e5-88f2-5b82c3c77951","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"953e3758-13bc-11e5-88f2-a589ea8de239","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"lineageIndex","proposedCapacity":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[121,123,394,395,396,397,398,399,400],"tindex":"953e3759-13bc-11e5-88f2-0515fe0a96bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[401,292,293,294,295,296,297,298,299,300,301,302,402,403,404,405,406,407,408,212,213,304,214,215,216,217,218,305,306,219,409,410,411,412,413,414,308,309,310,311,312,313,314,315,316,415,416,417,418,419,420,421,317,318,319,320,321,322,323,324,325,326,327,422,423,424,425,426,427,341,342,343,344,345,346,347,348,349,350,351,428,429,430,431,432,433,434,435,436,353,354,355,356,357,358,359,360,361,362,363,437,438,439,440,441,365,366,367,368,369,370,371,372,373,374,375],"tindex":"953e375a-13bc-11e5-88f2-738fd6baabd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"953e5e6b-13bc-11e5-88f2-9d220be6b365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[442],"tindex":"953e5e6c-13bc-11e5-88f2-09a01e334793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:74","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[443,444],"tindex":"953e5e6d-13bc-11e5-88f2-59ca13fe992c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"variableMap":{"hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[445],"tindex":"953e5e6e-13bc-11e5-88f2-77e45dd8fd7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:769","type":"CtIfImpl","sourcecode":"if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[443,444],"tindex":"953e5e6f-13bc-11e5-88f2-bfa3ec2e5625","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:753","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"953e5e70-13bc-11e5-88f2-dd729b800b2d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[446],"tindex":"953e5e71-13bc-11e5-88f2-2b5c60610607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-1},{"failures":[447,448,449,450,451,452],"tindex":"953e5e72-13bc-11e5-88f2-8f00fff81091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"953e5e73-13bc-11e5-88f2-afac074b0303","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"status":-2},{"failures":[292,293,294,295,296,297,298,299,300,301,302,303,212,213,304,214,215,216,217,218,305,306,219,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"953e5e74-13bc-11e5-88f2-7b9ea98a007d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"953e8585-13bc-11e5-88f2-e516d8020e5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"callCounter","index":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":0},{"failures":[],"tindex":"953e8586-13bc-11e5-88f2-d1ce86e4c522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"953e8587-13bc-11e5-88f2-1d03f1ef94db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"953e8588-13bc-11e5-88f2-cff97cf58462","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[266,453,454],"tindex":"953e8589-13bc-11e5-88f2-2d4611f87555","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:154","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1))"},"variableMap":{"orderingBits":"orderingBits","comparatorChain":"comparatorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"953e858a-13bc-11e5-88f2-9901c9141cde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"953e858b-13bc-11e5-88f2-2f946bdc2057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, org.apache.commons.collections4.map.AbstractHashedMap.float)"},"variableMap":{"this":"this","maxSize":"maxSize","org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR":"loadFactor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"status":-2},{"failures":[455,456,457,458,459,460,461,462,463,464,465,466,226,467,227,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,229,496,230,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,232,527,233,528,529,530,531,532,533,534,535,536,537,538,539,540,541,255,542,543,544,545,234,546,547,548,256,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,237,567,238,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,240,597,241,598,599,600,601,602,603,604,605,606,607,608,609,610,611,257,612,613,614,615,242,616,617,618,619,258,620,621,622,623,624,625,626,627,628,245,629,246,630,631,632,633,634,635,636,637,638,639,640,641,642,643,259,644,645,646,647,247,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,251,674,675,676,677,678,252,679,253,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703],"tindex":"953e858c-13bc-11e5-88f2-7d2daaba558d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[474,491,503,520,534,547,549,574,591,604,617,622,636,649,658,662,686,703],"tindex":"953eac9d-13bc-11e5-88f2-6dd6bc14e736","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"953eac9e-13bc-11e5-88f2-f34b12902b87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":0},{"failures":[443,444],"tindex":"953eac9f-13bc-11e5-88f2-d5be68be4d31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"953eaca0-13bc-11e5-88f2-49a473a31468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"953eaca1-13bc-11e5-88f2-d15d83536aeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"953eaca2-13bc-11e5-88f2-a7ba1dc60faf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"before","header":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"953eaca3-13bc-11e5-88f2-37d3de374e43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"953eaca4-13bc-11e5-88f2-bb62accb0914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-2},{"failures":[121,123,704,395,397],"tindex":"953eaca5-13bc-11e5-88f2-83620240856e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"currentNode","this":"this","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"953ed3b6-13bc-11e5-88f2-2f4dfbcf1a8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"path","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"953ed3b7-13bc-11e5-88f2-87a91e050f40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[211],"tindex":"953efac8-13bc-11e5-88f2-e1a2f0877459","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:456","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-1},{"failures":[],"tindex":"953efac9-13bc-11e5-88f2-051f918242a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[705,211,706,707],"tindex":"953efaca-13bc-11e5-88f2-23c384efbf24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[708,709],"tindex":"953efacb-13bc-11e5-88f2-cb99579a4b5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[710,711],"tindex":"953efacc-13bc-11e5-88f2-8b52f275002e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:972","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[712,713,714,121,123,704,394,395,396,397,398,399,400],"tindex":"953efacd-13bc-11e5-88f2-7351c02461e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"953eface-13bc-11e5-88f2-65afd80178e9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"953efacf-13bc-11e5-88f2-8b2fd029bc0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"953efad0-13bc-11e5-88f2-05df3ff9839c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":0},{"failures":[715,716,717],"tindex":"953efad1-13bc-11e5-88f2-436dd1388db3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"953efad2-13bc-11e5-88f2-8702618dcc8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[0,718,1,2,3,719,4,720,5,6,7,8],"tindex":"953f21e3-13bc-11e5-88f2-e3b9693f240f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}