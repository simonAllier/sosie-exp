{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":428,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":577,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":543,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":4,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":291,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":270,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":645,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":450,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":495,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":560,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":570,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":586,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":187,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":142,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":319,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":494,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":626,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":386,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":387,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":532,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":151,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":262,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":297,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":419,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":354,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":3,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":554,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":558,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":426,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":440,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":619,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":496,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":99,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":411,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":519,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":600,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":652,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":370,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":540,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":438,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":482,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":490,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":625,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":631,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":413,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":502,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":501,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":627,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":149,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":288,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":189,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":445,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":314,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":587,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":352,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.CollectionUtilsTest.intersection":132,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":593,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":633,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":572,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":606,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":388,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":144,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":451,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":536,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":317,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":380,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":318,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":629,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":418,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":125,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":202,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":548,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":465,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":591,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":423,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":487,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":145,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":369,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":508,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":565,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":199,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":474,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":312,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":408,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":488,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":623,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":429,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":193,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":421,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":613,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":128,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":214,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":31,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":638,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":304,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":433,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":303,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":281,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":300,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":653,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":533,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":624,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":648,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":339,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":268,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":473,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":284,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":397,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":489,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":534,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":61,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":547,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":62,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":117,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":282,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":163,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":315,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":64,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":637,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":431,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":220,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":432,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":215,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":240,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":260,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":650,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":529,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":601,"org.apache.commons.collections4.ArrayStackTest.testSearch":235,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":168,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":204,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":179,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":546,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":342,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":500,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":610,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":56,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":583,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":331,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":399,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":439,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":264,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":371,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":309,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":615,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":233,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":539,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":150,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":23,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":186,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":585,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":98,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":415,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":234,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":178,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":516,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":357,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":477,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":468,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":644,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":182,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":382,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":341,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":541,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":556,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":207,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":194,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":463,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":336,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":307,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":392,"org.apache.commons.collections4.map.LRUMapTest.testReset":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":170,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":53,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":381,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":485,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":553,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":209,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":544,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":286,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":301,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":154,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":344,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":442,"org.apache.commons.collections4.map.LinkedMapTest.testReset":550,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":584,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":222,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":57,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":88,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":302,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":571,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":535,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":651,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":531,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":191,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":470,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":528,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":618,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":206,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":483,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":345,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":416,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":628,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":417,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":505,"org.apache.commons.collections4.ListUtilsTest.testPartition":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":503,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":604,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":223,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":112,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":290,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":368,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":188,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":289,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":190,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":441,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":561,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":347,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":391,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":65,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":360,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":279,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":171,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":576,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":526,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":611,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":75,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":324,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":573,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":582,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":86,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":274,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":275,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":19,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":129,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":350,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":599,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":492,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":351,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":444,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":310,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":594,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":343,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":414,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":295,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":510,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":403,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":499,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":609,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":256,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":328,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":630,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":405,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutNullKey":497,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":479,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":595,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":216,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":552,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":592,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":636,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":34,"org.apache.commons.collections4.SetUtilsTest.testHashCode":517,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":475,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":420,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":185,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":285,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":258,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":622,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":269,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":469,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":491,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":620,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":461,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":460,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":597,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":208,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":457,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":512,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":456,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":459,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":643,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":453,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":294,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":455,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":454,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":365,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":551,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":590,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":162,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSimpleSerialization":646,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":139,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":649,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":404,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":481,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":522,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":124,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":478,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":542,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":566,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":110,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":119,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":96,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":218,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":172,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":252,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":333,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":384,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":229,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":580,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":266,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutNullValue":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":308,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":116,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":375,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":276,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":581,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":232,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":102,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":85,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":635,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":6,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":425,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":396,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":92,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":545,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":363,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":390,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":393,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":164,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsSelfHashCode":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":427,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":201,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":395,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":114,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":509,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":549,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":217,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":589,"org.apache.commons.collections4.map.LRUMapTest.testLRU":579,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":524,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":507,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":574,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":311,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":272,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":367,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":210,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":639,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":617,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":602,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":400,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":401,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":111,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":567,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":466,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":472,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":97,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":377,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":642,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":109,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":398,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":641,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":493,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":555,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":538,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":376,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":230,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":378,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":603,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":141,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":334,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":239,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":87,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testRandomListSort":464,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":621,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":267,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":364,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":612},"transformations":[{"failures":[],"tindex":"90d526d8-13b3-11e5-8350-f78d9049b2cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"90db8f79-13b3-11e5-8350-3520fd64388b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"90db8f7a-13b3-11e5-8350-3f869caa7546","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"90db8f7b-13b3-11e5-8350-1ddd2ac531c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"90db8f7c-13b3-11e5-8350-2fef083a5190","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"90db8f7d-13b3-11e5-8350-d38493cde05c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"90dbb68e-13b3-11e5-8350-593c64727062","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":-2},{"failures":[],"tindex":"90dbb68f-13b3-11e5-8350-d1854c1bbef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"90dbb690-13b3-11e5-8350-790802b3576c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"90dbb691-13b3-11e5-8350-638b1f0a1909","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:141","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"90dbb692-13b3-11e5-8350-ab35783cb302","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":0},{"failures":[],"tindex":"90dbdda3-13b3-11e5-8350-99bddb1738ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[57,58,59,60,61,62,63],"tindex":"90dbdda4-13b3-11e5-8350-f97de020a281","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"90dbdda5-13b3-11e5-8350-4b00d007709d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:873","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return 0;\n} "},"variableMap":{"removed":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":0},{"failures":[],"tindex":"90dbdda6-13b3-11e5-8350-7363f568ef0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"90dbdda7-13b3-11e5-8350-23a6b4dc3e0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"90dc04b8-13b3-11e5-8350-8db4e1fd43c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[64,65,66,67,68,69,70],"tindex":"90dc04b9-13b3-11e5-8350-0d73ae65fbce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"90dc04ba-13b3-11e5-8350-8d4e3b8a2766","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"i","keys":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[96,97,98,99],"tindex":"90dc04bb-13b3-11e5-8350-9188cd650509","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"90dc04bc-13b3-11e5-8350-a76d29669984","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110],"tindex":"90dc2bcd-13b3-11e5-8350-0375b1c26a80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[111,112],"tindex":"90dc2bce-13b3-11e5-8350-bfc6856a91fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1432","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.size())"},"status":-1},{"failures":[],"tindex":"90dc2bcf-13b3-11e5-8350-27c1770d4115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[],"tindex":"90dc2bd0-13b3-11e5-8350-199f85a7e4d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"90dc2bd1-13b3-11e5-8350-4d8759e499fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"90dc2bd2-13b3-11e5-8350-55aecc1926aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"90dc52e3-13b3-11e5-8350-a733a8a46d4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:158","type":"CtIfImpl","sourcecode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} "},"variableMap":{"result":"key2","array":"key2","length":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"90dc52e4-13b3-11e5-8350-eb240491a390","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[126,127,128,129,130,131,132,133],"tindex":"90dc52e5-13b3-11e5-8350-e3c5b3acca90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-1},{"failures":[134],"tindex":"90dc52e6-13b3-11e5-8350-2d52af264c31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-1},{"failures":[41],"tindex":"90dc52e7-13b3-11e5-8350-63b704921bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,0,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,1,2,3,4,187,5,6,188,7,189,8,190,191,192,193,194,195,196,197,198,199,200,9,10,201,11,12,13,14,15,16,17,18,202,203,19,204,205,206,207,208,209,210,211,212,213,20,21,22,23,24,214,25,26,215,27,216,28,217,218,219,220,221,222,29,223,224,225,226,227,30,31,228,32,33,34,35,36,37,38,39,229,230,40,231,232,233,234],"tindex":"90dc52e8-13b3-11e5-8350-89fd5a80414e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[235],"tindex":"90dc79f9-13b3-11e5-8350-6318f3b66fa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[236],"tindex":"90dc79fa-13b3-11e5-8350-270cd07784df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-1},{"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368],"tindex":"90dc79fb-13b3-11e5-8350-fd50194ea130","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[147,138,137,135,136,142,143,145,144,149,150,151,158,181,159,160,161,180,162,163,164,165,166,167,168,169,171,172,173,174,175,176,204,231],"tindex":"90dca10c-13b3-11e5-8350-e79cb3ce2ea1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[],"tindex":"90dca10d-13b3-11e5-8350-a520478b57eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"90dca10e-13b3-11e5-8350-e97cf5e63de9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"90dca10f-13b3-11e5-8350-b1eace0430b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:813","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[],"tindex":"90dca110-13b3-11e5-8350-6bcd1b206a76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"90dcc821-13b3-11e5-8350-55ceb2f94b9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"entry","root":"left","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"90dcc822-13b3-11e5-8350-7b6276235508","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[369],"tindex":"90dcef33-13b3-11e5-8350-0b14bbbd137e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"90dcef34-13b3-11e5-8350-059497119a96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"90dcef35-13b3-11e5-8350-8d0b2c3c050a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"replacement","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"90dcef36-13b3-11e5-8350-f1a278ed4cd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"h","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":0},{"failures":[370,371,236],"tindex":"90dcef37-13b3-11e5-8350-59269f260722","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"90dd1648-13b3-11e5-8350-ffe76a7bb714","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[113,114,115],"tindex":"90dd1649-13b3-11e5-8350-13cac9569f37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)"},"status":-1},{"failures":[],"tindex":"90dd164a-13b3-11e5-8350-df16ffc73bba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":0},{"failures":[372,373,374,375,376,377,378,379,380,381,382,383],"tindex":"90dd164b-13b3-11e5-8350-9f075116b38e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[384,385,386,387,388,389,390,391,392,53,393,394,395,396],"tindex":"90dd164c-13b3-11e5-8350-db9083812b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"90dd164d-13b3-11e5-8350-376ccbe11493","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"key","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"90dd164e-13b3-11e5-8350-038781a37424","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"h","previous":"parent","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[397],"tindex":"90dd3d5f-13b3-11e5-8350-0b85060647a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"key","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:167","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> , int++) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"90dd3d60-13b3-11e5-8350-296d5c4b2253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"90dd3d61-13b3-11e5-8350-3fc03581888d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:130","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n    java.util.ArrayList<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"90dd3d62-13b3-11e5-8350-f71700147cfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[],"tindex":"90dd3d63-13b3-11e5-8350-13db09098b4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[],"tindex":"90dd6474-13b3-11e5-8350-a15117d8168e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"90dd6475-13b3-11e5-8350-cfa322708044","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"90dd6476-13b3-11e5-8350-a3d3ce51bfc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"90dd6477-13b3-11e5-8350-49923992e7b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413],"tindex":"90dd6478-13b3-11e5-8350-df4d47bbc0d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[414,415,416,417],"tindex":"90dd8b89-13b3-11e5-8350-1f09391bd795","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"contains","beforeFirst":"contains"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":-1},{"failures":[],"tindex":"90dd8b8a-13b3-11e5-8350-c5083752efb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:284","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n}"},"status":-2},{"failures":[418,299,419,420,421,422,423,424,425,426,427,428,302,429,430,431,432,303,304,433,309,310,311,312,434,435,345,436,437,438,439,440,348,441,442,443,444,349,445,446,447,448,350,351,449,356,357,358,359],"tindex":"90dd8b8b-13b3-11e5-8350-d94691ceaf13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"90dd8b8c-13b3-11e5-8350-45bf2b9954f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:327","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"nCopies":"hash","size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:164","type":"CtOperatorAssignmentImpl","sourcecode":"int %= org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int"},"status":0},{"failures":[],"tindex":"90dd8b8d-13b3-11e5-8350-557f4644099a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"currentNode","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"90ddb29e-13b3-11e5-8350-9fe331c6f29d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":0},{"failures":[],"tindex":"90ddd9af-13b3-11e5-8350-c1bd644f4ba1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1156","type":"CtForEachImpl","sourcecode":"for (final C C : C[]) {\n    boolean |= java.util.Collection<C>.add(C);\n}"},"status":0},{"failures":[],"tindex":"90ddd9b0-13b3-11e5-8350-4f2608c64c2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:219","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[450,451,452],"tindex":"90ddd9b1-13b3-11e5-8350-0f1d74183a11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"90ddd9b2-13b3-11e5-8350-b5dcffa94f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode","replacement":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[453,454,455,456,457,458,459,460,461,462,463],"tindex":"90ecf4e3-13b3-11e5-8350-8fb11b2f4dda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[464,70,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505],"tindex":"90ecf4e4-13b3-11e5-8350-87f8c8d13e5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:76","type":"CtReturnImpl","sourcecode":"return java.util.Comparator<E>.compare(E, E)"},"status":-1},{"failures":[237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368],"tindex":"90ed1bf5-13b3-11e5-8350-0f420fca6159","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[506,507,508,509,510,511,512,513,514,273,515,516],"tindex":"90ed1bf6-13b3-11e5-8350-d36ae61aada4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hash3","listSize":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"90ed1bf7-13b3-11e5-8350-bb8f75368097","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"90ed1bf8-13b3-11e5-8350-bfbf1683bdb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"variableMap":{"entry":"root","endIndexInBits":"lengthInBits","root":"parent","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"90ed4309-13b3-11e5-8350-9782cb549db9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"90ed430a-13b3-11e5-8350-53aae511a3c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[517],"tindex":"90ed430b-13b3-11e5-8350-03ea4ef53b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"90ed6a1c-13b3-11e5-8350-219913c8a436","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"90ed6a1d-13b3-11e5-8350-2159b39415e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"90ed6a1e-13b3-11e5-8350-2771219037e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"root","parent":"root","h":"h","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[],"tindex":"90ed6a1f-13b3-11e5-8350-0fa396b29f2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"list","n":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[518,519,238,239,520,521,522,523,524,525,526,527,528,529,240,530,245,531,532,246,255,257,258,533,534,535,536,537,538,539,540,541,542,259,543,264,544,545,265,271,272,506,507,508,509,510,511,514,63,546,273,547,278,548,549,279,550,551,286,287,552,553,554,555,556,557,558,559,560,561,288,562,293,563,564,294,314,315,565,566,567,568,569,570,571,572,573,574,316,575,321,576,577,322,578,579,580,329,332,333,581,582,583,584,585,586,587,588,589,590,334,591,339,592,593,340,436,437,438,439,440,348,441,442,443,444,349,594,595,596,597,598,360,361,599,600,601,602,362,603,363,604,605,606,607,608,609,610,364,611,612,613,614,615,365,366,616,617,618,619,367,620,368,621,622,623,624,625,626,627],"tindex":"90ed9130-13b3-11e5-8350-57a23f8f7c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-1},{"failures":[],"tindex":"90ed9131-13b3-11e5-8350-9d8b67da4b78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[628,629,630,631,632,633,92,634,635,636,637,638,639,640,641,93,642,643],"tindex":"90ed9132-13b3-11e5-8350-c92574e34fd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[644,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,203,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,230,40],"tindex":"90ed9133-13b3-11e5-8350-337609eec72a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"90ee5484-13b3-11e5-8350-87f252272d17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"90ee5485-13b3-11e5-8350-432cdc1c5981","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"90ee7b96-13b3-11e5-8350-dd4a545e2f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[645,646],"tindex":"90ee7b97-13b3-11e5-8350-858ea2a390c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:95","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"90ee7b98-13b3-11e5-8350-21bbe5143188","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[647,648,649,650,651,652,653],"tindex":"90ee7b99-13b3-11e5-8350-b3951a9c27cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"90ee7b9a-13b3-11e5-8350-550cd409503f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hashCode","lengthInBits":"hashCode","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}