{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":732,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":266,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":34,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":902,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":433,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":532,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":641,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":197,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":960,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":769,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":611,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":602,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":495,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":934,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":774,"org.apache.commons.collections4.CollectionUtilsTest.get":613,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":897,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":64,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":651,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":711,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":581,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":411,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":975,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":291,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":928,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":324,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":350,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":525,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":443,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":282,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":210,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":296,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":680,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":745,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":240,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":896,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":682,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":476,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":413,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":847,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":274,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":562,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":659,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":867,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":220,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":481,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":159,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":589,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":805,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":387,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":661,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":135,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":239,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":763,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":916,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":956,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":486,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":257,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":632,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":835,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":903,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":758,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":825,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":432,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":211,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":940,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":181,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":118,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":687,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":522,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":944,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":402,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":3,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":284,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":40,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":923,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":357,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":761,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":587,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":376,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":499,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":888,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":482,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":336,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":37,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":616,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":555,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":137,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":736,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":819,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":207,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":749,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":741,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":768,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":762,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":445,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":677,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":519,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":209,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":708,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":33,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":54,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":76,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":829,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":832,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":965,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":146,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":547,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":535,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":343,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":369,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":77,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":204,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":614,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":839,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":610,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":713,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":778,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":195,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":773,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":89,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":822,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":893,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":95,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":533,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":51,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":173,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":457,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":676,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":561,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":591,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":926,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":303,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":755,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":393,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":922,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":841,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":765,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":268,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":731,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":461,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":636,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":501,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":35,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":564,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":355,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":229,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":961,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":662,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":516,"org.apache.commons.collections4.IteratorUtilsTest.testToList":496,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":471,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":932,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":943,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":558,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":80,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":853,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":367,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":467,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":748,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":215,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":894,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":962,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":381,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":169,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":785,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":845,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":868,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":588,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":469,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":327,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":707,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":895,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":681,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":50,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":259,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":874,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":691,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":550,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":351,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":560,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":144,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":913,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":786,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":921,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":795,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":891,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":834,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":723,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":483,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":656,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":566,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":279,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":114,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":377,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":813,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":428,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":577,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":131,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":272,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":973,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":703,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":598,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":389,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":574,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":78,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":416,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":855,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":500,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":842,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":552,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":808,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":111,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":237,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":435,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":594,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":719,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":727,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":784,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":228,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":670,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":121,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":345,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":431,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":720,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsExceptionPredicate":534,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":630,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":342,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":927,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":584,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":738,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":814,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":444,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":605,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":553,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":420,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":883,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":509,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":885,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":578,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":312,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":504,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":289,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":226,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":262,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":887,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":660,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":524,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":669,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":440,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":544,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":631,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":634,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":957,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":511,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":415,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":138,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":479,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":709,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":184,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":567,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":14,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":168,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":295,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":491,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":837,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":863,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":151,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":875,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":338,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":548,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":633,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":866,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":865,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":864,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":952,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":716,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":283,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":679,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":557,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":363,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":579,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":518,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":635,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":301,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":352,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":512,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":899,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":937,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":515,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":514,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":513,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":674,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":248,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":391,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":851,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":249,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":164,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":53,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":751,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":976,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":582,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":698,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":190,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":857,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":696,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":951,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":950,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":949,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":872,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":506,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":317,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":782,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":359,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":439,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":423,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":267,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":568,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":503,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":68,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":81,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":188,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":378,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":507,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":624,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":665,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":924,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":675,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":603,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":797,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":436,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":493,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":860,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":935,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":770,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":821,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":852,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":889,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":800,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":96,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":715,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":218,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":278,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":742,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":689,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":722,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":690,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":523,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":596,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":537,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":388,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":876,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":645,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":563,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":10,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":820,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":124,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":799,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":466,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":549,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":898,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":764,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":734,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":323,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":858,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":417,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":565,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":22,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":165,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":194,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":320,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":554,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":254,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":540,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":917,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":280,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":174,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":85,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":929,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":870,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":609,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":714,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":256,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":409,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":120,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":299,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":970,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":796,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":374,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":570,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":571,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":963,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":473,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":310,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":485,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":214,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":82,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":626,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":892,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":238,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":740,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":92,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":149,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":276,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":737,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":639,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":844,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":502,"org.apache.commons.collections4.iterators.IteratorIterableTest.testIterator":325,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":490,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":543,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":746,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":848,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":772,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":790,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":647,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":176,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":200,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":396,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":817,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":692,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":527,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":526,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":653,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":706,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":213,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":434,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":380,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":939,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":823,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":6,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":7,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":978,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":684,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":5,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":269,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":909,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":427,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":919,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":754,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":521,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":873,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":288,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":664,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":398,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":334,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":920,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":429,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":818,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":599,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":622,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":683,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":693,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":314,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":590,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":793,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":886,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":904,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":666,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":453,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":74,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":977,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":426,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":862,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":595,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":877,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":776,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":373,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":221,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":968,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":678,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":945,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":586,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":46,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":414,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":361,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":265,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":831,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":112,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":794,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":620,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":964,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":143,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":368,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":750,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":405,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":890,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":232,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":287,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":222,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":767,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":826,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":390,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":838,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":365,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":806,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":824,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":441,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":625,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":101,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":451,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":156,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":644,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":655,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":332,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":245,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":618,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":286,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":529,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":743,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":971,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":270,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":697,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":569,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":52,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":139,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":341,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":418,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":788,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":484,"org.apache.commons.collections4.ListUtilsTest.testSubtract":349,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":597,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":307,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":246,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":175,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":375,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":694,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":688,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":541,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":752,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":205,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":478,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":856,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":319,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":907,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":75,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":779,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":643,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":241,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":132,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":792,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":828,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":905,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":906,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":382,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":663,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":604,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":846,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":234,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":918,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":637,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":628,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":827,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":702,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":119,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":724,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":30,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":969,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":150,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":344,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":247,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":617,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":901,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":328,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":854,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":747,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":86,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":941,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":627,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":954,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":125,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":575,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":966,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":158,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":735,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":712,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":882,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":487,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":760,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":20,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":744,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":538,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":488,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":673,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":450,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":185,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":251,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":225,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":658,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":383,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":815,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":672,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":477,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":601,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":309,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":572,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":331,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":593,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":475,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":959,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":955,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":556,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":261,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":812,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":88,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":801,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":930,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":861,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":255,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":615,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":459,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":938,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":60,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":61,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":308,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":914,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":455,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":448,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":879,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":91,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":87,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":489,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":686,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":408,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":157,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":217,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":243,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":492,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":353,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":646,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":648,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":849,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":756,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":290,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":725,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":650,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":498,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":539,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":936,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":385,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":833,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":43,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":705,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":721,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":757,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":915,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":510,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":729,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":339,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":777,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":178,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":508,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":802,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":958,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":638,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":809,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":900,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":397,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":652,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":649,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":728,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":401,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":840,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":44,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":201,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":366,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":843,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":273,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":859,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":465,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":542,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":816,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":780,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":807,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":311,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":358,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":804,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":884,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":592,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":667,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":551,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":430,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":783,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":787,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":726,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":642,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":619,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":967,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":972,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":162,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":654,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":167,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":789,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":583,"org.apache.commons.collections4.IteratorUtilsTest.testAsIterable":321,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":191,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":733,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":372,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":494,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":260,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":419,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":227,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":623,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":910,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":912,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":700,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":911,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":458,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":606,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":612,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":32,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":66,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":31,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":233,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":253,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":869,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":297,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":640,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":285,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":811,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":93,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":766,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":219,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":318,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":26,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":830,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":850,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":953,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":974,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":103,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":739,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":130,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":942,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":810,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":56,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":442,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":340,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":946,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":947,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":931,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":933,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":948,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":275,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":718,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":871,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":49,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":798,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":699,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":446,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":406,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":224,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":315,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":730,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":464,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":400,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":781,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":447,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":710,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":39,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":182,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":422,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":36,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":421,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":47,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":497,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":2,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":235,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":313,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":908,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":880,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":12,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":881,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":250,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":264,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":621,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":600,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":300,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":775,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":925,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":424,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":657,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":456,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":753,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":100,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":791,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":463,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":206},"transformations":[{"failures":[],"tindex":"f274e3aa-13ab-11e5-a583-bdc37ee0386b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f2750abb-13ab-11e5-a583-53dd67fa5970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:750","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(this, null)"},"variableMap":{"newTop":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"f2750abc-13ab-11e5-a583-d162d1fd2dcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[0,1,2,3,4],"tindex":"f2750abd-13ab-11e5-a583-59eef16668fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[5,6,7,8],"tindex":"f2750abe-13ab-11e5-a583-379732d13925","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"f2750abf-13ab-11e5-a583-b18d12a0d319","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[],"tindex":"f27530d0-13ab-11e5-a583-4d120796f342","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"root","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"f27530d1-13ab-11e5-a583-27a4652a615e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:271","type":"CtReturnImpl","sourcecode":"return super.put(K, V)"},"status":-2},{"failures":[],"tindex":"f27530d2-13ab-11e5-a583-1163bd4c83ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"f27530d3-13ab-11e5-a583-f13426c9399a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:286","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"f27530d4-13ab-11e5-a583-19f9262d638e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[28,29,30],"tindex":"f27530d5-13ab-11e5-a583-2f9dd9627286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"f27557e6-13ab-11e5-a583-37008ff17819","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-2},{"failures":[],"tindex":"f27557e7-13ab-11e5-a583-ef7fb33de91f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"f27557e8-13ab-11e5-a583-15cde6c0ef7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"f27557e9-13ab-11e5-a583-6fc7017af7dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"f2757efa-13ab-11e5-a583-3d3df235f5c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:366","type":"CtLocalVariableImpl","sourcecode":"final K K = java.util.Map.Entry<K, V>.getKey()"},"status":-2},{"failures":[74],"tindex":"f2757efb-13ab-11e5-a583-e35c938bbdd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:47","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate();\n} "},"status":-1},{"failures":[],"tindex":"f2757efc-13ab-11e5-a583-ffc9d343f31b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"y","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f2757efd-13ab-11e5-a583-f5d5ddda24a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:129","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"f275a60e-13ab-11e5-a583-8954b158f57f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"f275a60f-13ab-11e5-a583-2dc291f7570f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f275a610-13ab-11e5-a583-71276eba85a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"p","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f275a611-13ab-11e5-a583-ad62969e5bb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"f275a612-13ab-11e5-a583-277c4a359df1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[87,28],"tindex":"f275cd23-13ab-11e5-a583-d97de75c39a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"f275cd24-13ab-11e5-a583-f564c8339e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[9,10,11,12,13,14,15,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320],"tindex":"f275cd25-13ab-11e5-a583-bb2afbcda91a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:612","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.isEmpty()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()"},"status":-1},{"failures":[321,322,323,324,325,326],"tindex":"f275cd26-13ab-11e5-a583-6d043061c666","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[],"tindex":"f275f437-13ab-11e5-a583-11ba5733480f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f275f438-13ab-11e5-a583-7b3f143b7d7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"f275f439-13ab-11e5-a583-b5802cecfae9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f275f43a-13ab-11e5-a583-4b4f2b65a4a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"largestKey","proposedCapacity":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:141","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((int[][int]) > int) {\n        boolean[][int] = !(boolean[][int]);\n    } \n    java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])));\n}"},"status":0},{"failures":[],"tindex":"f275f43b-13ab-11e5-a583-c1d16bf528c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"variableMap":{"buf":"nextElement","first":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:381","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[],"tindex":"f275f43c-13ab-11e5-a583-e36bbc5b8814","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f2761b4d-13ab-11e5-a583-792722c17958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"f2761b4e-13ab-11e5-a583-bd4d67a0938b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[327,328,329,330,331],"tindex":"f2761b4f-13ab-11e5-a583-c3509ea4385b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:502","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"h":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[332,333,334,335,336,337,338,339,340,341,342],"tindex":"f2761b50-13ab-11e5-a583-0d884aa7840f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"f2761b51-13ab-11e5-a583-eda331a42245","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":0},{"failures":[],"tindex":"f2761b52-13ab-11e5-a583-8f5eb0c1e785","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:339","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[],"tindex":"f2761b53-13ab-11e5-a583-fbc01e12707c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super T>.execute(T)"},"status":0},{"failures":[24,26,343,344],"tindex":"f2761b54-13ab-11e5-a583-b53b3c8d34c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"f2764265-13ab-11e5-a583-9d99dd971090","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399],"tindex":"f2764266-13ab-11e5-a583-4d74dcce592b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"f2764267-13ab-11e5-a583-0578df0ed062","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-2},{"failures":[400,401,9,10,11,12,13,402,15,403,404,16,17,19,20,21,405,23,24,25,26,406,407,408],"tindex":"f2764268-13ab-11e5-a583-49d4161b1b4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"f2764269-13ab-11e5-a583-2bc933748302","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[409,410],"tindex":"f276426a-13ab-11e5-a583-95860676e8c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f276426b-13ab-11e5-a583-3fc0a47907b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[411,412,413,414,415,416,417,418,419,420,421,422],"tindex":"f276697c-13ab-11e5-a583-794f7c3fddb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f276697d-13ab-11e5-a583-1f25a3f0fecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,29,142,143,145,146,147,149,150,151,152,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,32,33,38,39,41,42,43,46,48,51,52,61,66,70,2,456,457,3,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490],"tindex":"f276697e-13ab-11e5-a583-e74d2d2e2273","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[491,492,493,494],"tindex":"f2783e3f-13ab-11e5-a583-55da4d3ef7b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"bound","expectedModCount":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"f2783e40-13ab-11e5-a583-6fa78ae689d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"right","parent":"left","left":"child","h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[495],"tindex":"f2783e41-13ab-11e5-a583-37999e1c627d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:412","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[48],"tindex":"f2786552-13ab-11e5-a583-cbd844ea396e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[76,496,497,498,499,500],"tindex":"f2786553-13ab-11e5-a583-8ba6f2d036f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[501,502,503,504,505],"tindex":"f2786554-13ab-11e5-a583-f73eb0da7149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[506,507],"tindex":"f2786555-13ab-11e5-a583-e349fdf2116d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f2786556-13ab-11e5-a583-2bfb19f62112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"f2786557-13ab-11e5-a583-43e5c9d4b8c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"f2786558-13ab-11e5-a583-75d0bf13e5d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"entry","key2":"key3","key5":"key3","previous":"entry","hashCode":"hashCode","key3":"key2","key4":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[4,508,509],"tindex":"f2786559-13ab-11e5-a583-cbd06f64714c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"previous","header":"loop"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f278655a-13ab-11e5-a583-a56520426c3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[],"tindex":"f278655b-13ab-11e5-a583-67bd04ae1044","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().remove()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().element()"},"status":0},{"failures":[],"tindex":"f2788c6c-13ab-11e5-a583-3927817fefbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[],"tindex":"f2788c6d-13ab-11e5-a583-cda991ef2126","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-2},{"failures":[],"tindex":"f2788c6e-13ab-11e5-a583-e553e23a75fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"root","tree":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f2788c6f-13ab-11e5-a583-195cc9b19f2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[400,401,510,511,9,10,11,12,13,402,15,512,513,514,515,516,517,518,519,520,403,404,521,522,523,524,525,16,17,19,20,21,405,23,24,25,26,526,527,528,529,530,531,406,532,407,408,533],"tindex":"f2788c70-13ab-11e5-a583-13a8a1676402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[42,48],"tindex":"f2788c71-13ab-11e5-a583-f5c8f4ca7d99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"size","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[],"tindex":"f2788c72-13ab-11e5-a583-2bcf03fbd46e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[534],"tindex":"f278b383-13ab-11e5-a583-2f369aabadfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:74","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\")"},"status":-1},{"failures":[535,536,429,430,537,431,432,433,538,434,435,436,437,539,540,541,542,543,544,141,142,143,144,145,146,147,148,149,150,151,152,545,546,547,548,549,550,444,445,551,446,447,448,552,449,450,451,452,553,554,555,556,36,65,38,39,41,42,43,46,48,51,52,53,62,63,64,1,557,558,559,560,458,459,561,460,461,462,562,463,464,465,466,563,564,565,566,567,568,569,468,469,570,470,471,472,571,473,474,475,476,572,573,574,575,482,483,576,484,485,486,577,487,488,489,490],"tindex":"f278b384-13ab-11e5-a583-71084641ec59","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,329,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612],"tindex":"f278b385-13ab-11e5-a583-6517220929b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-1},{"failures":[613],"tindex":"f278b386-13ab-11e5-a583-15e6db30bf2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1265","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<?>.next();\n} "},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1263","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<?>.next();\n    } \n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[614],"tindex":"f278b387-13ab-11e5-a583-d1ae72269d21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:196","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"f278b388-13ab-11e5-a583-29fba253f73c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"current","left":"parent","root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f278da99-13ab-11e5-a583-073224e92c6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()"},"status":0},{"failures":[],"tindex":"f278da9a-13ab-11e5-a583-dd5eddfaf2e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"f278da9b-13ab-11e5-a583-716be4ca1743","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[615,345,346,616,617,347,348,349,350,618,351,352,619,620,353,354,621,622,623,624,625,626,88,627,628,629,332,630,631,632,633,634,635,636,637,638,355,356,639,640,641,89,642,643,644,357,358,645,646,359,360,647,648,649,650,651,652,90,653,654,655,333,656,657,658,659,660,661,662,663,664,361,362,665,666,667,91,668,669,670,671,363,364,672,673,365,366,674,675,676,677,678,679,92,680,681,682,334,683,684,685,686,687,688,689,690,691,367,368,369,692,693,93,694,695,335,696,94,697,698,699,370,700,701,702,703,704,705,371,706,707,708,709,710,711,372,373,712,713,374,375,714,715,716,717,718,719,95,720,721,722,336,723,724,725,726,727,728,729,730,731,376,377,732,733,734,96,735,736,737,738,378,379,739,740,380,381,741,742,743,744,745,746,97,747,748,749,337,750,751,752,753,754,755,756,757,758,382,383,384,759,760,98,761,762,338,763,99,764,765,766,385,767,768,769,770,771,772,386,773,774,775,776,777,339,778,779,780,781,782,783,784,100,785,786,787,788,789,340,790,791,792,793,794,795,796,101,797,798,799,800,801,802,387,388,803,804,389,390,805,806,807,808,809,810,102,811,812,813,341,814,815,816,817,818,819,820,821,822,391,392,393,823,824,103,825,826,827,828,829,394,395,830,831,396,397,832,833,834,835,836,837,104,838,839,840,342,841,842,843,844,845,846,847,848,849,398,399,850,851,852,105,853,854],"tindex":"f278da9c-13ab-11e5-a583-ebcbf10ed438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f278da9d-13ab-11e5-a583-f34b6d52627e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[564,560,573,569],"tindex":"f278da9e-13ab-11e5-a583-b988ceba7f72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f27901af-13ab-11e5-a583-cd0066bb7937","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[32,71,72],"tindex":"f27901b0-13ab-11e5-a583-c36b3cfbce63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"status":-1},{"failures":[855,424,856,857,858,859,427,860,437,540,536,861,862,30,863,864,865,866,152,141,153,154,452,554,550,867,868,52,62,65,71,72],"tindex":"f27901b1-13ab-11e5-a583-239b9700065a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"hashIndex","index":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f27901b2-13ab-11e5-a583-4172c08c275c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[869,870,871,872,873,614,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,193,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939],"tindex":"f27901b3-13ab-11e5-a583-8172b8f0f5bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"isLocked","nextCalled":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[940],"tindex":"f27901b4-13ab-11e5-a583-c791b7b0582a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:119","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} else {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-1},{"failures":[15,23],"tindex":"f27901b5-13ab-11e5-a583-33332f4c5a7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[941],"tindex":"f27901b6-13ab-11e5-a583-8f0ddd75e86c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[942,579,580,943,581,582,583,944,584,585,586,587,588,945,946,947,948,949,950,951,952,589,953,590,591,954,955,956,957,958,959,960],"tindex":"f27901b7-13ab-11e5-a583-5fae8ef78704","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[9,10,11,12,13,14,402,15,961,962,16,17,18,19,20,21,22,405,23,24,25,26,963,964],"tindex":"f27928c8-13ab-11e5-a583-ad91e446d5d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"nodeCount","index":"nodeCount","beyond":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"f27928c9-13ab-11e5-a583-4b879b9677ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[902,903,904,905,906,907,908,965,966,909,910,911,912,967,968,913,914,969,970,971,915,972,973,916,974,917,975,918,919,920,921,976,922,923,924,925,926,927,977,978],"tindex":"f27928ca-13ab-11e5-a583-99acd11efc2c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}