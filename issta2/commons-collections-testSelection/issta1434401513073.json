{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":120,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":514,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":327,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":429,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":582,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":84,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":805,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":200,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":256,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":199,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":400,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":105,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":88,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":532,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":352,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":212,"org.apache.commons.collections4.CollectionUtilsTest.get":631,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":816,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":176,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":600,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":772,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":811,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":571,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":396,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":480,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":436,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":340,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":708,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":523,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":662,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":264,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":329,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":498,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":595,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":300,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":506,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":784,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":827,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":796,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":847,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":68,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":251,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.CollectionUtilsTest.intersection":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":410,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":641,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":332,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":442,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":466,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":434,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":870,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":356,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":844,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":273,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":393,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":77,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":775,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":360,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":687,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":453,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":865,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":588,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":782,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":15,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":137,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":408,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":656,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":698,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":131,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":587,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":697,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":768,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":139,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":859,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":479,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":478,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":291,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":476,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":524,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":720,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":380,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":423,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":538,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":681,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":745,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":818,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":574,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":448,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":724,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":594,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":618,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":339,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":836,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":333,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":464,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":652,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":607,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":857,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":714,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":668,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":409,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":863,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":660,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":308,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":452,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":803,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":647,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":826,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":91,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":484,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":8,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":134,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":645,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":115,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":313,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":344,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":515,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":203,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":536,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":795,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":373,"org.apache.commons.collections4.IteratorUtilsTest.testToList":666,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":721,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":371,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":703,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":111,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":323,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":771,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":530,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":610,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":27,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":454,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":535,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":482,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":534,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":718,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":767,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":815,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":825,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":262,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":499,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":856,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":626,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":783,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":321,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":614,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":680,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":762,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":661,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":709,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":386,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":592,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":872,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":546,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":477,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":507,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":875,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":599,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":494,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":747,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":748,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":315,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":609,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":746,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":45,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":537,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":841,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":807,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":644,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":658,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":439,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":739,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":461,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":182,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":677,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":223,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":740,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":733,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":832,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":213,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":842,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":715,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":678,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":728,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":840,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":766,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":235,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":608,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":664,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":277,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":127,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":51,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":272,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":695,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":504,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":505,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":716,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":776,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":186,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":295,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":358,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":290,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":98,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":303,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":693,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":651,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":528,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":653,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":231,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":159,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":628,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":738,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":874,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":180,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":307,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":655,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":620,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":395,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":545,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":565,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":575,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":741,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":637,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":351,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":781,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":156,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":758,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":757,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":754,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":756,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":755,"org.apache.commons.collections4.list.TreeListTest.testBug35258":837,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":359,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":559,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":474,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":338,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":694,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":719,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":384,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":822,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":562,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":561,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":560,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":793,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":375,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":197,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":194,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":769,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":366,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":800,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":798,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":475,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":855,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":691,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":778,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":6,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":520,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":851,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":593,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":731,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":702,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":773,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":241,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":792,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":791,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":790,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":632,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":287,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":19,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":469,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":140,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":547,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":206,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":302,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":602,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":611,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":183,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":810,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":278,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":684,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":226,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":158,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":814,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":861,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":512,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":3,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":215,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":529,"org.apache.commons.collections4.map.Flat3MapTest.testToString":753,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":829,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":629,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":364,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":104,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":319,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":490,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":712,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":817,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":263,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":604,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":208,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":217,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":576,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":288,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":550,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":404,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":852,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":314,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":493,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":121,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":468,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":819,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":831,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":808,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":761,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":862,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":581,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":812,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":869,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":568,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":635,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":280,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":119,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":407,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":204,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":286,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":743,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":326,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":189,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":744,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":225,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":441,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":843,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":612,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":659,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":446,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":670,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":349,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":839,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":32,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":726,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":495,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":418,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":416,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":252,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":700,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":276,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":243,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":539,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":38,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":627,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":259,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":97,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":149,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":601,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":207,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":222,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":643,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":283,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":34,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":711,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":809,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":802,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":584,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":491,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":654,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":229,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":242,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":218,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":473,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":621,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":786,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":779,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":306,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":187,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":21,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":679,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":330,"org.apache.commons.collections4.CollectionUtilsTest.union":633,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":66,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":544,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":331,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":415,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":623,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":750,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":751,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":799,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":405,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":657,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":411,"org.apache.commons.collections4.list.TreeListTest.testRemove":833,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":868,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":397,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":749,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":713,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":25,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":770,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":567,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":760,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":566,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":267,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":63,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":298,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":173,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":845,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":725,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":152,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":867,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":419,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":541,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":674,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":309,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":692,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":440,"org.apache.commons.collections4.ListUtilsTest.testSubtract":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":570,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":133,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":727,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":858,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":552,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":165,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":617,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":780,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":403,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":642,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":723,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":148,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":639,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":824,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":540,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":337,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":430,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":823,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":132,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":764,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":717,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":722,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":804,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":427,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":285,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":752,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":185,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":579,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":834,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":543,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":650,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":312,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":443,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":838,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":179,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":444,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":297,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":501,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":92,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":605,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":462,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":385,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":707,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":125,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":455,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":227,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":124,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":548,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":569,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":328,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":806,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":742,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":850,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":503,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":363,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":265,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":522,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":734,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":216,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":71,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":472,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":625,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":580,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":517,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":518,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":729,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":151,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":622,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":219,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":445,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":853,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":432,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":860,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":846,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":683,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":47,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":542,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":563,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":320,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":341,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":304,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":696,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":672,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":640,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":350,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":636,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":141,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":606,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":114,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":688,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":630,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":527,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":228,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":261,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":378,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":458,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":343,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":730,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":589,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":854,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":777,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":221,"org.apache.commons.collections4.CollectionUtilsTest.isFull":759,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":318,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":669,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":422,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":828,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":732,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":578,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":254,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":835,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":271,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":250,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":160,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":135,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":701,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":774,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":365,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":11,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":685,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":873,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":820,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":345,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":247,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":74,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":676,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":90,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":310,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":710,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":447,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":201,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":586,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":821,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":689,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":866,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":785,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":424,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":412,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":284,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":686,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":801,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":502,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":737,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":577,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":765,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":598,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":596,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":435,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":848,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":706,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":787,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":788,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":789,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":813,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":211,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":205,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":591,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":603,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":797,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":399,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":317,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":347,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":342,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":293,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":301,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":585,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":516,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":590,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":665,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":239,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":195,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":450,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":649,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":736,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":624,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":161,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":646,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":322,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":198,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":460,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":459,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":316},"transformations":[{"failures":[],"tindex":"5a0a087f-13a0-11e5-8b65-473aa93e9fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[],"tindex":"5a0a2f90-13a0-11e5-8b65-77dcfcfd3080","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.next()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"5a0a2f91-13a0-11e5-8b65-4363f121eeac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"5a0a2f92-13a0-11e5-8b65-73f14e9bf44d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[],"tindex":"5a0a56a3-13a0-11e5-8b65-39c181d3b95a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1077","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"current","root":"entry","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5a0a56a4-13a0-11e5-8b65-c1db65b7de83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"parent","previous":"h","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5a0a56a5-13a0-11e5-8b65-2dea7260af56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":0},{"failures":[],"tindex":"5a0a7db6-13a0-11e5-8b65-c53c260e914f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"5a0c0457-13a0-11e5-8b65-238583ef66e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"5a0c0458-13a0-11e5-8b65-c7aaa2bc4ab6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(K, V)"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"5a0c0459-13a0-11e5-8b65-9fbbcfd8772f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"size","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"5a0c045a-13a0-11e5-8b65-afa47c3090c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"threshold","expectedModCount":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[204,205],"tindex":"5a0c2b6b-13a0-11e5-8b65-cf39f9d31f04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:384","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size());\n    java.util.Collection<V>.addAll(java.util.Collection<V>);\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.addAll(java.util.Collection<V>);\n}"},"status":-1},{"failures":[],"tindex":"5a0c2b6c-13a0-11e5-8b65-959bd2155198","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1098","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"5a0c2b6d-13a0-11e5-8b65-979e69dffd87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-1},{"failures":[105,206,207,208,209,210,211,212,213,110],"tindex":"5a0c2b6e-13a0-11e5-8b65-b30fb7f28685","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5a0c527f-13a0-11e5-8b65-c1b50cef4095","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5a0c5280-13a0-11e5-8b65-915e14f8cc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key1","entry":"previous","key2":"key3","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[214,215],"tindex":"5a0c5281-13a0-11e5-8b65-4bcf1e18a732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"5a0c5282-13a0-11e5-8b65-27ce4e578f47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"5a0c5283-13a0-11e5-8b65-93dbe3581331","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[],"tindex":"5a0c7894-13a0-11e5-8b65-a3050045d6cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.NodeCachingLinkedList<E>.isCacheFull()) {\n    return ;\n} "},"status":0},{"failures":[244,245,246,247,248,249,250,251,252,253,254,255],"tindex":"5a0c7895-13a0-11e5-8b65-4fcadaf546c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"5a0c7896-13a0-11e5-8b65-49fd5683e85a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[256,257,258,259,205,260,261,262,263,264,265,266,267,268,269],"tindex":"5a0c7897-13a0-11e5-8b65-13e8de4ff923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"tindex":"5a0c7898-13a0-11e5-8b65-b5c6ee6c071c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"5a0c7899-13a0-11e5-8b65-abc5945a0eaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"5a0c789a-13a0-11e5-8b65-a9bdb1bc855e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:386","type":"CtReturnImpl","sourcecode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))"},"status":-2},{"failures":[340,341,342,214,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,215,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"5a0c789b-13a0-11e5-8b65-e3dec57bb3f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"5a0c9fac-13a0-11e5-8b65-53f23b031057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>)"},"status":-2},{"failures":[],"tindex":"5a0c9fad-13a0-11e5-8b65-8b3d319d8738","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"parent","parent":"right","left":"current","root":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[270,271,272,273,274,276,277,278,279,434,435,436,290,291,292,293,294,296,297,298,299,437,438,439,440,441,442,443,444,445,446,447,448,300,301,302,303,304,306,307,308,309,449,450,451,452,453,310,311,312,313,314,316,317,318,319,454,320,321,322,323,324,326,327,328,329,455,456,330,331,332,333,334,336,337,338,339,457,216,218,222,223,225,458,459,228,229,230,232,236,237,239,460,461,242,243],"tindex":"5a0c9fae-13a0-11e5-8b65-979f00ef7f7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"5a0c9faf-13a0-11e5-8b65-a9552d934174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:90","type":"CtIfImpl","sourcecode":"if (java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\");\n} "},"status":-2},{"failures":[340,341,342,214,343,344,351,345,346,347,348,349,350,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,215,383,384,392,393,385,386,387,388,389,390,391,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"5a0c9fb0-13a0-11e5-8b65-e9b775cf1688","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-1},{"failures":[],"tindex":"5a0cc6c1-13a0-11e5-8b65-3bf03b4525dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"5a0cc6c2-13a0-11e5-8b65-9d8c1873cf35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[462,463,464,279,465,466,467,468,469,470,471,472,473,474,475,476,477,289,478,479,480,481,482,483,484,485,486,487,488,489,490,299,491,492,493,494,495,496,497,498,499,500,501,502,503,442,446,504,505,506,507,508,509,510,511,512,513,514,515,516,309,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,319,534,535,536,537,538,539,540,541,542,543,544,545,546,547,329,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,339,566,567,568,569,570,571,572,573,574,575,576,221,222,226,227,235,236,240,241],"tindex":"5a0cc6c3-13a0-11e5-8b65-35fae2545c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"5a0cc6c4-13a0-11e5-8b65-fbd1d4ded1bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"5a0cc6c5-13a0-11e5-8b65-ef76c2317e45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[408,412,425,426,429,430,431,432,433],"tindex":"5a0cc6c6-13a0-11e5-8b65-6dfac9a99f32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"5a0cc6c7-13a0-11e5-8b65-451973c44bb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-2},{"failures":[],"tindex":"5a0cc6c8-13a0-11e5-8b65-6f2f0f8c15df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"indent","currentIndex":"indent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"5a0cedd9-13a0-11e5-8b65-b16a3a0279db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"5a0cedda-13a0-11e5-8b65-b559842b7253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5a0ceddb-13a0-11e5-8b65-6dc466815a57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":0},{"failures":[577,115,578,116,579,121,580,124,581,126,129,161,582,162,583,167,584,170,585,172,175],"tindex":"5a0ceddc-13a0-11e5-8b65-19125c0784ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"5a0ceddd-13a0-11e5-8b65-270f62fc0278","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"variableMap":{"inverse":"reverseMap","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[408,412],"tindex":"5a0cedde-13a0-11e5-8b65-719a895747ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"5a0ceddf-13a0-11e5-8b65-3350e0191996","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:280","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[586,447,448,514,515,516,587,300,301,588,302,303,304,589,305,306,590,307,591,592,308,309,593,594,595,596,597,598,517,518,449,519,599,600,520,521,601,602,522,523,524,525,526],"tindex":"5a0cede0-13a0-11e5-8b65-550d18958e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"size","beyond":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[343,344,353,354,356,357,358,359,360,361],"tindex":"5a0d14f1-13a0-11e5-8b65-cb94ad189bb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"5a0d14f2-13a0-11e5-8b65-9961a0048e35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[603],"tindex":"5a0d14f3-13a0-11e5-8b65-cf15c04ee935","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[604,605,606],"tindex":"5a0d14f4-13a0-11e5-8b65-8dccba9cd62b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[],"tindex":"5a0d14f5-13a0-11e5-8b65-2fa6a040b6d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"5a0d14f6-13a0-11e5-8b65-032563a7b5fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"status":-2},{"failures":[607,608,609,610,611,612,613,614,615,616,617,618],"tindex":"5a0d14f7-13a0-11e5-8b65-1fc1d6a7dbff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[619,620,621,622,623,624,625,626,51,627,628,629,52,630,631,632,633,634,635],"tindex":"5a0d14f8-13a0-11e5-8b65-c5d0ba5432ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[636,637],"tindex":"5a0d14f9-13a0-11e5-8b65-7f5a317b9720","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"lastUsedIterator":"currentIterator","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":-1},{"failures":[638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662],"tindex":"5a0d14fa-13a0-11e5-8b65-9ba3cce89ba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[663,664,665,666,667,618],"tindex":"5a0d3c0b-13a0-11e5-8b65-bf4bf7e6aec3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"5a0d3c0c-13a0-11e5-8b65-995c6fa0ecea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[668,669,670,671,672,673,70,674,675,43,676,677,678,679,44,680,681],"tindex":"5a0d3c0d-13a0-11e5-8b65-594243775bdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[682,683,684,685],"tindex":"5a0d3c0e-13a0-11e5-8b65-e1dd2467a9a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")"},"status":-1},{"failures":[],"tindex":"5a0d3c0f-13a0-11e5-8b65-959d5905dd85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":0},{"failures":[340,341,214,343,344,342,347,348,349,350,351,345,346,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,215,383,384,382,387,388,389,390,391,392,393,686,385,386,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433],"tindex":"5a0d3c10-13a0-11e5-8b65-87f1f9cfe884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5a0d3c11-13a0-11e5-8b65-619492e53512","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"5a0d3c12-13a0-11e5-8b65-176eddfaa7f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1218","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,672,722,723,724,725],"tindex":"5a0d3c13-13a0-11e5-8b65-798faf64a08a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[726,104,727,105,206,728,729,730,209,210,211,731,106,577,732,733,734,735,736,107,108,737,738,109,739,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,740,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,741,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"5a0d6324-13a0-11e5-8b65-8fc69177239c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[742],"tindex":"5a0d6325-13a0-11e5-8b65-67aaae170a86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:528","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"5a0d6326-13a0-11e5-8b65-bd3a8f4709ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"5a0d6327-13a0-11e5-8b65-1de5406f5d7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"status":-2},{"failures":[743,744,586,447,745,448,746,747,748,749,750,751,752,753,514,515,516,587,300,301,588,302,303,304,589,305,306,590,307,591,592,308,309,593,594,595,596,597,598,517,518,449,519,599,600,520,521,601,602,522,523,524,525,526],"tindex":"5a0d6328-13a0-11e5-8b65-41fa100c5b4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[754,755,756,757,758,759,760],"tindex":"5a0d6329-13a0-11e5-8b65-a717a61567c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"5a0d8a3a-13a0-11e5-8b65-9d1764ba7076","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[353,354,356,357,358,360,361,398,399,401,402,403,405,406,408,411,412],"tindex":"5a0d8a3b-13a0-11e5-8b65-9519cdae24cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806],"tindex":"5a0d8a3c-13a0-11e5-8b65-4d1b5e16200f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"endIndex2","listSize":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[638,807,639,640,641,808,642,643,809,644,645,810,646,647,648,811,812,813,622,649,650,651,652,653,654,655,656,814,657,658,659,660,815,661,662,816,817],"tindex":"5a0d8a3d-13a0-11e5-8b65-f7c8834db10f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-1},{"failures":[104,818,819,122,740,139,141,142,144,150,168,741,187,189,190,192,198],"tindex":"5a0d8a3e-13a0-11e5-8b65-4b918eb8f372","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"5a0e9baf-13a0-11e5-8b65-9f30659d0626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":-2},{"failures":[],"tindex":"5a0e9bb0-13a0-11e5-8b65-d90f181cc550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"newCapacity","lengthInBits":"threshold","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[820,821,822,823,824,825,826,827,828,829],"tindex":"5a0e9bb1-13a0-11e5-8b65-1fe318744b7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"variableMap":{"hash":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:430","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode()"},"status":-1},{"failures":[],"tindex":"5a0e9bb2-13a0-11e5-8b65-fd4ec7800229","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"h","previous":"p","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[727,206,729,830,732,733,734,735,736,739,831,832,819,111,112,113,114,115,127,140,145,146,147,148],"tindex":"5a0e9bb3-13a0-11e5-8b65-3346858eb00d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"5a0ec2c4-13a0-11e5-8b65-0f05a1af401b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"length","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"5a0ec2c5-13a0-11e5-8b65-5325c75b6fee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"object","i":"length","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"5a0ec2c6-13a0-11e5-8b65-e5d186fe41e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super E>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super E>[][int].evaluate(E)) == true) {\n        org.apache.commons.collections4.Closure<? super E>[][int].execute(E);\n        return ;\n    } \n}"},"status":-2},{"failures":[833,834,835,836,837,838,839,840,841,842],"tindex":"5a0ec2c7-13a0-11e5-8b65-0b87e1bf28bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"5a0ec2c8-13a0-11e5-8b65-590703e991e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to","replacement":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[843,823,827,844],"tindex":"5a0ec2c9-13a0-11e5-8b65-d1d9d6767828","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"5a0ec2ca-13a0-11e5-8b65-5584e04ecca0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[244,245,246,247,248,250,251,252,253,254,255],"tindex":"5a0ec2cb-13a0-11e5-8b65-2749eb9f40a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806],"tindex":"5a0ec2cc-13a0-11e5-8b65-75e5714e3405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"5a0ec2cd-13a0-11e5-8b65-d19b5137eaf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-2},{"failures":[769,770,772,773,774,777,779,782,783,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,310,311,312,313,314,316,317,318,319,869,870,871,872,873,874,875,320,321,322,323,324,326,327,328,329],"tindex":"5a0ec2ce-13a0-11e5-8b65-77578ebd3c85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"5a0ee9df-13a0-11e5-8b65-a7eeced2dee6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}