{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":343,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":392,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":81,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":1,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":351,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":492,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":521,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":439,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":502,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":147,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":573,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":132,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":418,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":119,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":130,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":347,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":579,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":580,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testEmptyIterator":141,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":526,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":414,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":245,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":448,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":536,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":352,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":229,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":232,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":455,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":214,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":441,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":110,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":485,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":298,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testIterator":140,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":210,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":201,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":296,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":138,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":524,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":473,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":279,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":194,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":547,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":246,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":111,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":398,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":431,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":374,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":256,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":424,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":530,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":582,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":384,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":523,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":206,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":264,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":348,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":428,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":360,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":446,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":434,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":561,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":231,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":322,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":198,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":452,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":157,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":496,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":397,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":74,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":522,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":20,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":390,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":161,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":317,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":427,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":353,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":560,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":139,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":191,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":575,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":459,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":507,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":450,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":508,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":187,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":188,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":189,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":576,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":376,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":339,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":383,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":572,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":87,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":109,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":464,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":465,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":463,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":176,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":554,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":203,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":333,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":491,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":223,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":540,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":62,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":135,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":388,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":396,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":207,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":354,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":534,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":506,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":404,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":124,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":426,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":461,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":460,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":400,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":311,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":462,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":220,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":219,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":218,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":512,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":544,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":106,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":494,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":539,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":9,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":136,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":31,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":291,"org.apache.commons.collections4.map.LRUMapTest.testClone":271,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":432,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":503,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":517,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":32,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":73,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":103,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":365,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":391,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":273,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":466,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":516,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":402,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":209,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":101,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":379,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":532,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":556,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":350,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":433,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":321,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":77,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":331,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":553,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":290,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":211,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":501,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":342,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":409,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":113,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":99,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":146,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":151,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":133,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":405,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":195,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":228,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":563,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":570,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":338,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":515,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":312,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":471,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":43,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":366,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":486,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":277,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":301,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":59,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":126,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":244,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":349,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":458,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":71,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":205,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":302,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":558,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":489,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":504,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":295,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":242,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":241,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":330,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":519,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":470,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":300,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":537,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":557,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":144,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":234,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":480,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":150,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":125,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":541,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":181,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":577,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":257,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":268,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":64,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":8,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":275,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":97,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":443,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":120,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":477,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":199,"org.apache.commons.collections4.map.HashedMapTest.testClone":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":478,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":327,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":158,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":303,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":364,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":362,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":292,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":82,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":200,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":22,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":202,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":272,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":145,"org.apache.commons.collections4.CollectionUtilsTest.addAllForEnumeration":335,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":495,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":227,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":23,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":88,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":238,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":237,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":449,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":239,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":555,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":226,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":65,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":267,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":435,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":407,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":410,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":375,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":328,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":380,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":529,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":562,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":24,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":403,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":511,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":514,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":173,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":417,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":281,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":363,"org.apache.commons.collections4.map.LinkedMapTest.testClone":225,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":98,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":574,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":420,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":451,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testFullIterator":142,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":177,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":270,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":212,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":250,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":313,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":372,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":474,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":559,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":334,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":221,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":337,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":152,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":143,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":370,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":498,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":274,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":387,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":12,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":11,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":306,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":382,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":83,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":355,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":454,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":453,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":344,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":389,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":493,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":538,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":545,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":416,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":336,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":168,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":166,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":309,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":165,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":413,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":442,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":430,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testEmptyIterator":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":535,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":308,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":29,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":456,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":549,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":367,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":386,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":368,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":369,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":261,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":346,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":567,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":543,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":440,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":19,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":258,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":16,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":513,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":564,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":116,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":318,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":444,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":361,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":92,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":518,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":91,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":251,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":566,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":395,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":325,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":263,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":359,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":490,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":282,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":186,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":411,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":483,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":437,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":505,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":222,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":280},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"cad54b35-13e6-11e5-b2d7-57f86c78d252","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"cad74706-13e6-11e5-b2d7-919a131c4cf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":0},{"failures":[],"tindex":"cad76e17-13e6-11e5-b2d7-5d4d8bf2b0f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"status":-2},{"failures":[],"tindex":"cad76e18-13e6-11e5-b2d7-fddf7131046d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[6,7,8],"tindex":"cad76e19-13e6-11e5-b2d7-4ddf87af5929","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[9,10],"tindex":"cad76e1a-13e6-11e5-b2d7-ab43d7b79a56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"cad76e1b-13e6-11e5-b2d7-5fa489a0da8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"cad87f8c-13e6-11e5-b2d7-c557c5a39db6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"cad87f8d-13e6-11e5-b2d7-5bf156346123","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[54],"tindex":"cad8a69e-13e6-11e5-b2d7-aba02602bbee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[55,56],"tindex":"cad8a69f-13e6-11e5-b2d7-d762a5c1fd62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"cad8a6a0-13e6-11e5-b2d7-db9e71c69f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[],"tindex":"cad8a6a1-13e6-11e5-b2d7-576b6079436a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[57,58,59,60,61,62,28],"tindex":"cad8a6a2-13e6-11e5-b2d7-a5773443541b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[63,64,65,66],"tindex":"cad8a6a3-13e6-11e5-b2d7-095a5947b6f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"cad8a6a4-13e6-11e5-b2d7-175470b047a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"cad8cdb5-13e6-11e5-b2d7-efef95804d8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"parent","rightChild":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[67,68,69,70,71,72],"tindex":"cad8cdb6-13e6-11e5-b2d7-af93b617aa2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start2","n":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[73,74],"tindex":"cad8cdb7-13e6-11e5-b2d7-c71a291a8aa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[75,76],"tindex":"cad8cdb8-13e6-11e5-b2d7-79bb714422f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"cad8cdb9-13e6-11e5-b2d7-a55dbeae8ec3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[120,121,122,123],"tindex":"cade24ea-13e6-11e5-b2d7-5bfc5e6ba7b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"cade24eb-13e6-11e5-b2d7-17e785891699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"cade24ec-13e6-11e5-b2d7-693714014ff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"cade4bfd-13e6-11e5-b2d7-7d62bfabd85f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2013","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:257","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<?>.hasNext()) && (java.util.Iterator<?>.hasNext())) {\n    java.lang.Object = java.util.Iterator<?>.next();\n    java.lang.Object = java.util.Iterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"cade4bfe-13e6-11e5-b2d7-59adb47c2cca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"cade4bff-13e6-11e5-b2d7-bb113dbb7c42","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[136,137,138,139,140,141,142,143],"tindex":"cade4c00-13e6-11e5-b2d7-d1ad9c007886","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:112","type":"CtIfImpl","sourcecode":"if (((int) == (int)) || ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator)) {\n    return java.util.Iterator<? extends E>.hasNext();\n} "},"status":-1},{"failures":[54,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172],"tindex":"cade4c01-13e6-11e5-b2d7-b91e26457924","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"h":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"cade7312-13e6-11e5-b2d7-cfcc611de29a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"variableMap":{"methodName":"org.apache.commons.collections4.MapUtils.INDENT_STRING"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":0},{"failures":[],"tindex":"cade7313-13e6-11e5-b2d7-17579a8ecdf6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,12,14,18,19,20,21,22,23,26,28,31,32,35,36,37,38,39,40,41,50,51,52,53,225,226,227,228,229,230,0,231,232,233,1,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,3,278,279,280,4,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305],"tindex":"cade9a24-13e6-11e5-b2d7-c3ebdecb091a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327],"tindex":"cade9a25-13e6-11e5-b2d7-9dcbc7f04a90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-1},{"failures":[328,329],"tindex":"cade9a26-13e6-11e5-b2d7-5de9dcf893c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[63,66],"tindex":"cae26ab7-13e6-11e5-b2d7-c145c060d6ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"a","b":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cae26ab8-13e6-11e5-b2d7-552b2fb9430f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key1","i":"hashCode","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[330,94,116],"tindex":"cae26ab9-13e6-11e5-b2d7-5710615ca171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"cae26aba-13e6-11e5-b2d7-49bfc8536883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[331,332],"tindex":"cae26abb-13e6-11e5-b2d7-89dc0d7a12c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[11,333,57,58,59,60,61,62,28,31],"tindex":"cae291cc-13e6-11e5-b2d7-f5b1460ede3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[334,146],"tindex":"cae291cd-13e6-11e5-b2d7-ebe8c34ae517","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[335],"tindex":"cae291ce-13e6-11e5-b2d7-657103f92be2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1139","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<? extends C>.hasMoreElements()) {\n    boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement());\n}"},"status":-1},{"failures":[336],"tindex":"cae291cf-13e6-11e5-b2d7-114e7bc5aa9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[],"tindex":"cae291d0-13e6-11e5-b2d7-9d080b91fbb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"cae291d1-13e6-11e5-b2d7-db60131b77ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"cae2b8e2-13e6-11e5-b2d7-311b35276264","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"cae2b8e3-13e6-11e5-b2d7-c973412c9ff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The closure array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cae2b8e4-13e6-11e5-b2d7-5d9f6ee5366c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"status":0},{"failures":[],"tindex":"cae2b8e5-13e6-11e5-b2d7-f1f7c7c4d204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[337],"tindex":"cae2b8e6-13e6-11e5-b2d7-df530b72bf56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtIfImpl","sourcecode":"if (java.util.SortedSet<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.SortedSet<E>;\n} "},"status":-1},{"failures":[],"tindex":"cae2dff7-13e6-11e5-b2d7-a57f14bb3fa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"cae2dff8-13e6-11e5-b2d7-37d099abb146","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"cae2dff9-13e6-11e5-b2d7-51dd218ab2c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[365,366],"tindex":"cae3070a-13e6-11e5-b2d7-55adfea50ffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[367,368,369,370,371,372,373,374,375],"tindex":"cae3070b-13e6-11e5-b2d7-13e06d3f1c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"cae3070c-13e6-11e5-b2d7-13d0381ffbf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"cae3070d-13e6-11e5-b2d7-83f8041826ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[54,144,147,148,145,146,149,150,151,376,152,153,377,154,155,156,157,158,159,378,160,379,380,161,162,381,382,383,163,164,165,166,167,168,169,384,385,170,386,387,388,171,389,390,391,172],"tindex":"cae3070e-13e6-11e5-b2d7-51621b4990e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[392,393,394,395],"tindex":"cae32e1f-13e6-11e5-b2d7-0b82b7c4cbee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[345,346,348,349,350,396,352,353,354,355,358,359,360,361,362,397,364],"tindex":"cae32e20-13e6-11e5-b2d7-81936d052493","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"cae32e21-13e6-11e5-b2d7-a79797a448c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[398,399,400,401,402,403,404,405,406,407],"tindex":"cae32e22-13e6-11e5-b2d7-55771e0fe9fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"cae32e23-13e6-11e5-b2d7-1f4db3c89095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-2},{"failures":[408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437],"tindex":"cae32e24-13e6-11e5-b2d7-0b8385db9340","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"cae35535-13e6-11e5-b2d7-09000ad3a6a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:156","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator());\n}"},"status":-2},{"failures":[438],"tindex":"cae35536-13e6-11e5-b2d7-5dfec61cb2be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"status":-1},{"failures":[319,320,439,321,322,323,324,440,325,326,327,441,442,443,444,445],"tindex":"cae35537-13e6-11e5-b2d7-172d158c1f7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":-1},{"failures":[],"tindex":"cae35538-13e6-11e5-b2d7-91802b777725","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"cae37c49-13e6-11e5-b2d7-7700a6189c5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:312","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"cae37c4a-13e6-11e5-b2d7-73552c4bf9cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,294,295,296,297,298,299,300,301,302,303,304,473,474,475,476,477,478,479,480,481,482,483],"tindex":"cae37c4b-13e6-11e5-b2d7-63abd82e9e52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"cae37c4c-13e6-11e5-b2d7-0712df9023a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[398,399,400,401,402,403,404,405,406,407],"tindex":"cae37c4d-13e6-11e5-b2d7-d743b3ee2f4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[67,68,69,70,71,72],"tindex":"cae37c4e-13e6-11e5-b2d7-6fe0aba70456","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start2","end2":"end2","this":"this","i":"end1","end1":"start1","k":"end1","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[484,485],"tindex":"cae3a35f-13e6-11e5-b2d7-856c93bfc206","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1149","type":"CtIfImpl","sourcecode":"if ((int) != (java.util.Map<?, ?>.size())) {\n    return false;\n} "},"variableMap":{"other":"other","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[319,320,439,321,322,323,440,326,327,441,442,486,445,487],"tindex":"cae3a360-13e6-11e5-b2d7-e1a511f1e86e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[488,307,489,310,311,312,313,314,316,319,320,439,321,322,323,324,440,325,326,327],"tindex":"cae3a361-13e6-11e5-b2d7-a3c9d4bc0a87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"variableMap":{"list":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[490,491,492,82,86,87,88,89,91,96,103,108,109,110,111,113,118],"tindex":"cae3a362-13e6-11e5-b2d7-e3d8c194e115","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-1},{"failures":[493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509],"tindex":"cae3a363-13e6-11e5-b2d7-13efb08d0b9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[510],"tindex":"cae3ca74-13e6-11e5-b2d7-e19d9b668609","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-1},{"failures":[511,512,513,514,515,516],"tindex":"cae3ca75-13e6-11e5-b2d7-dbe9260effc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"object","o":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"cae3ca76-13e6-11e5-b2d7-a10ca1264bbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"cae3ca77-13e6-11e5-b2d7-67c087719c72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[517,518,519,520,521,330,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547],"tindex":"cae3ca78-13e6-11e5-b2d7-fdbf741cdda0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-1},{"failures":[54,144,145,146,147,148,149,150,151,376,152,153,377,154,155,156,157,158,159,378,160,379,380,161,162,381,382,383,163,164,165,166,167,168,169,384,385,170,386,387,388,171,389,390,391,172],"tindex":"cae3f189-13e6-11e5-b2d7-a7531cc4bd47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"variableMap":{"f":"f","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"endIndex2","i":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH","k":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[548,9,345,346,348,349,350,396,352,353,354,355,549,550,551,552,10,358,359,360,361,362,397,364],"tindex":"cae3f18a-13e6-11e5-b2d7-1fc8d866db05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[520,553,554,555,556,78,79,80,81,82,83,84,85,557,558,559,560,87,88,89,90,91,92,93,94,95,561,96,97,562,563,564,565,566,98,99,100,101,102,103,104,105,106,567,568,107,569,570,109,110,111,112,113,114,115,116,117,571,118,119],"tindex":"cae3f18b-13e6-11e5-b2d7-4d4b26afb853","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:221","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n}"},"status":-1},{"failures":[],"tindex":"cae3f18c-13e6-11e5-b2d7-e7e8ff4509ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:255","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    int++;\n} else {\n    int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n}"},"status":0},{"failures":[],"tindex":"cae3f18d-13e6-11e5-b2d7-9d4cdd7a1875","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:329","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[180,572,208,573,23,231,574,453,575,254,576,278,577,299,578],"tindex":"cae4189e-13e6-11e5-b2d7-415d699e26ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[334,579,580,581,582,583,149,150,151,162,166,167,386,389],"tindex":"cae4189f-13e6-11e5-b2d7-759c449438cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"cae418a0-13e6-11e5-b2d7-ff73ac5075a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"variableMap":{"chainExhausted":"result","currentIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"cae418a1-13e6-11e5-b2d7-2306de41a332","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1150","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[334],"tindex":"cae418a2-13e6-11e5-b2d7-d5ebf6a53804","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"cae43fb3-13e6-11e5-b2d7-9f5cb26a4375","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1184","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"node","y":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"cae43fb4-13e6-11e5-b2d7-b7f267ecc1a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"parent","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"cae466c5-13e6-11e5-b2d7-c561e1c8b042","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","leftChild":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"cae466c6-13e6-11e5-b2d7-bd45b87ad74e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"h","buckets":"key2","length":"h","locks":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}