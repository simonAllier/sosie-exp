{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":297,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":716,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":89,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":210,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":530,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":594,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":908,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":285,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":689,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":1041,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":944,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":123,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":373,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":303,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":641,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":965,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":154,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":275,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":342,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":663,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":985,"org.apache.commons.collections4.CollectionUtilsTest.get":922,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":571,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":764,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":599,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":345,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":468,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":704,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":1007,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":926,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":949,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":428,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":338,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":881,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":353,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":61,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":513,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":301,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":332,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":845,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":822,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":323,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":199,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":543,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":928,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":804,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":442,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":256,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":565,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":551,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":1019,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":1031,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":847,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":746,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":775,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":969,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":653,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":254,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":307,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":472,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":237,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":238,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":608,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":278,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":680,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":791,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":859,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":942,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":546,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":451,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":829,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":798,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":660,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":1010,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":780,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":80,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":427,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":553,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":771,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":645,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":644,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":1017,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":95,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":646,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":960,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":512,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":581,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":550,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":634,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":638,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":635,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":1003,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":952,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":101,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":750,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":848,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":658,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":841,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":226,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":585,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":225,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":220,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":224,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":620,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":818,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":863,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":363,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":318,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":730,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":973,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":886,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":183,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":509,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":549,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":564,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":366,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":797,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":788,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":174,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":262,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":617,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":674,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":488,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":384,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":367,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":429,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":808,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":249,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":282,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":435,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":531,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":693,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":864,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":911,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":359,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":484,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":485,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":486,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":690,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":753,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":824,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":518,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":562,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":113,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":515,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":172,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":438,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":1038,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":142,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":648,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":856,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":229,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":394,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":380,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":474,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":720,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":652,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":140,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":343,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":713,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":440,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":334,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":687,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":241,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":683,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":211,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":910,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":192,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":294,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":776,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":1030,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":698,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":354,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":445,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":524,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":649,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":632,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":1006,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":419,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":370,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":964,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":456,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":834,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":158,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":157,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":227,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":377,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":1002,"org.apache.commons.collections4.map.LRUMapTest.testReset":421,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":385,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":499,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":802,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":257,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":1018,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":521,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":374,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":498,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":997,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testRemove":1042,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":561,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":197,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":23,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":650,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":570,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":431,"org.apache.commons.collections4.map.LinkedMapTest.testReset":510,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":833,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":975,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":976,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":207,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":369,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":974,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":678,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":471,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":266,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":640,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":991,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":871,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":465,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":790,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":703,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":7,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":768,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":931,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":458,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":414,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":920,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":724,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":742,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":395,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":811,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":492,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":12,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":268,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":725,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":267,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":734,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":1001,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":541,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":149,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":368,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":932,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":611,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":800,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":270,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":624,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":497,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":953,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":700,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":709,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":869,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":35,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":812,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":93,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":883,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":187,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":675,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":188,"org.apache.commons.collections4.map.HashedMapTest.testClone":588,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":504,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":900,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":288,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":1011,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":850,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":481,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":963,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":743,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":403,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":619,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":631,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":90,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":508,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":43,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":936,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":417,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":404,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":998,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":986,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":44,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":538,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":774,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":537,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":539,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":589,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":741,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":173,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":679,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":906,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":341,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":930,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":1016,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":899,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":898,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":895,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":894,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":897,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":896,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":891,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":205,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":893,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":544,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":892,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":691,"org.apache.commons.collections4.list.TreeListTest.testBug35258":263,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":514,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":344,"org.apache.commons.collections4.map.LinkedMapTest.testClone":511,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":950,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":793,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":480,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":904,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":289,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":489,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":502,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":503,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":169,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":155,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1028,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":697,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":955,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":358,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":820,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":603,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":432,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":422,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":826,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":133,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":825,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":181,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":600,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":1004,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":362,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":682,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":475,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":677,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":349,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":1035,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":1033,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":529,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":352,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":351,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":577,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":350,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":815,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":1013,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":754,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":642,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":945,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":563,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":853,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":1008,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":433,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":152,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":719,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":1027,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":1026,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":851,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":1025,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":83,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":496,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":32,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":868,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":759,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":240,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":405,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":102,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":198,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":554,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":573,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":371,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":62,"org.apache.commons.collections4.map.LRUMapTest.testLRU":420,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":127,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":852,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":670,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":781,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":816,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":601,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":231,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":988,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":659,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":752,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":810,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":396,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":452,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":731,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":696,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":718,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":842,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":831,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":702,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":106,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":832,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":299,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":592,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":745,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":287,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":450,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":995,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":909,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":418,"org.apache.commons.collections4.map.Flat3MapTest.testToString":970,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":347,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":76,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":751,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":987,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":248,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":633,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":915,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":717,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":390,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":612,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":464,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":933,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":457,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":202,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":913,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":304,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":441,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":912,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":996,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":587,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":375,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":695,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":505,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":877,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":694,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":522,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":526,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":31,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":971,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":528,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":128,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":972,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":132,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":398,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":372,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":672,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":410,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":839,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":821,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":476,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":838,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":688,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":16,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":828,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":462,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":805,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":846,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":661,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":872,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":760,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":339,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":265,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":500,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":787,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":234,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":890,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":312,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":311,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":578,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":460,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":597,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":416,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":162,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":271,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":1029,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":840,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":827,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":37,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":22,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":962,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":572,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":525,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":134,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":146,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":138,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":855,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":295,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":778,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":807,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":590,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":749,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":574,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":668,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":823,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":836,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":940,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":1037,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":250,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":875,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":959,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":990,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":279,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":364,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":527,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":232,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":755,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":637,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":402,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":961,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":923,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":415,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":477,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":391,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":434,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":535,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":705,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":292,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":1021,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":728,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":983,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":1014,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":558,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":478,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":929,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":126,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":726,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":779,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":925,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":108,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":786,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":956,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":469,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":876,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":794,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":665,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":310,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":470,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":835,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":849,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":978,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":618,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":979,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":1034,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":221,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":968,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":70,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":73,"org.apache.commons.collections4.list.TreeListTest.testRemove":259,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":993,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":657,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":583,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":582,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":379,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":977,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":584,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":814,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":736,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":756,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":487,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":1005,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":176,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":671,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":889,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":175,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":878,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":236,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":116,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":767,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":769,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":246,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":676,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":286,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":316,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":314,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":981,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":843,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":917,"org.apache.commons.collections4.map.LRUMapTest.testClone":423,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":994,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":598,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":213,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":536,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":934,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":903,"org.apache.commons.collections4.ListUtilsTest.testSubtract":880,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":179,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":378,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":830,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":609,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":854,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":111,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":1015,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":865,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":247,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":874,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":785,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":860,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":777,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":989,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":803,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":684,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":784,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":707,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":939,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":958,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":96,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":163,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":41,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":596,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":131,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":901,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":109,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":885,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":792,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":999,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":376,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":947,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":336,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":1039,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":322,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":576,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":980,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":120,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":542,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":260,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":921,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":493,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":13,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":264,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":439,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":884,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":862,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":844,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":284,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":595,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":14,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":813,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":967,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":948,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":397,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":185,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":773,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":393,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":861,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":747,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":966,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":92,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":540,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":148,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":201,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":408,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":534,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":533,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1040,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":5,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":586,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":346,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":639,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":506,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":627,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":389,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":916,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":943,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":673,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":722,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":732,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":951,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":882,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":437,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":982,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":924,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":215,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":276,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":255,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":623,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":98,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":783,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":392,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":230,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":447,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":666,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":165,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":758,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":761,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":626,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":806,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":857,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":171,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":708,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":763,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":643,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":602,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":520,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":459,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":656,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":330,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":789,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":927,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":555,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":727,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":858,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":103,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":269,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":25,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":711,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":744,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":685,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":401,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":361,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":765,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":710,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":762,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":479,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":333,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":795,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":556,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":383,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":613,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":801,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":907,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":1012,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":145,"org.apache.commons.collections4.CollectionUtilsTest.isFull":888,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":954,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":449,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":610,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":748,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":119,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":866,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":114,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":517,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":984,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":317,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":737,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":118,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":914,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":27,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":60,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":770,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":733,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":782,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":621,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":261,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":591,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":887,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":918,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":545,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":628,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":1009,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":348,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":706,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":935,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":669,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":723,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":436,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":548,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":217,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":547,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":357,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":837,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":655,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":1020,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":902,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":273,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":319,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":809,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":1036,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":186,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":757,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":491,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":272,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":992,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1000,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":568,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":566,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":604,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":614,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":1022,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":1023,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":1024,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":919,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":308,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":699,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":560,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":879,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":721,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":320,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":946,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":1032,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":605,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":606,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":461,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":712,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":337,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":331,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":867,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":692,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":552,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":938,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":647,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":212,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":937,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":905,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":559,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":281,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":122,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":424,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":957,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":94,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":667,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":799,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":616,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":467,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":454,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":651,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":664,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":141,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":662,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":607,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":523,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":473,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":413,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":772,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":941,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":425,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":494,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":870,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":873,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":400,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":444},"transformations":[{"failures":[],"tindex":"55d56a02-13a1-11e5-84c5-e13a354233f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"parent","rightChild":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"55d80213-13a1-11e5-84c5-fd560dfb28b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"value","type":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"55d80214-13a1-11e5-84c5-217a0941dc03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"55d80215-13a1-11e5-84c5-490fd947823c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"55d82926-13a1-11e5-84c5-4de486409c48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"55d82927-13a1-11e5-84c5-c73f71d2d7ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"55d82928-13a1-11e5-84c5-ef42101b94f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"55d93a99-13a1-11e5-84c5-39d2899a8c11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-2},{"failures":[40,41,42,10,14,21,43,44,45,28,32,39,46,47,48,49,50,51],"tindex":"55d93a9a-13a1-11e5-84c5-2dfcc2084adf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"55d93a9b-13a1-11e5-84c5-f9d3fedd0a2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"55d93a9c-13a1-11e5-84c5-a7216c1bc5c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:230","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"55d93a9d-13a1-11e5-84c5-0524a797b9ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key2","key5":"key1","previous":"next","hashCode":"hashCode","key3":"key1","key4":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"55d961ae-13a1-11e5-84c5-d336e0823b47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":0},{"failures":[],"tindex":"55d961af-13a1-11e5-84c5-bfaea7091d37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"55d961b0-13a1-11e5-84c5-5ddc029cda48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"55d961b1-13a1-11e5-84c5-831e78f833c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"55d961b2-13a1-11e5-84c5-71df6dd78d65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[134,135,136,137,138,139,140,141,142,143],"tindex":"55d961b3-13a1-11e5-84c5-bb2633281b30","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"55d961b4-13a1-11e5-84c5-bb33838a0cbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"variableMap":{"size":"relativePosition","cnt":"relativePosition","i":"relativePosition","locks":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"55d988c5-13a1-11e5-84c5-975f4c324994","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,5,11,16,187,188,18,21,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,45,217,218,219,220,221,222,223,224,23,34,225,226,36,39,227,228,229,230,231,232,233,234,235,236,237,238,239,48,240,241,242,243,244,245,246,247,248,249,250,251,252,51,253,254,255,256,257,258],"tindex":"55d988c6-13a1-11e5-84c5-cd49cd401b45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"55d988c7-13a1-11e5-84c5-a5c4eb80559e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"variableMap":{"path":"right","current":"current","lengthInBits":"lengthInBits","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[259,260,261,262,263,264,265,266,267,268],"tindex":"55d988c8-13a1-11e5-84c5-d1140d2769f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:891","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>, org.apache.commons.collections4.list.TreeList.AVLNode<E>)"},"variableMap":{"otherTreeMin":"root","s":"root","maxNode":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[269,270,271,272,273,274,275],"tindex":"55d988c9-13a1-11e5-84c5-1bfb5f04a8a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"55d988ca-13a1-11e5-84c5-69ef4e05be58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"55d988cb-13a1-11e5-84c5-cd1a60d6ddab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) != (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)) {\n    ((java.lang.ref.Reference<?>)(java.lang.Object)).clear();\n} "},"variableMap":{"parent":"normalMap","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","keyType":"key","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[276,277,278,279,142],"tindex":"55d9afdc-13a1-11e5-84c5-4d4d2d5b663d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"55d9afdd-13a1-11e5-84c5-a97623945daa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"55d9afde-13a1-11e5-84c5-e3f52e55beba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"newCapacity","start":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":-2},{"failures":[280,281,282,283,284,285],"tindex":"55d9afdf-13a1-11e5-84c5-7f34e107606b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"end2","index":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-1},{"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,65,66,303,67,68,69,304,70,71,305,72,306,307,73,74,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,75,76,343,77,78,79,344,80,81,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"55d9afe0-13a1-11e5-84c5-2b733b121a78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[365,366,367,368,369,370,371,372,373,374,375,376],"tindex":"55d9afe1-13a1-11e5-84c5-cf87d345ebdc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"55d9afe2-13a1-11e5-84c5-fd21f0656bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"55d9d5f3-13a1-11e5-84c5-5132f4b7d2ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"55d9d5f4-13a1-11e5-84c5-69b7045a290f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"55d9d5f5-13a1-11e5-84c5-c945ec39a29b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1159","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null"},"variableMap":{"next":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"55d9d5f6-13a1-11e5-84c5-138be73601cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"55d9fd07-13a1-11e5-84c5-f5b162e417c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"55d9fd08-13a1-11e5-84c5-c322fabd9728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:466","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"55d9fd09-13a1-11e5-84c5-69950481b301","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[281,280,282,283,284,285],"tindex":"55d9fd0a-13a1-11e5-84c5-71ac9cc6144c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"end1","expectedModCount":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[377,378,379,380,381,382,383,384,385,386],"tindex":"55d9fd0b-13a1-11e5-84c5-69c96f084d78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[387,388,144,389,390,391,392,393,394,145,146,395,396,397,398,147,399,148,400,401,402,403,404,405,406,407,408,149,150,409,410,411,412,151,413,152,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,153,154,155,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,156,450,451,452,453,454,455,157,158,456,159,457,458,160,161,459,460,162,163,164,165,166,461,462,463,464,465,466,167,168,169,170,467,171,172,173,468,469,470,471,472,40,473,474,475,476,477,41,478,479,480,174,481,482,483,484,485,486,175,176,487,177,488,489,178,179,490,491,180,181,182,183,184,42,492,493,4,185,186,5,494,6,7,8,9,10,11,12,495,13,496,14,497,498,15,16,17,499,500,501,502,503,187,188,504,18,19,20,21,189,505,506,190,191,192,193,194,507,508,509,195,510,511,512,513,514,515,516,517,518,196,197,198,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,199,534,535,536,537,538,539,200,201,540,202,541,542,203,204,543,544,205,206,207,208,209,545,546,547,548,549,210,211,212,550,551,552,553,554,43,555,556,557,558,559,44,560,561,562,213,563,564,565,566,567,568,214,215,569,216,570,571,45,217,572,573,218,219,220,221,222,574,22,223,224,23,575,24,25,26,27,28,29,30,576,31,577,32,578,579,33,34,35,580,581,582,583,584,225,226,585,36,37,38,39,227,586,587,228,229,230,231,232,588,233,234,235,589,590,591,592,593,46,594,595,596,597,598,47,599,600,601,236,602,603,604,605,606,607,237,238,608,239,609,610,48,240,611,612,241,242,243,244,245,613,614,615,616,617,246,247,248,618,619,620,621,622,49,623,624,625,626,627,50,628,629,630,249,631,632,633,634,635,636,250,251,637,252,638,639,51,253,640,641,254,255,256,257,258],"tindex":"55da241c-13a1-11e5-84c5-c579bd5cb650","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","beyond":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"55da241d-13a1-11e5-84c5-7d2377f0495e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[642,643,644,645,646,647,648,649,650,651],"tindex":"55da241e-13a1-11e5-84c5-f7624dce5045","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-1},{"failures":[],"tindex":"55da241f-13a1-11e5-84c5-ebdaf046b68f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"55da2420-13a1-11e5-84c5-257838a04959","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"55da4b31-13a1-11e5-84c5-85460e1dc61d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[652],"tindex":"55da4b32-13a1-11e5-84c5-8b804479b8b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.BidiMap<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.BidiMap<K, V> org.apache.commons.collections4.BidiMap<K, V> = ((org.apache.commons.collections4.BidiMap<K, V>)(org.apache.commons.collections4.BidiMap<? extends K, ? extends V>));\n    return org.apache.commons.collections4.BidiMap<K, V>;\n} "},"status":-1},{"failures":[653,654,655,656,657,658,659,660,661,662,663,664,665,666,377,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,378,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,379,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,380,756,757,758,759,381,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,382,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,383,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,384,836,837,838,839,840,385,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,386,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887],"tindex":"55da4b33-13a1-11e5-84c5-a7fb19ab3bb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921],"tindex":"55da4b34-13a1-11e5-84c5-ad7da1488806","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"55da4b35-13a1-11e5-84c5-7b02fafeab43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[464,465,466],"tindex":"55da4b36-13a1-11e5-84c5-2b5ac59a4c93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"55da7247-13a1-11e5-84c5-0b7d334fcf7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"left","this":"this","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[922,923,924],"tindex":"55da7248-13a1-11e5-84c5-af65958dc0aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"55da7249-13a1-11e5-84c5-ab9a1224f5e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[925],"tindex":"55da724a-13a1-11e5-84c5-f17d96251b37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"li"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"status":-1},{"failures":[],"tindex":"55da724b-13a1-11e5-84c5-931fa7c5548e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":0},{"failures":[926,927,928,929,930,931,932,933,934,935,936,937,938],"tindex":"55da724c-13a1-11e5-84c5-c385bc0c46d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"status":-1},{"failures":[719,750,830,856,866],"tindex":"55da724d-13a1-11e5-84c5-e7a132ff5f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"55da724e-13a1-11e5-84c5-57f872c57a2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":0},{"failures":[],"tindex":"55da995f-13a1-11e5-84c5-41e3cac16a61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-2},{"failures":[441,473,11,525,555,29,594,623],"tindex":"55da9960-13a1-11e5-84c5-bb09b78a53f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"55da9961-13a1-11e5-84c5-f9d8ee2ef46d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[939,86,87,88,89,90,91,92,93,100,101,103,104,105,106,107,108,97,96,940,98,109,110,111,112,113,114,115,116,117,118,125,126,128,129,130,131,132,133,122,121,941,123],"tindex":"55da9962-13a1-11e5-84c5-29e7a4b3659f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[54,55,57],"tindex":"55da9963-13a1-11e5-84c5-8b031597fac4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[],"tindex":"55da9964-13a1-11e5-84c5-b3e3717e8e45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl","sourcecode":"return new java.util.HashSet<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[387,388,421,422,423,424,425,426,427,428,429,430,417,418,419,420,431,432,433,434,153,154,155,435,436,437,438,439,440,441,442,443,444,942,445,446,447,448,449,156,450,451,452,453,454,455,157,158,456,159,457,458,160,161,459,460,162,163,164,165,166,943,944,945,946,947,948,949,950,467,480,42,492,493,4,185,186,5,494,6,7,8,9,10,11,12,495,13,951,496,14,497,498,15,16,17,499,500,501,502,503,187,188,504,18,19,20,21,189,505,506,190,191,192,193,194,952,953,954,955,956,957,958,959,507,508,511,533,545,546,548,562,574,22,223,224,23,575,24,25,26,27,28,29,30,576,31,960,577,32,578,579,33,34,35,580,581,582,583,584,225,226,585,36,37,38,39,227,586,587,228,229,230,231,232,961,962,963,964,965,966,967,968,969,588,601,615,613,630],"tindex":"55da9965-13a1-11e5-84c5-9f7085e3c123","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[970,971,972,547,548,973,549,974,975,976,977,978,979,980,210,211,212,550,551,552,553,554,43,555,556,557,558,559,44,560,561,562,213,563,564,565,566,567,568,214,215,569,216,570,571,45,217,572,573,218,219,220,221,222],"tindex":"55dac076-13a1-11e5-84c5-47ddd3a1daac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"55dac077-13a1-11e5-84c5-5d0b6d9063c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[981,982,983],"tindex":"55dac078-13a1-11e5-84c5-a78543228ffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"55dac079-13a1-11e5-84c5-c14e875d2da7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"55dac07a-13a1-11e5-84c5-5d77430806e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"55dac07b-13a1-11e5-84c5-b3533f722d2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[984],"tindex":"55dac07c-13a1-11e5-84c5-41189bd3a4f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:174","type":"CtAssignmentImpl","sourcecode":"boolean = int > 0"},"variableMap":{"result":"result","comparison":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:171","type":"CtAssignmentImpl","sourcecode":"boolean = int == 0"},"status":-1},{"failures":[],"tindex":"55dac07d-13a1-11e5-84c5-3fef0b3a9e2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:543","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"55dac07e-13a1-11e5-84c5-8df18e7b3631","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":0},{"failures":[888,889,985,890,891,892,893,894,895,896,897,898,899,900,901,902,986,903,904,905,987,906,907,908,909,988,910,911,912,913,914,989,915,916,917,918,919,920,921],"tindex":"55dae78f-13a1-11e5-84c5-c97b64d7aa28","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"55dae790-13a1-11e5-84c5-554a0f90e480","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[990,991],"tindex":"55dae791-13a1-11e5-84c5-0d5c5d69378d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"55dae792-13a1-11e5-84c5-8723870f83c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"55dae793-13a1-11e5-84c5-83a86c74b2d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:478","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"55db0ea4-13a1-11e5-84c5-f9d6d1385176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[40,41,42,10,14,21,43,44,45,28,32,39,46,47,48,49,50,51],"tindex":"55db0ea5-13a1-11e5-84c5-05e91c0308ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[389,390,391,392,393,145,146,395,396,398,147,148,401,402,403,404,405,406,407,149,150,409,410,412,151,152,415,416],"tindex":"55db0ea6-13a1-11e5-84c5-4f48eb9e8c41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:145","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, ? super V>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:124","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.Map<E, ? super V>.put(E, V);\n}"},"status":-1},{"failures":[992,993,994],"tindex":"55dd5897-13a1-11e5-84c5-01da8da01a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:140","type":"CtReturnImpl","sourcecode":"return this.boolean ? 1 : -1"},"variableMap":{"nullsAreHigh":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:76","type":"CtReturnImpl","sourcecode":"return boolean ? 0 : 1"},"status":-1},{"failures":[44],"tindex":"55deb828-13a1-11e5-84c5-e94a75fedf06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"value","o2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[995],"tindex":"55deb829-13a1-11e5-84c5-7f546bea7f86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"55deb82a-13a1-11e5-84c5-65330a4c8e82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"55deb82b-13a1-11e5-84c5-934aa99cf10d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"55deb82c-13a1-11e5-84c5-0d1d69325470","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"55deb82d-13a1-11e5-84c5-cd9316987a02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"valueSet","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":0},{"failures":[996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041],"tindex":"55dedf3e-13a1-11e5-84c5-655708889b5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[],"tindex":"55dedf3f-13a1-11e5-84c5-99f70c8a5cc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[4,492,185,6,7,8,9,10,11,12,13,14,15,16,500,501,502,503,187,188,504,191,192,193,194,22,223,24,25,26,27,28,29,30,31,32,33,34,581,582,583,584,225,226,585,229,230,231,232],"tindex":"55dedf40-13a1-11e5-84c5-2fc8f321c1c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-1},{"failures":[902,905],"tindex":"55df0651-13a1-11e5-84c5-8978c26469cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-1},{"failures":[1042],"tindex":"55df0652-13a1-11e5-84c5-7d5f7694ae78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:289","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[],"tindex":"55df0653-13a1-11e5-84c5-fbd439a3b589","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"55df0654-13a1-11e5-84c5-11e813076355","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"subSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[],"tindex":"55df0655-13a1-11e5-84c5-8762ec042d5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"count","closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}