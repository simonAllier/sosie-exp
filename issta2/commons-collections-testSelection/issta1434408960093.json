{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":358,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":377,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":72,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":288,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":535,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":206,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":608,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":389,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":414,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":187,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":332,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":621,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":195,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsSelfHashCode":169,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":430,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiMapIteratorSet":280,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullValue":185,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":424,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":93,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":550,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":562,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":548,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":626,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":385,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":498,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":589,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":558,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":481,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":486,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":307,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":399,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":434,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":80,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":601,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":364,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":172,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":585,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":391,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":392,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRetainAll":304,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":365,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":507,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":268,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":73,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":625,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":121,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":249,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":341,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":381,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":226,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":547,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":15,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":361,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":63,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":286,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":635,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":347,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":41,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":413,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":274,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":327,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":262,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":181,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":528,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":432,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":475,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":218,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":402,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":573,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":403,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":648,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":401,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":645,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":311,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullKey":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":395,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":499,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":0,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":58,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":480,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":342,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":386,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":565,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":140,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":235,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":609,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":651,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":615,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":212,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":21,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":435,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":554,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":378,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":423,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":375,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":592,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":239,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":622,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":495,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":373,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":517,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":513,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":260,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":323,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":610,"org.apache.commons.collections4.map.SingletonMapTest.testEmptyMapCompatibility":147,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":647,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":393,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":642,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":526,"org.apache.commons.collections4.map.SingletonMapTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":271,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":161,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":491,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":159,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":597,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":512,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":67,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":32,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":422,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":129,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEmptyMapCompatibility":116,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":563,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":259,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":408,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":284,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":220,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEmptyMapCompatibility":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":464,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":541,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":390,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":419,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":59,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":460,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":81,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsContract":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":542,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutNullValue":292,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":646,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":574,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":120,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":593,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPutAll":293,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":644,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":506,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":482,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":315,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":189,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":255,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":394,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":76,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":463,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":406,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":525,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":418,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":150,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsSelfHashCode":310,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":534,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveAll":198,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":649,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":536,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":264,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":317,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":2,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":518,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":25,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":340,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":493,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":474,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":84,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":437,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetIteratorRemoveChangesMap":309,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":576,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":61,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveAll":188,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":439,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":479,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":450,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":234,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":613,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":313,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":458,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":331,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":643,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":388,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":650,"org.apache.commons.collections4.map.SingletonMapTest.testMapHashCode":145,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":537,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":302,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":611,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":612,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":501,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":106,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":20,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":176,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":177,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":263,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":374,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":252,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":215,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":211,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectHashCodeEqualsContract":171,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":383,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":472,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":321,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":607,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutNullKey":190,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":415,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":631,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":376,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":599,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":632,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":545,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRetainAll":130,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":569,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":504,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":575,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":519,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFirstKey":153,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":520,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":521,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":551,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":583,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":283,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":431,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutAll":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":228,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":261,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":577,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":473,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":448,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":412,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":570,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":514,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":290,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":355,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":319,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":549,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":467,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveAll":303,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":584,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapClear":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":85,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":371,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":173,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":594,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":485,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":306,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":452,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":7,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":330,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":344,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":552,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":333,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":544,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":359,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":387,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":33,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":345,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":108,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":619,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":348,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsContract":151,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":429,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":438,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":339,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":99,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":483,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":370,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":497,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":489,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":326,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":453,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":242,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":560,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":543,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":465,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":287,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":131,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":627,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":314,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":490,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":329,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":300,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":605,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":454,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testLastKey":154,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":276,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFullMapCompatibility":164,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":579,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":564,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":42,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":346,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":417,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":237,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":553,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":559,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":502,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":444,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":442,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":282,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":440,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":466,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":165,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":531,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":51,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains3":102,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":556,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":101,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":503,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":214,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":603,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":318,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":360,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":532,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":267,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":146,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":275,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":230,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":316,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":222,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":312,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":351,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":523,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":380,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":216,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":568,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":571,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":257,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":633,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":223,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":455,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":37,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":210,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":572,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":629,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":638,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":160,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":511,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":640,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":336,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":459,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":238,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":476,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":522,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":103,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":352,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":427,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":641,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":581,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":488,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapClear":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":69,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":294,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":369,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":470,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":49,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":254,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":421,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":487,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":196,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":500,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":509,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEmptyMapCompatibility":191,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":244,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":278,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":505,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":258,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":143,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":468,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":62,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":420,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":616,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":618,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":617,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPut":127,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":245,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":436,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectHashCodeEqualsSelfHashCode":208,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":1,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFullMapCompatibility":193,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":478,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":484,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":540,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":587,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":446,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":588,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":604,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":469,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":114,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":433,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":248,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":285,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":253,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPutAll":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":397,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":354,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":516,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveAll":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":462,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":186,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":256,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":86,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":524,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":270,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":639,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":111,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":591,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":600,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":628,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":636,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":158,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":3,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":461,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapPut":202,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":590,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":566,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":266,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":449,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":357,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":515,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":494,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":578,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":451,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":384,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":530,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":265,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":546,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":269,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":335,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":229,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":555,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapPutNullValue":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":225,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":624,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":273,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":529,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":295,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":296,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":166,"org.apache.commons.collections4.map.SingletonMapTest.testPreviousKey":136,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains3":297,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":602,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":441,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":279,"org.apache.commons.collections4.map.SingletonMapTest.testObjectHashCodeEqualsSelfHashCode":149,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":582,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":201,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":614,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":236,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":580,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":35,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":630,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":379,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":492,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":219,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":367,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":477,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":320,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":60,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":194,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRetainAll":180,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":337,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":586,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":634,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":561,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":334,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":126},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"b0ce5754-13b1-11e5-8329-87fac9d73f13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)"},"status":-1},{"failures":[],"tindex":"b0ce7e65-13b1-11e5-8329-a3144cdb1804","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:89","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return 0;\n} "},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"b0ce7e66-13b1-11e5-8329-efa683381a11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[27,28,29,30],"tindex":"b0ce7e67-13b1-11e5-8329-c9d159c66d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-1},{"failures":[],"tindex":"b0ce7e68-13b1-11e5-8329-97f068233c6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"b0ce7e69-13b1-11e5-8329-89ab4cb5c5bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[],"tindex":"b0cea57a-13b1-11e5-8329-19692038fcc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-2},{"failures":[31,32,33,34,35,36],"tindex":"b0cea57b-13b1-11e5-8329-97bfd8b71531","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312],"tindex":"b0cea57c-13b1-11e5-8329-bb24dc4bd407","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":-1},{"failures":[313],"tindex":"b0cea57d-13b1-11e5-8329-6f470e7115a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1604","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int)"},"variableMap":{"iterator":"iterator","totalSize":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-1},{"failures":[],"tindex":"b0cecc8e-13b1-11e5-8329-752f8a59d96a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"x","dataElement":"dataElement","child":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"b0cecc8f-13b1-11e5-8329-6112458261d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"b0cecc90-13b1-11e5-8329-cda8719cf076","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"b0cecc91-13b1-11e5-8329-2fbc1741a5ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"status":-2},{"failures":[],"tindex":"b0cef3a2-13b1-11e5-8329-11bd1780242d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"b0cef3a3-13b1-11e5-8329-1b6d1339ad52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"b0cef3a4-13b1-11e5-8329-b90de8e98111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasPrevious()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"b0cef3a5-13b1-11e5-8329-4955abe892c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[360,361,225,226,223,224,227,228,229,362,363,230,231,364,232,233,234,235,236,237,238,239,240,365,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418],"tindex":"b0cef3a6-13b1-11e5-8329-93019db91c12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"currentNode","node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[232,233,235,236,237,238,240],"tindex":"b0cf1ab7-13b1-11e5-8329-a1cc57d3e87d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"b0cf1ab8-13b1-11e5-8329-751904d4c9df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"b0cf1ab9-13b1-11e5-8329-f3755569e943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"b0cf1aba-13b1-11e5-8329-d536c2a5a266","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"variableMap":{"this":"set","set1":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"status":-2},{"failures":[],"tindex":"b0cf1abb-13b1-11e5-8329-13ea777419b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"b0cf41cc-13b1-11e5-8329-61f3bd31761a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b0cf41cd-13b1-11e5-8329-030f4339e765","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"status":-2},{"failures":[419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449],"tindex":"b0cf41ce-13b1-11e5-8329-83653522ede4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"b0cf41cf-13b1-11e5-8329-8b1302bc1b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"siblingNode","dataElement":"dataElement","child":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"b0cf41d0-13b1-11e5-8329-7b61a60b873f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:340","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator();\n} "},"status":0},{"failures":[],"tindex":"b0cf41d1-13b1-11e5-8329-1bfde28b5da1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-2},{"failures":[],"tindex":"b0cf41d2-13b1-11e5-8329-aba9de00a168","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"b0cf68e3-13b1-11e5-8329-032d653a8a1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:61","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) != (org.apache.commons.collections4.Closure<? super E>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\");\n} "},"status":-2},{"failures":[],"tindex":"b0cf68e4-13b1-11e5-8329-a5f6c6325805","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[223,224,232,233,235,236,237,238,239,240,368,369,418,383,384,386,387,388,389,390,391,393,397,407,410,411,414,415],"tindex":"b0cf68e5-13b1-11e5-8329-89944b8bea42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"b0cf68e6-13b1-11e5-8329-3bd2e2768b84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"length","closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:64","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>[].int) == 0) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E> == null ? org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure() : org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-2},{"failures":[],"tindex":"b0cf68e7-13b1-11e5-8329-67f7fbc5184a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"node","current":"node","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"b0cf68e8-13b1-11e5-8329-ff81b4183b67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"b0cf68e9-13b1-11e5-8329-dd99d59f33b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[467],"tindex":"b0cf8ffa-13b1-11e5-8329-2942eb66f035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[],"tindex":"b0cf8ffb-13b1-11e5-8329-afe329c3edf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"index","start":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"b0cf8ffc-13b1-11e5-8329-7f48a2eb3aa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[468,469,470,471,472,473,474,475,476,477],"tindex":"b0cf8ffd-13b1-11e5-8329-3584ea0f957e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"b0cf8ffe-13b1-11e5-8329-25d855bababa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"h","parent":"h","left":"h","h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":0},{"failures":[478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518],"tindex":"b0cf8fff-13b1-11e5-8329-2bc89a55cf0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[32,33,35,36],"tindex":"b0cf9000-13b1-11e5-8329-0b7ecb81f66e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"b0cf9001-13b1-11e5-8329-f59c838c0874","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"bitIndex","maxElements":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[519,520,521,522,523,524],"tindex":"b0cf9002-13b1-11e5-8329-b7cd7700193c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"status":-1},{"failures":[],"tindex":"b0cfb713-13b1-11e5-8329-09893e524389","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":0},{"failures":[],"tindex":"b0cfb714-13b1-11e5-8329-7788db352e59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"b0cfb715-13b1-11e5-8329-bb70ddc8ee1b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"b0d13db6-13b1-11e5-8329-3f7eb26d9070","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[525],"tindex":"b0d164c7-13b1-11e5-8329-996a538dd7cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[526,527],"tindex":"b0d164c8-13b1-11e5-8329-09b796aba98c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[31,32,33,34,35,36],"tindex":"b0d164c9-13b1-11e5-8329-dfdd429604a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[528,529,530,531,532,533,316,534,317],"tindex":"b0d164ca-13b1-11e5-8329-1dc4f9f561a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":-1},{"failures":[42,43],"tindex":"b0d164cb-13b1-11e5-8329-fb5ea28c692f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[535,536,537,538],"tindex":"b0d164cc-13b1-11e5-8329-f50eb13e7349","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b0d164cd-13b1-11e5-8329-6fc679a16e55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"variableMap":{"obj":"obj","this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[539,540],"tindex":"b0d164ce-13b1-11e5-8329-43ae68f928e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:178","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[],"tindex":"b0d164cf-13b1-11e5-8329-499b1951dd10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:435","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.collection.UnmodifiableBoundedCollection<E>.decorated().iterator())"},"status":-2},{"failures":[],"tindex":"b0d18be0-13b1-11e5-8329-69e10f71d1e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"b0d18be1-13b1-11e5-8329-6380a8dc9e2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bitIndex","lengthInBits":"bitIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bitIndex","otherOffsetInBits":"bitIndex","otherLengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b0d18be2-13b1-11e5-8329-152910c95cfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1261","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"status":-2},{"failures":[],"tindex":"b0d18be3-13b1-11e5-8329-2bc91c9cb2c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"b0d18be4-13b1-11e5-8329-e940d5971e9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[313,541,542,543,544,545,546,547,548,549,550,551],"tindex":"b0d18be5-13b1-11e5-8329-b55fa970f15a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"b0d18be6-13b1-11e5-8329-c1413fbc88a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[45],"tindex":"b0d18be7-13b1-11e5-8329-9f4ea8ce704d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"b0d18be8-13b1-11e5-8329-6da61fd1f3c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b0d1b2f9-13b1-11e5-8329-ed675899fd21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[552,553,554,555,556,557,558,559],"tindex":"b0d1b2fa-13b1-11e5-8329-eb3e5a924390","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"b0d1b2fb-13b1-11e5-8329-8916ce51ef80","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[560,561,562,563,564,565,566,567,568,569,570],"tindex":"b0d1b2fc-13b1-11e5-8329-2b69b2e1423d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"total":"total","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[571,572,27,573,574,28,575,576,577,29],"tindex":"b0d1b2fd-13b1-11e5-8329-f544175cf440","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"b0d1b2fe-13b1-11e5-8329-5bfad78a1a24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:584","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[578],"tindex":"b0d1b2ff-13b1-11e5-8329-c7fa516638df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1277","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[232,233,235,236,237,239,240,383,384,386,387,388,390,391,393,396,397],"tindex":"b0d1b300-13b1-11e5-8329-df0545de56c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"total","currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[31,33,34,35,36],"tindex":"b0d1da11-13b1-11e5-8329-dfb92b0833e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"b0d1da12-13b1-11e5-8329-0b23a78070fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b0d1da13-13b1-11e5-8329-258cfb5ca3a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[],"tindex":"b0d1da14-13b1-11e5-8329-d9dfe99bbea1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:750","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n    if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n        java.util.Iterator<T>.remove();\n        boolean = true;\n    } \n}"},"status":0},{"failures":[],"tindex":"b0d1da15-13b1-11e5-8329-cf7738ec3ce8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-2},{"failures":[],"tindex":"b0d1da16-13b1-11e5-8329-91760aeb96d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-2},{"failures":[360,361,225,226,223,224,227,228,229,362,363,230,231,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,364,232,233,234,235,236,237,238,239,240,365,242,243,244,245,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398],"tindex":"b0d1da17-13b1-11e5-8329-ad15a18ce2b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[579,6,580,7,8,581,9,10,11,12,582,13,14,15,16,583,584,17,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,568,569,608,609,610,611,612,613,614,615,616,617,618,619,620,18,19,621,20,21,622,22,23,623,624,24,25,26,625,626,627,628],"tindex":"b0d20128-13b1-11e5-8329-61ee58a4635e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"b0d20129-13b1-11e5-8329-516216afbb7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-2},{"failures":[629,630],"tindex":"b0d2012a-13b1-11e5-8329-27cbdc24a42a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[313,541,542,543,544,545,547],"tindex":"b0d2012b-13b1-11e5-8329-83bd76abe9a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b0d2012c-13b1-11e5-8329-f7423c235b57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"b0d2283d-13b1-11e5-8329-ad1410a040bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"b0d2283e-13b1-11e5-8329-971a3564dcd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":0},{"failures":[],"tindex":"b0d2283f-13b1-11e5-8329-fbb7198046c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"b0d22840-13b1-11e5-8329-890786cc304c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"b0d22841-13b1-11e5-8329-9d4afc9410ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[561,631,632,633,634,635,636,637,638,639,640,562,563,641,642,643,644,645,564,646,647,565,566,567,648,649,650,651,568,570],"tindex":"b0d22842-13b1-11e5-8329-7daba6535869","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"b0d22843-13b1-11e5-8329-dda51e725f69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"b0d22844-13b1-11e5-8329-dd6f3279b730","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"b0d22845-13b1-11e5-8329-69265f6c3bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}