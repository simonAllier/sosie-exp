{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":172,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":327,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":638,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":536,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":583,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":439,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":244,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":106,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":747,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":778,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":762,"org.apache.commons.collections4.CollectionUtilsTest.collect":769,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":717,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":670,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":131,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":363,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":633,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":61,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":141,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":306,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":481,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":753,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":590,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":664,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":127,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":149,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":450,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":176,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":332,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.CollectionUtilsTest.select":595,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":632,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":585,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":452,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":721,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":389,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":505,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":342,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":682,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":385,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":261,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":589,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":189,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":545,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":415,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":639,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":95,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":723,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":535,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":703,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":728,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":173,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":410,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":360,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":484,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":266,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":139,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":566,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":38,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":659,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":248,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":491,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":325,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":111,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":466,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":694,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":624,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":454,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":477,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":601,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":696,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":437,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":398,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":337,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":280,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":352,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":554,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":159,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":201,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":303,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":739,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":218,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":12,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":51,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":551,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":546,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":207,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":772,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":707,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":609,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":463,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":436,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":561,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":719,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":82,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":245,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":401,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":629,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":317,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":271,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":692,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":442,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":48,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":565,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":279,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":512,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":720,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":662,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":346,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":94,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":294,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":658,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":409,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":134,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":324,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":570,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":123,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":685,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":242,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":33,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":691,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":241,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":460,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":458,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":169,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":262,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":504,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.IteratorUtilsTest.testToList":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":178,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":724,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":171,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":668,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":480,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":711,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":775,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":99,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":290,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":576,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":734,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":476,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":630,"org.apache.commons.collections4.map.LRUMapTest.testReset":705,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":86,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":90,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":420,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":455,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":492,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":578,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":443,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":779,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":302,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":472,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":631,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":166,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":610,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":686,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":603,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":60,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":712,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":598,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":722,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":774,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":224,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":738,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":649,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":657,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":627,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":542,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":414,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":17,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":249,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":737,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":457,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":297,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":326,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":212,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":526,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":429,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":388,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":475,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":592,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":773,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":30,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":418,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":392,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":538,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":316,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":320,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":370,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":444,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":270,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":215,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":534,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":517,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":225,"org.apache.commons.collections4.map.HashedMapTest.testClone":698,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":663,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":485,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":331,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":689,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":386,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":553,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":766,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":759,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":619,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":709,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":621,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":473,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":446,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":623,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":260,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":394,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":236,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":490,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":594,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":304,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":138,"org.apache.commons.collections4.ListUtilsTest.testSelect":596,"org.apache.commons.collections4.map.LinkedMapTest.testClone":756,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":102,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":754,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":416,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":550,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":164,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":718,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":502,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":314,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":154,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":281,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":715,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":706,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":273,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":478,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":237,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":226,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":507,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":635,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":459,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":433,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":673,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":146,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":402,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":62,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":749,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":343,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":354,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":482,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":714,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":501,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":500,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":499,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":435,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":768,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":690,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":369,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":600,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":251,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":515,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":776,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":687,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":267,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":660,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":278,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":764,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":539,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":431,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":467,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":671,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":359,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":400,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":428,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":729,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":625,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":381,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":313,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":338,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":287,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":210,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":757,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":174,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":387,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":612,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":162,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":727,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":710,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":133,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":399,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":575,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":634,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":328,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":755,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":587,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":736,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":184,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":571,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":468,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":597,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":471,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":780,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":665,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":605,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":312,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":763,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":192,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":378,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":311,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":582,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":527,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":232,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":777,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":85,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":282,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":330,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":548,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":284,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":341,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":361,"org.apache.commons.collections4.CollectionUtilsTest.transform2":767,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":373,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":411,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":195,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":194,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":683,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":741,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":537,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":522,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":742,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":503,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":336,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":675,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":283,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":581,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":645,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":525,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":655,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":599,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":345,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":170,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":608,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":425,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":656,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":397,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":434,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":229,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":511,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":376,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":622,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":640,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":562,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":531,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":521,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":524,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":713,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":613,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":310,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":167,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":495,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":488,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":43,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":265,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":299,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":543,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":377,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":417,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":71,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":544,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":334,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":508,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":680,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":185,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":626,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":697,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":614,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":190,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":357,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":177,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":403,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":479,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":552,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":223,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":445,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":462,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":540,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":560,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":208,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":246,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":222,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":199,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":197,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":339,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":744,"org.apache.commons.collections4.map.LRUMapTest.testClone":704,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":49,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":716,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":18,"org.apache.commons.collections4.ListUtilsTest.testSubtract":220,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":108,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":80,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":83,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":286,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":344,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":451,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":643,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":489,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":366,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testInitialCapacityZero":701,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":405,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":641,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":642,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":350,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":263,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":765,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":239,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":96,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":588,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":743,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":549,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":636,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":206,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":101,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":217,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":470,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":781,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":751,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":513,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":688,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":448,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":84,"org.apache.commons.collections4.map.HashedMapTest.testInitialCapacityZero":699,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":746,"org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer":107,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":618,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":21,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":569,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":351,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":340,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":438,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":22,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":77,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":752,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":395,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":165,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":100,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":586,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":142,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":523,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":748,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":233,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":382,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":666,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":214,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":568,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":674,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":57,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":58,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":650,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":557,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":615,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":695,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":758,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":227,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":725,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":745,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":74,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":424,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":593,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":347,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":319,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":255,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":27,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":672,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":577,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":356,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":740,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":413,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":591,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":41,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":300,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":348,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":651,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":129,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":322,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":383,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":708,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":240,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":384,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":530,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":637,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":157,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":256,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":254,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":321,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":684,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":528,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":122,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":213,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":13,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":419,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":486,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":396,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":574,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":200,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":469,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":391,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":250,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":620,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":761,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":268,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":533,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":681,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":73,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":693,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":760,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":144,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":109,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":447,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":124,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":230,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":432,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":679,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":646,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":648,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":296,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":647,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":567,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":11,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":63,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":292,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":494,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":770,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":427,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":510,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":404,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":449,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":474,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":393,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":602,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":496,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":498,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":667,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":191,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":307,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":606,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":46,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":380,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":295,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":555,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":750,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":506,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":676,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":677,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":678,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":179,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":323,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":573,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":120,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":556,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":305,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":37,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":461,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":34,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":44,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":26,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":441,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":518,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":563,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":644,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":136,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":617,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":440,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":408,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":6,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":730,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":731,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":364,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":661,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":362,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":579,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":516,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":547,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":258,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":519,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":564,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":371,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":374,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":529,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":456,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":572},"transformations":[{"failures":[],"tindex":"f192733e-13a0-11e5-baeb-8d93d1103135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"f1929a4f-13a0-11e5-baeb-c70e5e96e3fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"right","parent":"left","left":"right","h":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[0,1,2,3],"tindex":"f1929a50-13a0-11e5-baeb-fd1d539923c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"f1929a51-13a0-11e5-baeb-430ac5687f5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"f1929a52-13a0-11e5-baeb-772bd322868f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-1},{"failures":[25,26,27,28,29,30],"tindex":"f192c163-13a0-11e5-baeb-a773239e13a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"f192c164-13a0-11e5-baeb-7b5b8c8629fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:88","type":"CtAssignmentImpl","sourcecode":"int = java.util.Collection<? extends E>.size()"},"status":0},{"failures":[],"tindex":"f192c165-13a0-11e5-baeb-1b584b84812a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":0},{"failures":[],"tindex":"f192c166-13a0-11e5-baeb-6f4193775997","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1195","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":0},{"failures":[],"tindex":"f192c167-13a0-11e5-baeb-d5c1fa945648","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:270","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-2},{"failures":[31,11,12,32,33,34,35,36,37,38,39,40,41,13,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"f192e878-13a0-11e5-baeb-730d2a9e379f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"f192e879-13a0-11e5-baeb-b3411939fc52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"f192e87a-13a0-11e5-baeb-551afa3cdf5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"k","newCapacity":"d","proposedCapacity":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-2},{"failures":[],"tindex":"f192e87b-13a0-11e5-baeb-590eb5d26fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[],"tindex":"f1930f8c-13a0-11e5-baeb-e7aa29fd9184","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:797","type":"CtIfImpl","sourcecode":"if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"f1930f8d-13a0-11e5-baeb-43a6a5d18114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":-2},{"failures":[45],"tindex":"f1930f8e-13a0-11e5-baeb-67a6d00e06df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"f1930f8f-13a0-11e5-baeb-4dd8fbc7162b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"variableMap":{"set":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[100,101,102,103,104],"tindex":"f1930f90-13a0-11e5-baeb-452a10aa34a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-1},{"failures":[105,106],"tindex":"f19336a1-13a0-11e5-baeb-5fadf3383412","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[107,108,109,110],"tindex":"f19336a2-13a0-11e5-baeb-e10b27a2a5a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:887","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.StringValueTransformer:64","type":"CtReturnImpl","sourcecode":"return java.lang.String.valueOf(T)"},"status":-1},{"failures":[111,112,113,114,115,116,117],"tindex":"f19336a3-13a0-11e5-baeb-43d101ff2797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"f19336a4-13a0-11e5-baeb-17544e29b634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,111,188,189,190,112,191,192,193,194,195,196,197,198,199,200,201,202,113,203,204,205,114,206,115,116,117],"tindex":"f1935db5-13a0-11e5-baeb-8f7f408f309b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f193f9f6-13a0-11e5-baeb-c1f4cb44348d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[207,208,209,210,211,212,213],"tindex":"f193f9f7-13a0-11e5-baeb-3330099726ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[],"tindex":"f193f9f8-13a0-11e5-baeb-8f9450795381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[214,215,216,217,218,219,220,221,222,223,224,225,226,71,227,72,228,229,230,231,232,233,207,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,74,251,75,252,253,254,255,256,257,208,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,77,276,78,277,278,279,280,281,282,209,283,284,285,286,287,288,289,290,0,79,291,292,293,294,295,1,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,82,311,83,312,313,314,315,316,317,210,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,85,336,86,337,338,339,340,341,342,211,343,344,345,346,347,348,349,350,2,87,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,92,388,93,389,390,391,392,393,394,212,395,396,397,398,399,400,401,402,3,94,403,404,96,405,406,407,408,409,410,97,411,98,412,413,414,415,416,417,213,418,419,420,421,422,423,424,425,426,427,428,429],"tindex":"f1942109-13a0-11e5-baeb-5f214ae0171b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"mut"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f194481a-13a0-11e5-baeb-6fd956f93aca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"predecessor","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[430],"tindex":"f194481b-13a0-11e5-baeb-63a4e9cdefe4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:99","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:182","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"f194481c-13a0-11e5-baeb-4be178090ddd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"f194481d-13a0-11e5-baeb-a12f56e7cf14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[36,37,39,40,41,42,43,45,48,49],"tindex":"f194481e-13a0-11e5-baeb-adff341b3883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"f194481f-13a0-11e5-baeb-4b180fe21e4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[431,432,433,434,435],"tindex":"f1946f30-13a0-11e5-baeb-81532299b9a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"valuePredicate","predicate2":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"f1946f31-13a0-11e5-baeb-e9e410eb413f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[40],"tindex":"f1946f32-13a0-11e5-baeb-d5d4f96e520c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[],"tindex":"f1946f33-13a0-11e5-baeb-cf13880bc30d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"f1946f34-13a0-11e5-baeb-b55897052336","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f1946f35-13a0-11e5-baeb-b99a3f01f096","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key4","i":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"f1946f36-13a0-11e5-baeb-9d55d09fb4cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f1946f37-13a0-11e5-baeb-97a70054696b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"f1949648-13a0-11e5-baeb-a98c68cdc0eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[436,437,438,439,440,441],"tindex":"f1949649-13a0-11e5-baeb-fb792efa84f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"d","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[72,75,78,79,83,86,87,93,94,98],"tindex":"f194964a-13a0-11e5-baeb-4177b71f7181","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469],"tindex":"f194964b-13a0-11e5-baeb-b3e443098d91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"f194964c-13a0-11e5-baeb-63f34afc0d45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f194bd5d-13a0-11e5-baeb-e94341239ba7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"status":-2},{"failures":[],"tindex":"f194bd5e-13a0-11e5-baeb-f1484912ca54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:481","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} "},"status":-2},{"failures":[470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,105,106],"tindex":"f194bd5f-13a0-11e5-baeb-87ecfed2a6ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[],"tindex":"f194bd60-13a0-11e5-baeb-3b6bf63a04c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,9,7,553,554,555,556,557,558,559,560,561,562,11,12,36,37,39,40,41,43,45,48,49,58,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,16,17,18,19,20,21,22,23,24],"tindex":"f194bd61-13a0-11e5-baeb-3bff4332950b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[587,542,588],"tindex":"f194e472-13a0-11e5-baeb-15bc789eba33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f1950b83-13a0-11e5-baeb-09e27126fefa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[589,590],"tindex":"f1950b84-13a0-11e5-baeb-f90cf2194945","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f1950b85-13a0-11e5-baeb-af69b0809abf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[],"tindex":"f1950b86-13a0-11e5-baeb-8d7c16b860df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[591,592],"tindex":"f1950b87-13a0-11e5-baeb-41b7ff6d13a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"status":-1},{"failures":[593,594],"tindex":"f19559a8-13a0-11e5-baeb-6dc48f58e47e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[595,596],"tindex":"f19559a9-13a0-11e5-baeb-1f0da013381b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f19559aa-13a0-11e5-baeb-5f80a5d190ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"f19559ab-13a0-11e5-baeb-d75534e970a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"f19559ac-13a0-11e5-baeb-cf4dca1ff98b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:276","type":"CtIfImpl","sourcecode":"if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} "},"variableMap":{"ref":"ref","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"f19580bd-13a0-11e5-baeb-8f6bd29c9cdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"diag","maxElements":"diag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[535,538,597,546,549,556,559,598,40,45,62,599,600,601,602,19,22,603],"tindex":"f19580be-13a0-11e5-baeb-2f1c2e6adb48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[214,215,216,218,219],"tindex":"f19580bf-13a0-11e5-baeb-41b8f10988ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"variableMap":{"a":"b","b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f19580c0-13a0-11e5-baeb-190311ea292d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"lastItemIndex","index":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":0},{"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,101,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675],"tindex":"f19580c1-13a0-11e5-baeb-ffcba88fbdba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[676,677,678,679,680,681,682,683,684],"tindex":"f19580c2-13a0-11e5-baeb-21483052e695","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[685,686],"tindex":"f195a7d3-13a0-11e5-baeb-7ffd1d2d966a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Bag<E>.clear()"},"variableMap":{"bag":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[687,688,689,690,691,692,693,694,695],"tindex":"f195a7d4-13a0-11e5-baeb-8df7c7b27977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"f195a7d5-13a0-11e5-baeb-db1b973d2d79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"f195a7d6-13a0-11e5-baeb-51f5e5904fda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"status":-2},{"failures":[],"tindex":"f195a7d7-13a0-11e5-baeb-757ef5fef596","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f195a7d8-13a0-11e5-baeb-bf615906e7d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[696,697,698,699,589,539,550,700,701,7,560,702,703,11,48,704,705,706,590,707,708,709,710,711,712,713,714,715,716,717,718,719,567,568,720,569,570,571,721,722,572,723,724,573,725,726,574,575,727,728,729,730,731,732,733,734,576,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,584,23,758,759],"tindex":"f195a7d9-13a0-11e5-baeb-b9e758106f59","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"proposedCapacity","modifications":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"f195ceea-13a0-11e5-baeb-3fcb4b5fafa3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[118,119,120,123,122,121,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,163,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,111,188,189,190,112,191,192,193,194,195,196,197,198,199,200,201,202,113,203,204,205,114,206,115,116,117],"tindex":"f195ceeb-13a0-11e5-baeb-1f60341ec8a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f195ceec-13a0-11e5-baeb-495db8c8134d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[492,499,500,502,505,511,512,760,761,762,763,764,765,766],"tindex":"f195f5fd-13a0-11e5-baeb-93bedf623050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[767,768,769],"tindex":"f195f5fe-13a0-11e5-baeb-575d0b383e05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[436,437,438,439,440,441],"tindex":"f195f5ff-13a0-11e5-baeb-99f83d650547","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"start1","vDown":"vDown","delta":"end1","end2":"start2","this":"this","i":"end1","end1":"start1","k":"start2","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"f195f600-13a0-11e5-baeb-a3bc38b7d6f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f195f601-13a0-11e5-baeb-1316100c4b18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f195f602-13a0-11e5-baeb-77151d47eaf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-2},{"failures":[],"tindex":"f195f603-13a0-11e5-baeb-5fcc9914de0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.Set<E> != null)) && ((java.util.Set<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Set<E>.toArray()));\n    java.util.Set<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"f195f604-13a0-11e5-baeb-b9301803f15b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[473,478,479,481,482,483,485,486,488,491,492,511],"tindex":"f195f605-13a0-11e5-baeb-df83ce3bccfb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[125,126,132,133,135,136,137,138,140,770,166,167,168,169,171,172,178,179,180,181,182,183,184,186,111,190,112],"tindex":"f1964426-13a0-11e5-baeb-53913eb1da37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-1},{"failures":[],"tindex":"f1964427-13a0-11e5-baeb-dfa9b7409078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f1964428-13a0-11e5-baeb-756943177c47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"variableMap":{"cursor":"cursor","node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"f1964429-13a0-11e5-baeb-5f245474d0f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[771,25,772,773,774,775,776,777,778,779,780,781],"tindex":"f196442a-13a0-11e5-baeb-63af6db975ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f196442b-13a0-11e5-baeb-6f23f4d29b22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":0},{"failures":[604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,101,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675],"tindex":"f1966b3c-13a0-11e5-baeb-1b2f0390c499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"f1966b3d-13a0-11e5-baeb-f5f6563782b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":0},{"failures":[622,649],"tindex":"f1966b3e-13a0-11e5-baeb-7dd34be5bc74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":97,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}