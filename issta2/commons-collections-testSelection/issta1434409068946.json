{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":670,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":618,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":413,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":732,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":222,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":314,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":132,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":401,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":136,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":21,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":240,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":700,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":146,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":538,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":759,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":702,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":598,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":327,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":165,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":55,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":310,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":695,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":372,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":365,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":693,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":299,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":692,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":633,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":764,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":87,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":491,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":777,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":690,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":167,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":588,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":544,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":750,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":736,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":351,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":458,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":634,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":546,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":651,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":680,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":161,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":96,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":455,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":529,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":578,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":644,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":475,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":189,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":494,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":282,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":671,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":330,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":659,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":278,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":111,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":313,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":738,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":337,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":418,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":611,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":663,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":735,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":323,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":621,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":425,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":120,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":470,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":637,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":629,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":656,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":647,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":238,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":486,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":765,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":638,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":716,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":369,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":568,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":723,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":305,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":724,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":749,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":131,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":571,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":575,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":771,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":10,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":266,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":125,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":64,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":119,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":582,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":444,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":601,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":712,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":679,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":223,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":473,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":84,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":607,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":391,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":358,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":641,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":573,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":774,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":653,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":411,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":617,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":701,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":104,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":272,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":521,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":207,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":733,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":271,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":668,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":547,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":350,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":605,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":375,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":241,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":373,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":543,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":669,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":326,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":593,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":264,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":270,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":636,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":321,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":296,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":450,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":586,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":383,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":338,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":317,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":674,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":746,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":205,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":758,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":498,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":201,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":726,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":727,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":127,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":725,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":267,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":451,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":82,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":437,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":768,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":577,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":600,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":532,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":562,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":466,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":147,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":208,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":320,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":595,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":250,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":461,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":233,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":613,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":211,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":417,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":303,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":608,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":379,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":506,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":584,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":625,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":456,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":109,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":778,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":196,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":74,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":174,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":395,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":197,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":545,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":463,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":676,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":553,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":528,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":697,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":336,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":597,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":767,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":409,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":66,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":348,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":604,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":711,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":218,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":260,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":1,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":261,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":715,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":520,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":249,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":268,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":706,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":757,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":353,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":709,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":708,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":483,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":333,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":257,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":592,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":748,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":648,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":713,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":559,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":557,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":345,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":360,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":187,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":448,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":739,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":762,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":252,"org.apache.commons.collections4.map.LRUMapTest.testLRU":311,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":386,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":511,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":550,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":51,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":484,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":438,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":179,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":472,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":658,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":453,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":235,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":603,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":630,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":496,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":610,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":429,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":675,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":254,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":531,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":665,"org.apache.commons.collections4.map.Flat3MapTest.testToString":718,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":645,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":704,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":106,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":471,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":440,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":652,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":376,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":234,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":17,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":99,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":316,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":56,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":60,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":602,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":246,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":681,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":289,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":412,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":678,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":719,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":405,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":720,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":398,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":193,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":83,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":628,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":488,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":624,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":585,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":503,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":589,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":660,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":432,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":134,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":283,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":468,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":163,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":276,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":406,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":684,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":683,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":540,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":567,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":742,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":295,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":474,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":380,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":502,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":761,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":186,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":114,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":640,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":364,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":63,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":549,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":154,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":285,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":469,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":219,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":481,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":667,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":357,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":717,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":258,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":384,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":244,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":68,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":442,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":288,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":487,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":341,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":117,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":280,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":334,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":203,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":743,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":404,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":277,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":565,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":574,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":507,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":682,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":265,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":627,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":729,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":730,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":100,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":367,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":245,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":655,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":476,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":677,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":728,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":581,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":215,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":325,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":512,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":394,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":530,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":542,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":517,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":504,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":385,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":686,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":116,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":631,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":772,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":558,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":747,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":467,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":172,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":202,"org.apache.commons.collections4.ListUtilsTest.testSubtract":307,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":290,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":500,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":495,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":649,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":389,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":34,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":335,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":363,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":527,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":400,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":434,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":570,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":32,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":297,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":548,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":587,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":522,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":515,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":569,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":563,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":421,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":185,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":408,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":387,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":664,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":319,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":594,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":635,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":514,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":699,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":359,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":776,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":689,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":770,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":769,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":731,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":428,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":242,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":599,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":73,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":237,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":97,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":632,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":194,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":555,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":477,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":480,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":673,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":416,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":180,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":315,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":703,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":763,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":152,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":465,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":213,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":513,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":302,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":118,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":754,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":755,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":773,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":756,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":138,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":422,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":226,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":423,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":181,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":14,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":269,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":0,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":533,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":642,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":623,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":361,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":537,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":23,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":300,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":166,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":576,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":691,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":740,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":566,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":609,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":556,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":643,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":371,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":426,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":615,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":443,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":441,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":454,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":523,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":462,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":284,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":714,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":224,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":536,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":614,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":139,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":583,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":741,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":263,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":596,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":332,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":478,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":392,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":143,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":460,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":3,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":457,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":75,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":225,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":449,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":452,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":612,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":526,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":505,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":541,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":779,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":374,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":705,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":619,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":287,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":510,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":698,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":113,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":39,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":561,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":722,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":760,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":721,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":59,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":525,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":464,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":710,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":654,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":340,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":415,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":243,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":572,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":672,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":591,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":356,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":539,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":626,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":251,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":322,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":752,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":753,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":214,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":751,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":342,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":247,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":343,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":20,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":344,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":382,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":368,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":145,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":606,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":61,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":381,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":439,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":745,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":560,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":410,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":616,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":694,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":102,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":199,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":232,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":737,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":176,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":175,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":734,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":744,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":399,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":312,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":108,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":72,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":309,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":662,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":52,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":301,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":554,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":639,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":212,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":433},"transformations":[{"failures":[],"tindex":"f23c1116-13b1-11e5-98ab-3781b59d7694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"xFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"f23e33f7-13b1-11e5-98ab-49255b6de92a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"relativePosition","index":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-2},{"failures":[],"tindex":"f23e33f8-13b1-11e5-98ab-1b3429ae9763","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[0],"tindex":"f23e5b09-13b1-11e5-98ab-2fb82a7131da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f23f1e5a-13b1-11e5-98ab-15a8e11d328c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"variableMap":{"closures":"childValue","i":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"f23f1e5b-13b1-11e5-98ab-f3686603b8d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:279","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f23f456c-13b1-11e5-98ab-53c80cf5eb41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"variableMap":{"currentIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":0},{"failures":[1,2,3,4,5],"tindex":"f23f456d-13b1-11e5-98ab-9186999409f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15],"tindex":"f23f456e-13b1-11e5-98ab-f76860b0a7b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f23f938f-13b1-11e5-98ab-43f3d61af6cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-2},{"failures":[],"tindex":"f23f9390-13b1-11e5-98ab-7f96fa3aa97a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[16,17],"tindex":"f23f9391-13b1-11e5-98ab-ddbe1e8ffa49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"key1","b":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"f23f9392-13b1-11e5-98ab-c325093f3bd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"f23fbaa3-13b1-11e5-98ab-57baa22b7385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"f23fbaa4-13b1-11e5-98ab-4f8151bb09bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"f23fbaa5-13b1-11e5-98ab-25fb227109f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[],"tindex":"f23fbaa6-13b1-11e5-98ab-0966659849ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-2},{"failures":[],"tindex":"f23fbaa7-13b1-11e5-98ab-7925965e6e8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:239","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.set.ListOrderedSet<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"f23fbaa8-13b1-11e5-98ab-fb8068899594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f23fe1b9-13b1-11e5-98ab-6d424d5a5f87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:314","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":0},{"failures":[91,92,93,94,95,96,97,98,99,100,101,6,7,9,102,103,104,105,106,107,108,109,110,111,112],"tindex":"f23fe1ba-13b1-11e5-98ab-cb3fb4aaddf4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f24008cb-13b1-11e5-98ab-a941915c1752","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[113,114,115],"tindex":"f24008cc-13b1-11e5-98ab-f16a8c5f5766","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-1},{"failures":[],"tindex":"f24008cd-13b1-11e5-98ab-1fc2b953f9a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hashIndex","index":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f24056ee-13b1-11e5-98ab-2f41a8f1b50e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[116,117,118],"tindex":"f24056ef-13b1-11e5-98ab-bf5a8e6ed267","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[119,120,121,122,123,124],"tindex":"f24056f0-13b1-11e5-98ab-075913fa3deb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","delta":"start1","end2":"end1","this":"this","i":"end2","end1":"end2","k":"k","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[125,126,127,128,129,130,131],"tindex":"f24056f1-13b1-11e5-98ab-036838bf2fd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl","sourcecode":"return (this.int) > (this.int)"},"variableMap":{"startIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,4,155,156,157,158,159,160,161,162,163,164],"tindex":"f2407e02-13b1-11e5-98ab-7379a46f1452","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"f2407e03-13b1-11e5-98ab-558f85bd1014","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[177,178,179,180,181,182,183],"tindex":"f250d1b4-13b1-11e5-98ab-51bb05f37726","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"f250d1b5-13b1-11e5-98ab-9f7276b799ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f250f8c6-13b1-11e5-98ab-419283d321ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"f2511fd7-13b1-11e5-98ab-df5d884c140c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f2511fd8-13b1-11e5-98ab-25ffcb0ed1a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"lineageIndex","composite":"childValue","length":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-2},{"failures":[],"tindex":"f2511fd9-13b1-11e5-98ab-0f9db18bba3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:324","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    } else {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":-2},{"failures":[202,203],"tindex":"f2511fda-13b1-11e5-98ab-9f2685bffe89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"status":-1},{"failures":[135,204,205,137,138,139,140,141,142,143,144,145,148,149,150,152,206],"tindex":"f2511fdb-13b1-11e5-98ab-6dbce12dbd34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"f25146ec-13b1-11e5-98ab-ad483acfd66b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[207],"tindex":"f25146ed-13b1-11e5-98ab-0f9c1543c3d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"f25146ee-13b1-11e5-98ab-f7e427262784","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[208],"tindex":"f25146ef-13b1-11e5-98ab-994e23d82595","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:56","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>"},"status":-1},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],"tindex":"f25146f0-13b1-11e5-98ab-43bdd69e0cd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[6,7,9,10,11,12,13,14,15],"tindex":"f25146f1-13b1-11e5-98ab-87372b58e677","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[241],"tindex":"f2516e02-13b1-11e5-98ab-81dca94f3957","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-1},{"failures":[242],"tindex":"f2516e03-13b1-11e5-98ab-2f798c05afdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:826","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        int++;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2516e04-13b1-11e5-98ab-fdc57209b209","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f2516e05-13b1-11e5-98ab-d337e5865a36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"f2516e06-13b1-11e5-98ab-593b28236b84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":-2},{"failures":[],"tindex":"f2516e07-13b1-11e5-98ab-7379466027df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1314","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[243,244,245,18,21,246,247,248,249,250,251,252],"tindex":"f2516e08-13b1-11e5-98ab-b3fbb20bc40b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f2516e09-13b1-11e5-98ab-f5df731ef177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:84","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"f2516e0a-13b1-11e5-98ab-7d042b078843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308],"tindex":"f251951b-13b1-11e5-98ab-fd06d23b9f0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:157","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(java.lang.Object[], 0, T[], 0, java.lang.Object[].int)"},"variableMap":{"result":"object","array":"object","length":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"f251951c-13b1-11e5-98ab-81826eaaec8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"next","previous":"next","loop":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[309,310,311,312,313],"tindex":"f251951d-13b1-11e5-98ab-419bace0163b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"removeLRUEntry","beforeFirst":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359],"tindex":"f251951e-13b1-11e5-98ab-3bc7a588560d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[360,361,362,363,322,320,321,326,339,340,341],"tindex":"f251951f-13b1-11e5-98ab-e759cc4dfc66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-1},{"failures":[],"tindex":"f2519520-13b1-11e5-98ab-794cca1774e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[364,365,94,95,366,96,97,98,99,101,6,367,7,368,369,370,9,371,105,106,107,108,109,110,112,372,373,374,375],"tindex":"f2519521-13b1-11e5-98ab-6dee2d62df3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"f251bc32-13b1-11e5-98ab-c3a9b50146f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"f251bc33-13b1-11e5-98ab-470a5e66793c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[376,377,378,379,380,381,382,27,383],"tindex":"f251bc34-13b1-11e5-98ab-d3e8ecaf1edf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"total","maxElements":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[384,385,386],"tindex":"f251bc35-13b1-11e5-98ab-9157ffda96ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"status":-1},{"failures":[],"tindex":"f251bc36-13b1-11e5-98ab-d10fb0ceaa42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"f251bc37-13b1-11e5-98ab-4bfbcbab2d7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[],"tindex":"f251bc38-13b1-11e5-98ab-37719ee94452","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"status":-2},{"failures":[387,388,389,390,391,392,393,394,395,396,397,398,1,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,5,420,421,422,423,424,425,426,427,428,429],"tindex":"f251bc39-13b1-11e5-98ab-1b8076e08cc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"o1","entryValue":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f251e34a-13b1-11e5-98ab-2f59a6177255","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"iterable","coll1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-2},{"failures":[],"tindex":"f251e34b-13b1-11e5-98ab-87363fb5b8df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[94,95,96,97,98,100,101,6,367,7,105,106,107,108,109,111,112],"tindex":"f251e34c-13b1-11e5-98ab-4d807e08f5df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-1},{"failures":[430,202,431,432,433,434,435,436,437,209,210,438,439,440,441,442,443,444,445,446,447,448,449,211,212,450,451,452,453,213,454,455,253,254,456,457,255,256,458,459,460,461,462,214,463,464,465,466,467,468,469,470,471,472,473,257,258,259,474,215,216,475,476,477,478,217,479,480,260,261,481,482,262,263,483,484,485,486,487,218,488,489,490,491,492,493,494,495,496,497,498,264,265,266,499,219,220,500,501,502,503,504,505,267,268,506,507,269,270,508,509,510,511,512,221,513,514,515,516,517,518,519,520,521,522,523,271,272,524,525,222,223,526,527,528,529,530,531,273,274,532,533,275,276,534,535,536,537,538,224,539,540,541,542,543,544,545,546,547,548,549,277,278,550,551,225,226,552,553,554,555,556,557,227,558,559,560,279,561,562,563,564,565,566,280,567,228,568,569,570,571,572,281,282,573,574,283,284,575,576,577,578,579,229,580,581,582,583,584,585,586,587,588,589,590,285,286,591,592,230,231,593,594,595,596,597,232,598,599,287,288,600,601,289,290,602,603,604,605,606,233,607,608,609,610,611,612,613,614,615,616,617,291,292,618,619,234,235,620,621,622,623,624,625,626,293,294,627,628,295,296,629,630,631,632,633,236,634,635,636,637,638,639,640,641,642,643,644,297,298,299,645,237,238,646,647,648,649,650,651,239,652,653,654,300,655,656,657,658,659,660,301,661,240,662,302,303,304,663,664,305,306,307,308],"tindex":"f251e34d-13b1-11e5-98ab-4311debdd216","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[91,665,92,93,666,667,668,364,669,670,671,672,673,674,675,676,365,677,94,95,366,96,97,98,99,100,101,678,6,679,680,367,7,368,681,682,683,684,685,686,687,688,8,369,370,9,10,689,690,11,12,13,14,15,691,692,102,693,103,104,694,695,696,371,697,698,699,700,105,106,701,107,108,109,110,111,112,702,703,704,705,706,707,708,709,372,373,374,375,710,711,712,713,714,715,716,717],"tindex":"f2520a5e-13b1-11e5-98ab-81454704928f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[128],"tindex":"f2520a5f-13b1-11e5-98ab-3940149ac39f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-1},{"failures":[],"tindex":"f2520a60-13b1-11e5-98ab-9fa233a86e51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"callCounter","start":"callCounter","maxElements":"callCounter","end":"callCounter","full":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f2520a61-13b1-11e5-98ab-990d0c838ec0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,196,740,741,742,743,744,197,745,746,182,747,748,749,750,751,752,753,754,755,756,757,758,759,198,760,761,762,763,764,765,766,767],"tindex":"f2520a62-13b1-11e5-98ab-01d6c1b15c5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[16,768],"tindex":"f2520a63-13b1-11e5-98ab-fffeaddc7b15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[125,126,127,128,129,130,131],"tindex":"f2523174-13b1-11e5-98ab-a7786a7221e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:385","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[769,770,771,37,38,41,772,42,50],"tindex":"f2523175-13b1-11e5-98ab-a96930e531bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[94,95,96,97,98,101,6,367,7,105,106,107,108,109,112],"tindex":"f2523176-13b1-11e5-98ab-19c1072c3d77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[773,29,30,31,53],"tindex":"f2523177-13b1-11e5-98ab-e3b98768d1ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2523178-13b1-11e5-98ab-73a2180dbf8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"f2523179-13b1-11e5-98ab-9fc20d931ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1009","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\"(this Map)\")"},"variableMap":{"out":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[774,775,776,777],"tindex":"f252317a-13b1-11e5-98ab-9764abc98ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"f252317b-13b1-11e5-98ab-03f2a54b286c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f252317c-13b1-11e5-98ab-69e1c212bd86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:152","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()"},"status":-2},{"failures":[],"tindex":"f252588d-13b1-11e5-98ab-c57d5a89b317","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f252588e-13b1-11e5-98ab-55cb73528dbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[314,315,316,317,318,319,322,320,321,324,325,327,328,329,330,331,332,334,337,338,342,343,344,345,346,347,348,351,355,359],"tindex":"f252588f-13b1-11e5-98ab-e7aab60b1f83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"path","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[778],"tindex":"f2525890-13b1-11e5-98ab-537b158b687e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ComparatorChain<?> org.apache.commons.collections4.comparators.ComparatorChain<?> = ((org.apache.commons.collections4.comparators.ComparatorChain<?>)(java.lang.Object));\n    return (null == (java.util.BitSet) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet) : java.util.BitSet.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.BitSet)) && (null == (java.util.List<java.util.Comparator<E>>) ? null == (org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>) : java.util.List<java.util.Comparator<E>>.equals(org.apache.commons.collections4.comparators.ComparatorChain<?>.java.util.List<java.util.Comparator<?>>));\n} "},"status":-1},{"failures":[],"tindex":"f2525891-13b1-11e5-98ab-0516ebe6c9ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"status":0},{"failures":[779],"tindex":"f2525892-13b1-11e5-98ab-d71636c38a58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,196,740,741,742,743,744,197,745,746,182,747,748,749,750,751,752,753,754,755,756,757,758,759,198,760,761,762,763,764,765,766,767],"tindex":"f2525893-13b1-11e5-98ab-f7b42be4d794","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f25f02c4-13b1-11e5-98ab-5bf03c6259c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"variableMap":{"result":"object","length":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"f25f02c5-13b1-11e5-98ab-d5a02aafdeb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,196,740,741,742,743,744,197,745,746,182,747,748,749,750,751,752,753,754,755,756,757,758,759,198,760,761,762,763,764,765,766,767],"tindex":"f2619ad6-13b1-11e5-98ab-cb2e03406cd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"f2619ad7-13b1-11e5-98ab-e57dad9b3ba8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().lastIndexOf(java.lang.Object)"},"status":-2},{"failures":[119,120,121,122,123,124],"tindex":"f2619ad8-13b1-11e5-98ab-7517c2e5b958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:265","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)))"},"variableMap":{"i":"start1","script":"script","sequence1":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}