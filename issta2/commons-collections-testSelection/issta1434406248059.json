{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":177,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":673,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":91,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":819,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":280,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":368,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":858,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":424,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":562,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":519,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":520,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":503,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":717,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":835,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":185,"org.apache.commons.collections4.CollectionUtilsTest.collect":420,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":135,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":723,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":838,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":28,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":575,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":145,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":646,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":469,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":131,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":878,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":451,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":122,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":611,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":689,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":402,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":613,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":213,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":96,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":807,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":584,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":107,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":825,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":326,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":481,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":493,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":759,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":691,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":755,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":586,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":710,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":195,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":298,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":186,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":551,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":754,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":794,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":703,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":781,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":431,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":279,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":618,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":178,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":472,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":719,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":591,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":143,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":822,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":567,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":707,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":479,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":671,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":193,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":396,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":378,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":662,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":877,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":101,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":465,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":677,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":354,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":104,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":422,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":774,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":694,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":685,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":716,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":708,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":315,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":412,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":607,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":695,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":208,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":643,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":529,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":824,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":880,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":785,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":306,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":299,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":548,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":211,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":445,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":881,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":876,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":811,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":324,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":421,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":799,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":650,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":728,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":862,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":159,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":722,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":307,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":308,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":407,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":777,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":401,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":658,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":627,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":598,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":218,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":356,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":335,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":341,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":20,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":606,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":500,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":700,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":301,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":410,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":455,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":237,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":788,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":712,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":138,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":670,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":435,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":559,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":555,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":241,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":820,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":861,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":558,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":174,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":587,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":492,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":154,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":581,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":364,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":468,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":884,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":815,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":623,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":439,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":464,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":449,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":508,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":805,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":480,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":362,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":836,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":460,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":642,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":171,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":359,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":622,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":325,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":883,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":535,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":736,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":399,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":746,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":434,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":793,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":379,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":568,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":58,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":261,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":872,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":10,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":635,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":672,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":768,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":268,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":103,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":509,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":383,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":758,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":253,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":882,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":802,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":762,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":284,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":657,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":666,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":433,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":734,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":597,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":97,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":525,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":278,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":659,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":536,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":801,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":240,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":849,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":473,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":679,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":756,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":249,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":320,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":314,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":329,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":391,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":393,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":250,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":458,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":852,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":334,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":395,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":372,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":585,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":371,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":831,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":765,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":358,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":295,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":550,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":553,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":31,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":228,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":856,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":478,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":848,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":847,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":844,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":843,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":846,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":845,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":840,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":842,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":841,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":644,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":142,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":288,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":796,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":305,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":709,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":854,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":27,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":552,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":290,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":289,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":490,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":654,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":833,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":158,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":609,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":888,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":42,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":39,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":442,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":523,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":466,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":162,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":302,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":495,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":150,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":604,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":475,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":778,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":813,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":337,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":823,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":413,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":696,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":470,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":631,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":242,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":260,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":629,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":488,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":487,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":419,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":351,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":732,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":570,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":105,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":360,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":430,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":328,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":885,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":26,"org.apache.commons.collections4.map.LRUMapTest.testLRU":338,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":681,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":542,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":592,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":406,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":605,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":748,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":285,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":860,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":3,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":718,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":776,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":814,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":397,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":751,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":411,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":653,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":686,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":620,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":661,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":109,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":621,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":452,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":566,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":166,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":226,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":859,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":427,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":705,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":147,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":137,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":775,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":750,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":403,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":711,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":867,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":675,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":246,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":376,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":864,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":189,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":863,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":87,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":405,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":461,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":887,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":652,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":199,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":343,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":747,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":651,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":191,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":192,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":366,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":350,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":381,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":544,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":886,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":400,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":256,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":683,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":511,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":303,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":678,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":560,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":804,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":387,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":890,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":690,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":808,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":720,"org.apache.commons.collections4.CollectionUtilsTest.transform2":418,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":741,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":790,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":772,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":50,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":839,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":202,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":201,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":578,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":641,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":332,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":491,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":684,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":779,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":615,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":365,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":231,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":267,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":235,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":346,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":436,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":699,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":175,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":589,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":810,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":614,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":773,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":540,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":601,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":625,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":499,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":744,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":454,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":275,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":262,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":265,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":726,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":446,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":172,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":608,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":483,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":476,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":640,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":333,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":590,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":638,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":111,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":789,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":296,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":745,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":797,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":537,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":297,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":496,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":190,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":398,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":834,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":196,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":715,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":782,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":798,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":603,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":760,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":780,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":467,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":543,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":875,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":415,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":286,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":323,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":25,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":565,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":580,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":549,"org.apache.commons.collections4.ArrayStackTest.testSearch":827,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":687,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":869,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":630,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":377,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":336,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":769,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":739,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":380,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":853,"org.apache.commons.collections4.ListUtilsTest.testSubtract":531,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":447,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":626,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":81,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":697,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":18,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":879,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":477,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":729,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":188,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":41,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":743,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":784,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":704,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":588,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":866,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":806,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":234,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":556,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":547,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":783,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":636,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":663,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":248,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":113,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":521,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":282,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":304,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":507,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":850,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":16,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":223,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":528,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":795,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":459,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":437,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":816,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":692,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":837,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":546,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":501,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":212,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":829,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":828,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":349,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":244,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":676,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":647,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":873,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":7,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":526,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":706,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":187,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":688,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":423,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":281,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":385,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":602,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":99,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":219,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":583,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":770,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":170,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":17,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":95,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":375,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":272,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":94,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":369,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":502,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":146,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":510,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":767,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":264,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":868,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":545,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":633,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":752,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":524,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":830,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":66,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":116,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":408,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":522,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":595,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":386,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":217,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":504,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":538,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":569,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":572,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":321,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":809,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":293,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":664,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":574,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":361,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":714,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":792,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":330,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":639,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":660,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":628,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":702,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":133,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":106,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":220,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":344,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":79,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":727,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":725,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":753,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":557,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":274,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":763,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":457,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":161,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":576,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":573,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":667,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":126,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":67,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":800,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":331,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":443,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":803,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":857,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":474,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":266,"org.apache.commons.collections4.CollectionUtilsTest.isFull":874,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":771,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":12,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":730,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":21,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":357,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":207,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":761,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":865,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":345,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":440,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":757,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":392,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":594,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":277,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":733,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":737,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":665,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":563,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":530,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":83,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":579,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":432,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":738,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":870,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":428,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":471,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":506,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":148,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":517,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":817,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":674,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":648,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":541,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":832,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":634,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testSet":505,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":818,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":48,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":561,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":766,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":157,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":409,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":713,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":482,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":851,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":209,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":197,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":348,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":786,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":169,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":812,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":498,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":416,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":680,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":462,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":764,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":740,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":485,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":486,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":871,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":70,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":656,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":749,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":632,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":184,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":669,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":731,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":889,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":317,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":645,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":327,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":821,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":855,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":512,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":426,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":513,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":339,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":389,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":140,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":84,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":539,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":787,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":292,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":514,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":724,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":238,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":515,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":721,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":363,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":254,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":300,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":259,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":582,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":698,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":414,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":742,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":273,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":826},"transformations":[{"failures":[0],"tindex":"605385e5-13ab-11e5-9633-c9ec2b154ab1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6053acf6-13ab-11e5-9633-1feb88b9df7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"6053acf7-13ab-11e5-9633-59b631e24b62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"60566c18-13ab-11e5-9633-b1e6fe8982a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"60566c19-13ab-11e5-9633-89e347be4845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"60566c1a-13ab-11e5-9633-756686506968","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"variableMap":{"total":"length","keys":"args"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218],"tindex":"6056932b-13ab-11e5-9633-733c6a08d479","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:540","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"6056932c-13ab-11e5-9633-d53e509e291d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"variableMap":{"this":"result","mapToCopy":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"6056932d-13ab-11e5-9633-ed8f60b9c843","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:275","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K)"},"status":-2},{"failures":[219,220,221],"tindex":"6056932e-13ab-11e5-9633-272f6946121c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtIfImpl","sourcecode":"if (java.util.SortedMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[193],"tindex":"6056ba3f-13ab-11e5-9633-73fdaae95710","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"6056ba40-13ab-11e5-9633-f19d6a5045da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":0},{"failures":[222,223,224,225,226,227,228,229],"tindex":"6056ba41-13ab-11e5-9633-41bedc2d5a9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"callCounter","index":"callCounter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"6056ba42-13ab-11e5-9633-c9371c55d79d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"6056ba43-13ab-11e5-9633-b1fcf6e6c544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"6056e154-13ab-11e5-9633-67011c65a1d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[230],"tindex":"6056e155-13ab-11e5-9633-4bfa4654b2fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"6056e156-13ab-11e5-9633-f9db16aaa50d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"6056e157-13ab-11e5-9633-5d5cb39536d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"6056e158-13ab-11e5-9633-43bfc06fb05a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":0},{"failures":[231,232,233,234,235,236,237,238,239,240],"tindex":"6056e159-13ab-11e5-9633-bb9506150ce2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[241,242,243],"tindex":"6057086a-13ab-11e5-9633-47ba525b2aee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"variableMap":{"cmds":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"6057086b-13ab-11e5-9633-4d733c8560ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"6057086c-13ab-11e5-9633-23bb3e358a15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"left","h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[244],"tindex":"6057086d-13ab-11e5-9633-03c76bc230fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            int++;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"6057086e-13ab-11e5-9633-b96c85173f33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:273","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[245,246,247,248],"tindex":"60572f7f-13ab-11e5-9633-710d48f6362b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,245,246,248,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388],"tindex":"60572f80-13ab-11e5-9633-fb30497d839e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"6057cbc1-13ab-11e5-9633-311cbed224ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"6057f2d2-13ab-11e5-9633-0dc7d78b9714","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:418","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"hasNext":"debug","org.apache.commons.collections4.map.AbstractHashedMap.NO_NEXT_ENTRY":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[],"tindex":"6057f2d3-13ab-11e5-9633-d5eb2925493b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"6057f2d4-13ab-11e5-9633-7f14756816fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[389,390,0,391,392,393,394,395,396,397,398,399,400,401,402,403,404,232,233,405,234,235,236,237,406,238,239,240],"tindex":"6057f2d5-13ab-11e5-9633-03fb3af27edc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[407,408,409,410,411,412,413,414,415,416,417],"tindex":"6057f2d6-13ab-11e5-9633-43474ab45cbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"6057f2d7-13ab-11e5-9633-932b92b319a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-2},{"failures":[],"tindex":"6057f2d8-13ab-11e5-9633-71addd46b2bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:888","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} "},"variableMap":{"lengthInBits":"lengthInBits","root":"current","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[418,419,420],"tindex":"605819e9-13ab-11e5-9633-e5112ed73410","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[],"tindex":"605819ea-13ab-11e5-9633-3395fb9f74ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[421,422,423,424,425,426],"tindex":"605819eb-13ab-11e5-9633-01fb40fdb6c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"delta","vDown":"vDown","delta":"offset","end2":"offset","this":"this","i":"end2","end1":"end2","k":"delta","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[427,428,429,430,431,432,433,434,435,436,437],"tindex":"605819ec-13ab-11e5-9633-cf2d0ff24717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457],"tindex":"605819ed-13ab-11e5-9633-95b0642c2f23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"605819ee-13ab-11e5-9633-4fd8dafe8954","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"605819ef-13ab-11e5-9633-314b1280b052","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:722","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"from":"node","to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"60584100-13ab-11e5-9633-5f337f9fc9b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"60584101-13ab-11e5-9633-6d8d15ee379d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"60584102-13ab-11e5-9633-d35d62238d1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"60584103-13ab-11e5-9633-67c3de8d9846","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[504,505,506,507,508,509,510,511],"tindex":"60584104-13ab-11e5-9633-23484ca90342","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[512,513,514,515,516,517,518,519,520,521,522,523],"tindex":"60584105-13ab-11e5-9633-33399638afe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"60584106-13ab-11e5-9633-3d97a2889944","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[524,525,526,527,528,529,530,531,532,533,534,535,438,536,537,538,439,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,407,563,564,565,566,567,440,568,569,570,441,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,408,595,596,597,598,599,600,442,601,602,603,443,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,444,445,624,625,409,626,627,628,629,410,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,446,649,650,651,447,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,411,676,677,678,679,680,681,448,682,683,684,449,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,450,451,705,706,412,707,708,709,710,413,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,414,735,736,737,738,739,740,741,742,743,744,745,746,747,415,748,749,750,751,752,753,754,755,452,756,757,758,453,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,454,455,779,780,416,781,782,783,784,785,786,787,456,788,789,790,457,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,417,815,816],"tindex":"60586817-13ab-11e5-9633-45012369fc0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:256","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    return true;\n} "},"status":-1},{"failures":[817],"tindex":"60586818-13ab-11e5-9633-7b8aa9e04500","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"60586819-13ab-11e5-9633-ff640f55c65f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:116","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"6058681a-13ab-11e5-9633-07cbc80ac2ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"6058681b-13ab-11e5-9633-a96300ec6f80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"6058681c-13ab-11e5-9633-d91a16900cc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"6058681d-13ab-11e5-9633-e5b60f5ff75a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:431","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NO_PREVIOUS_ENTRY":"value","hasNext":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[818,819,820,821,822,823,824,825],"tindex":"60588f2e-13ab-11e5-9633-d3decb9d4acf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[],"tindex":"60588f2f-13ab-11e5-9633-4bb3edb51de4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"60588f30-13ab-11e5-9633-f51a27bf305b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"60588f31-13ab-11e5-9633-dfa019b36c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"60588f32-13ab-11e5-9633-fd7952f20fff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[241],"tindex":"60588f33-13ab-11e5-9633-df322d32f6a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[619,629,700,730,774],"tindex":"60588f34-13ab-11e5-9633-415b0b4536c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"60588f35-13ab-11e5-9633-9f4f9093705f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} "},"status":-2},{"failures":[],"tindex":"60588f36-13ab-11e5-9633-4db5902df959","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"variableMap":{"list1":"collection","result":"collection","bag":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-2},{"failures":[],"tindex":"60588f37-13ab-11e5-9633-17544c3759c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"lengthInBits","proposedCapacity":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[283,303,321,333,826,350,367,384],"tindex":"6058b648-13ab-11e5-9633-390af958c2d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[210,214,216,217,218,193,197],"tindex":"6058b649-13ab-11e5-9633-93902a13a645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"6058b64a-13ab-11e5-9633-2bbfdf4f0818","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"variableMap":{"this":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[],"tindex":"6058b64b-13ab-11e5-9633-35d97dba6ad2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[827],"tindex":"6058b64c-13ab-11e5-9633-03eb862c1690","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl","sourcecode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}"},"status":-1},{"failures":[828,829,830,831,832,232,238],"tindex":"6058b64d-13ab-11e5-9633-2b9f9962692c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6058b64e-13ab-11e5-9633-478bd104e3d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[247,248,246],"tindex":"6058b64f-13ab-11e5-9633-edff3ae7ac60","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[833,834],"tindex":"6058b650-13ab-11e5-9633-436301eeaf07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"6058b651-13ab-11e5-9633-fd76d46209ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"6058dd62-13ab-11e5-9633-352edc24dc67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[241],"tindex":"6058dd63-13ab-11e5-9633-39dbdf6638ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super T, ? extends T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[],"tindex":"6058dd64-13ab-11e5-9633-b5455c5b304d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:760","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[835,836,837],"tindex":"6058dd65-13ab-11e5-9633-2f879215c00d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1},{"failures":[],"tindex":"6058dd66-13ab-11e5-9633-87d491229b7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"newNode","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[169,174,176,177,193,197,204,205,207,210,211,214,215,218],"tindex":"6058dd67-13ab-11e5-9633-797f8a1b13c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"60590478-13ab-11e5-9633-69fb8dacee95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"reuse":"reuse","removeLRUEntry":"scanUntilRemovable","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-2},{"failures":[838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875],"tindex":"60590479-13ab-11e5-9633-e5e811a543f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"6059047a-13ab-11e5-9633-317f86de00d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"6059047b-13ab-11e5-9633-cfcbb114fcbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"6059047c-13ab-11e5-9633-c7ebe2c609d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":-2},{"failures":[876,877,878,355],"tindex":"6059047d-13ab-11e5-9633-7b3e5ebfe881","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:165","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:230","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"))"},"status":-1},{"failures":[461,458,459,460,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503],"tindex":"6059047e-13ab-11e5-9633-c59b1e4a9e85","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"6059047f-13ab-11e5-9633-113f0f0da719","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[879,880,881,882,883,884,885,886,835,836,887,837],"tindex":"60592b90-13ab-11e5-9633-f924f1bf332b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[],"tindex":"60592b91-13ab-11e5-9633-adef4b80730e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"60592b92-13ab-11e5-9633-e196bb7bab03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[888,889,246,247,248,890,245],"tindex":"60592b93-13ab-11e5-9633-6b1bb4198b00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"60592b94-13ab-11e5-9633-3beab9d852d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":96,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}