{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":596,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":256,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":466,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":180,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":555,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":583,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":695,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":713,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":409,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":257,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":113,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":246,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":48,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":92,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":704,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":337,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":196,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":23,"org.apache.commons.collections4.CollectionUtilsTest.collect":369,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":205,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":447,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":484,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":472,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":588,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":426,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":221,"org.apache.commons.collections4.CollectionUtilsTest.get":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":255,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":630,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":595,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":136,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":487,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":326,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":330,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":2,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":96,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":563,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":609,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":20,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":364,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":548,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":110,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":572,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":686,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":643,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":706,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":421,"org.apache.commons.collections4.CollectionUtilsTest.transform2":367,"org.apache.commons.collections4.CollectionUtilsTest.transform1":154,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":442,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":463,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":262,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":376,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":414,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":200,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":424,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":71,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":690,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":533,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":327,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":354,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":411,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":534,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":586,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":667,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":576,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":675,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":412,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":455,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":215,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":619,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":244,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":638,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":379,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":659,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":380,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":420,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":5,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":717,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":10,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":582,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":629,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":209,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":494,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":591,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":19,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":504,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":523,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":232,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveChangesMap":517,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":519,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":707,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":155,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":579,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":287,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":349,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":606,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":664,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":408,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":566,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":543,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":1,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":575,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":267,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove1":515,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":516,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":559,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":55,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":303,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":620,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":276,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":342,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":701,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":324,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":394,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":128,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":393,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":390,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":598,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":283,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":685,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":636,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":665,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":687,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":454,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":490,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":225,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":637,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":86,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":199,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":531,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":444,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":481,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":219,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":514,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":377,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":358,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":348,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":313,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":699,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":718,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":648,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":306,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":341,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":406,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":483,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":482,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":682,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":178,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":378,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":605,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":236,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":309,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":688,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":502,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":645,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":646,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":647,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":403,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":289,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":709,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":241,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":524,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":625,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":621,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":184,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":457,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":674,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":467,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastEntrySet":511,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":435,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":623,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":304,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":479,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":152,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":446,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":608,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":486,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":663,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":399,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":339,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":352,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":641,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":204,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":700,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":107,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":468,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":499,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":301,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":211,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":252,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":577,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":26,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":680,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":333,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":404,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":340,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":452,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":147,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":666,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":248,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":661,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":556,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":578,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":585,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":292,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":268,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":299,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":51,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":397,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":230,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":662,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":362,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":415,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":371,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":698,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":70,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":660,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":370,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":594,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":627,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":280,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":321,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":719,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":461,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":46,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":391,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":187,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":679,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":425,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":208,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":459,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":722,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":611,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":712,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":315,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":539,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":190,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":392,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":343,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":97,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":584,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":551,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":684,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":149,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":549,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":291,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastKeySet":512,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":607,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":243,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":363,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":186,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":650,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":318,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":250,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":300,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":561,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":275,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":635,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":465,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":260,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":464,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":222,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":264,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":610,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":485,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":428,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":632,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":693,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":497,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":441,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":231,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":602,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":557,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":386,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":545,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":711,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":544,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":436,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":372,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":213,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":302,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":413,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":671,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":601,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":263,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":288,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":538,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":581,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":422,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":571,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":274,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":423,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":560,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":153,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":612,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":290,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":702,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":322,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":400,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":689,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":567,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":603,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":597,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":458,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":673,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":470,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":683,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":604,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":258,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":616,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":478,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":568,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":296,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":50,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":503,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":308,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":626,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":617,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":238,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":721,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":328,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":652,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":145,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":552,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":278,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":634,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":633,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":589,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":251,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":460,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":385,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":480,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":565,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":491,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":173,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":360,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":535,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":564,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":522,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":166,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":165,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":570,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":293,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":618,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":696,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":161,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":163,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":527,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":160,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":469,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":493,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":554,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":715,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":305,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":624,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":317,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":228,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":590,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":353,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":681,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":474,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":226,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":580,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":644,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":171,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":532,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":311,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":541,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":234,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":297,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":476,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":448,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":271,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":137,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":334,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":331,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":355,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":488,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":314,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":507,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":100,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":720,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":398,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":642,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":365,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":374,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove1":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":438,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":710,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":85,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":338,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":99,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":697,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":708,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":72,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":439,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":593,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":694,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":592,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":501,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":237,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":227,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":669,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":500,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":537,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":550,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":77,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":547,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":691,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":368,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":239,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":677,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":220,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":676,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":284,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":546,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":569,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":84,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":462,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":528,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":529,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":206,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":615,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":310,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":553,"org.apache.commons.collections4.map.LRUMapTest.testLRU":134,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":692,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":235,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":325,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":521,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":319,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":536,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":600,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":614,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":587,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":401,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":177,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":434,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":495,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":295,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":562,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":346,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":573,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":332,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":518,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":703,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":272,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":430,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":668,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":347,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":520,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":176,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":656,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":112,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":628,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":640,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":655,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":672,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":335,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":574,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":657,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":658,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":201,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":405,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":431,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":649,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":678,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":182,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":513,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveChangesMap":508,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":489,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":210,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":492,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":558},"transformations":[{"failures":[],"tindex":"26fbf0f8-13b2-11e5-967b-5f8914b855ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[0,1,2],"tindex":"26fc3f19-13b2-11e5-967b-ede3f0d69e7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[3,4,5,6],"tindex":"26fc3f1a-13b2-11e5-967b-69f0eac94db3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"26fc3f1b-13b2-11e5-967b-d5ae1e8c689d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"26fc3f1c-13b2-11e5-967b-af6f6b80bf6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"otherValue","dataElement":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"26fc662d-13b2-11e5-967b-01c3d66213de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[37,29,31,38,39,33,36,40,41,42,43,44,45],"tindex":"26fc662e-13b2-11e5-967b-b507f61e47c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[46,47],"tindex":"26fc662f-13b2-11e5-967b-8fdad4c91b86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:222","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"26fc6630-13b2-11e5-967b-21c10f384615","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1314","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"26fc6631-13b2-11e5-967b-7ff291200dea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"26fc8d42-13b2-11e5-967b-5b1899822a0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"26fc8d43-13b2-11e5-967b-41942ebb2f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"26fc8d44-13b2-11e5-967b-1110e618ca95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"26fc8d45-13b2-11e5-967b-fd9ad231334f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"26fcb456-13b2-11e5-967b-67ea337f5f77","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"value","parentNode":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[134,135,136],"tindex":"26fcb457-13b2-11e5-967b-a9f48308a956","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"modCount","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[137],"tindex":"26fcb458-13b2-11e5-967b-af0aeb93a668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"root","start":"root","this":"this","predecessor":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[138,139,140,141],"tindex":"26fcdb69-13b2-11e5-967b-e3aeb8716c69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"variableMap":{"bound":"h","type":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"26fcdb6a-13b2-11e5-967b-877c12b0e01f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:120","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"26fcdb6b-13b2-11e5-967b-5915ca7b8350","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:276","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"26fcdb6c-13b2-11e5-967b-aff608654e76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"26fcdb6d-13b2-11e5-967b-5563567c2cb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[],"tindex":"26fcdb6e-13b2-11e5-967b-718ebac4e047","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null)"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"26fcdb6f-13b2-11e5-967b-d96cdc3bb235","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-2},{"failures":[142,143],"tindex":"26fcdb70-13b2-11e5-967b-87ea4a1e0d25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:321","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n    continue;\n} "},"status":-1},{"failures":[144,145,146,147,148,149,150,151,152,153],"tindex":"26fcdb71-13b2-11e5-967b-2d498bb26810","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"26fd0282-13b2-11e5-967b-f3784128dd24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"26fd0283-13b2-11e5-967b-e70dd5eab345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key1","i":"hashCode","key":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"26fd0284-13b2-11e5-967b-c1dd0fd9de62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"siblingNode","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[154],"tindex":"26fd0285-13b2-11e5-967b-39f8e77d0b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-1},{"failures":[155,156],"tindex":"26fd0286-13b2-11e5-967b-f1a8ad8895d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"variableMap":{"all":"all","coll":"coll","changed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:305","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187],"tindex":"26fd0287-13b2-11e5-967b-496256bfed2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[138,139,140,141],"tindex":"26fd2998-13b2-11e5-967b-b5fe40385fa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"h","index":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"26fd2999-13b2-11e5-967b-83938a2adb3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"26fd299a-13b2-11e5-967b-b18e610419b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":0},{"failures":[200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"26fd299b-13b2-11e5-967b-cba07fb3829b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[341,342,343,344,345,346],"tindex":"26fd50ac-13b2-11e5-967b-9b05ff849ce2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"offset","start":"d","end":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366],"tindex":"26fd50ad-13b2-11e5-967b-05c6685e7560","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"26fd50ae-13b2-11e5-967b-752989be1fbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:184","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n} "},"status":-2},{"failures":[367,368,369],"tindex":"26fd50af-13b2-11e5-967b-7b9c85da1b47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1039","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends I> != null) {\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.lang.Iterable<? extends I>.iterator(), org.apache.commons.collections4.Transformer<? super I, ? extends O>, R);\n} "},"status":-1},{"failures":[],"tindex":"26fd50b0-13b2-11e5-967b-1da4c56ba20c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"predecessor","current":"parentOfSubtree","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"26fd50b1-13b2-11e5-967b-8ba8478244b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-2},{"failures":[],"tindex":"26fd50b2-13b2-11e5-967b-4fee488cfc78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"26fd77c3-13b2-11e5-967b-71f847661a60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":0},{"failures":[370,371,372,373,374,145,151],"tindex":"26fd77c4-13b2-11e5-967b-938b80f06f6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"26fd77c5-13b2-11e5-967b-fbe42c3a337f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,0,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500],"tindex":"26fd77c6-13b2-11e5-967b-1d4c941fdfa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517],"tindex":"26fd77c7-13b2-11e5-967b-492e36bb2c58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[50,51,56,57,59,60,61,62,63,64,66,69,70,80,83,92,93],"tindex":"26fd77c8-13b2-11e5-967b-392b69b78631","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[134,518,519,136,520],"tindex":"26fd77c9-13b2-11e5-967b-43b00f2b1a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[521,522,8,9,10,12,11,523,14,524,525,21,22,24,26,25,526,28,29,30,31,36,43,44],"tindex":"26fd9eda-13b2-11e5-967b-ffe13c7873d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rval","dataElement":"dataElement","child":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[527,159,160,161,162,163,164,165,166,167,168],"tindex":"26fd9edb-13b2-11e5-967b-c3175ea7cd90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"status":-1},{"failures":[528,529,530,531,532,533,534,535],"tindex":"26fd9edc-13b2-11e5-967b-a9c536f3133c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"variableMap":{"stack":"stack","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"26fd9edd-13b2-11e5-967b-b5c0e9e0a531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[138,139,140,141,536],"tindex":"26fd9ede-13b2-11e5-967b-ed4b83dcf446","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"26fd9edf-13b2-11e5-967b-d957de6a202a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[537],"tindex":"26fd9ee0-13b2-11e5-967b-7d74a1eb193b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[],"tindex":"26fd9ee1-13b2-11e5-967b-a18177dbb543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[538,539,540,541],"tindex":"26fdc5f2-13b2-11e5-967b-4d26bafd3a6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:336","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n        java.util.ArrayList<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"26fdc5f3-13b2-11e5-967b-3f65de19a71c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"nodeCount","index":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":0},{"failures":[542,543,544],"tindex":"26fdc5f4-13b2-11e5-967b-7d1dfb360bfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[545,546,547,548,549,550,551,552,134,135,553,554,555,556,492,557,558,559,560,493,494,561,562,563,495,564,496,565,566,567,568,569,570,497,498,571,572,573,499,574,500,575,576],"tindex":"26fdc5f5-13b2-11e5-967b-e3fc02f7fc02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"26fdc5f6-13b2-11e5-967b-dff841aa83e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}"},"status":-2},{"failures":[341,342,343,344,345,346],"tindex":"26fdc5f7-13b2-11e5-967b-29cf516e346e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start2","delta":"start2","end2":"start2","this":"this","i":"delta","end1":"start1","k":"end2","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"26fdc5f8-13b2-11e5-967b-65921c6ee8fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"26fdc5f9-13b2-11e5-967b-3bf236d53ceb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"26fdc5fa-13b2-11e5-967b-716a67f9d7e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[577,553,453,578,555,467],"tindex":"26fded0b-13b2-11e5-967b-d9dcc6b9d9ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[579,580,581,582,583,584,585,586,545,587,378,382,588,589,590,591,592,593,594,595,546,596,392,396,597,598,599,600,601,602,603,604,549,605,406,410,606,607,608,609,420,610,611,551,612,421,425,613,614,615,616,617,618,619,620,552,621,435,439,134,518,622,623,519,0,624,625,460,461,462,626,627,628,578,629,630,631,555,632,463,633,634,464,465,635,466,467,138,139,141,474,475,476,477,520,478,479,480,636,637,638,639,640,641,642,643,556,644,481,645,646,647,482,483,648,485,557,559,493,494,561,563,495,564,496,649,565,566,567,568,569,570,497,498,571,572,573,499,574,500,650,575,576],"tindex":"26fded0c-13b2-11e5-967b-077f06687487","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[],"tindex":"26fded0d-13b2-11e5-967b-d94a2644de24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:355","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and closure map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"26fded0e-13b2-11e5-967b-6fcb1ed66c7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"26fded0f-13b2-11e5-967b-e372a42d24e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-2},{"failures":[],"tindex":"26fded10-13b2-11e5-967b-996d34c90d21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"26fe1421-13b2-11e5-967b-c9fad44d8f75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-2},{"failures":[],"tindex":"26fe1422-13b2-11e5-967b-fdc913b32287","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"parent","node":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"26fe1423-13b2-11e5-967b-6dde513d4506","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:833","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>"},"variableMap":{"previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:472","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>(this , org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , K , V)"},"status":-2},{"failures":[188,189,190,191,192,193,194,195,196,197,198,199],"tindex":"26fe1424-13b2-11e5-967b-e736977dd0e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"26fe1425-13b2-11e5-967b-15d60547f4de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"26fe1426-13b2-11e5-967b-5f8a0437b8eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"siblingNode","to":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1036","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[651,652,653,654,655,656,657,658,659,660,661,662],"tindex":"26fe1427-13b2-11e5-967b-8b4dc5b136f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"26fe3b38-13b2-11e5-967b-0161140662b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[663,664,665,666,667,668,669,670,537,671,672,672,673,673,674],"tindex":"26fe3b39-13b2-11e5-967b-7df5b79c4e1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[675,676,677,678],"tindex":"26fe3b3a-13b2-11e5-967b-8353c60d34a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[29,31,33,36,40,41,42,43,44,45],"tindex":"26fe3b3b-13b2-11e5-967b-d50daa7ebf11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"yFormerParent","rightChild":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"26fe3b3c-13b2-11e5-967b-9bcf4c51b0da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:66","type":"CtReturnImpl","sourcecode":"return ((java.util.Iterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.java.util.Iterator))"},"status":-2},{"failures":[],"tindex":"26fe3b3d-13b2-11e5-967b-35e228457fb9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[675,676,677,678],"tindex":"26fe3b3e-13b2-11e5-967b-e3acc1b96159","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"26fe3b3f-13b2-11e5-967b-49596d753c79","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"26fe3b40-13b2-11e5-967b-55a654361294","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[],"tindex":"26fe3b41-13b2-11e5-967b-6583821fa838","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:810","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException();\n} "},"status":-2},{"failures":[228,243,277],"tindex":"26fe6252-13b2-11e5-967b-a795e95f0719","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[679,680],"tindex":"26fe6253-13b2-11e5-967b-770a5971107b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[681,682,683,684,685,686,687],"tindex":"26fe6254-13b2-11e5-967b-61d11d38be68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"26fe6255-13b2-11e5-967b-e5d3096d6778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"total","currentIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[56,57,59,60,61,64,66,69,70,688,689,690,691,692,693,694,695,505,696,697,698,699,700,701,702,703,704,705,706,707,708,709,514,710,711,712,577,713,714,553,715,449,716,717,718,719,720,721,722,626,627,628,578,629,631,555,632,463],"tindex":"26fe6256-13b2-11e5-967b-376bd4803c19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"26fe6257-13b2-11e5-967b-6d6d473166d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"length","composite":"composite","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[29],"tindex":"26fe6258-13b2-11e5-967b-adc7cf1852ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","leftChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"26fe6259-13b2-11e5-967b-1745f7805139","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"o","out":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[579,580,581,582,583,584,585,586,545,587,378,382,588,589,590,591,592,593,594,595,546,596,392,396,597,598,599,600,601,602,603,604,549,605,406,410,606,607,608,609,420,610,611,551,612,421,425,613,614,615,616,617,618,619,620,552,621,435,439,518,622,623,519,0,624,625,460,461,462,626,627,628,578,629,630,631,555,632,463,633,634,464,465,635,466,467,138,139,141,474,475,476,477,520,478,479,480,636,637,638,639,640,641,642,643,556,644,481,645,646,647,482,483,648,485,557,559,493,494,561,563,495,564,496,649,565,566,567,568,569,570,497,498,571,572,573,499,574,500,650,575,576],"tindex":"26fe896a-13b2-11e5-967b-9b72dfc74bfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"i","maxElements":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:640","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n    do {\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}