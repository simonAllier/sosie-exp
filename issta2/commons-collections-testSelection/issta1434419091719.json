{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":774,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":408,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx5":752,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":335,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":260,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":549,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":515,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":493,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":474,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":446,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":746,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":604,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":605,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":689,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":130,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":593,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":601,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":713,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":652,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":693,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":454,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":200,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":176,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":662,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":183,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":192,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":352,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":770,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":286,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":202,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":677,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":139,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":416,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":563,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":469,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":541,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":616,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":227,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":69,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":270,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":271,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":589,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":142,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":487,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":259,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":559,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":338,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":592,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":758,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":460,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":404,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":544,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":766,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":20,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":661,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":29,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":704,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":310,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":686,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":311,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":557,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":414,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":34,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":35,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":33,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":300,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":353,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":617,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":162,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":574,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":333,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":660,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":711,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":628,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":700,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":357,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":548,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":120,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":245,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":308,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":490,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":671,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":519,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":724,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":627,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":633,"org.apache.commons.collections4.functors.AllPredicateTest.emptyCollectionToGetInstance":757,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":613,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":403,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":667,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":188,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":432,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":494,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":664,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":379,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":222,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":483,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":735,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":230,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":610,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":406,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":137,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":361,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":385,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":760,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":402,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":518,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":772,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":567,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":750,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":28,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":281,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":759,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":685,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":773,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":558,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":124,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":157,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":156,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":451,"org.apache.commons.collections4.map.LRUMapTest.testReset":113,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":191,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":482,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":554,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":702,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":709,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":363,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":247,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":92,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":712,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":754,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":125,"org.apache.commons.collections4.map.LinkedMapTest.testReset":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":372,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":576,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":577,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":575,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":26,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":322,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":688,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":213,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":220,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":768,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":65,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":755,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":160,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":529,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":727,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":736,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":413,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":744,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":450,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":675,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":205,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":658,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":305,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":263,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":412,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":722,"org.apache.commons.collections4.map.HashedMapTest.testClone":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":87,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":534,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":223,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":457,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":698,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":447,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":680,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":299,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":294,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":684,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":409,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":340,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":209,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":533,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":597,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":555,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":440,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":509,"org.apache.commons.collections4.SetUtilsTest.testHashCode":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":426,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":343,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":765,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":289,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":288,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":290,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":649,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":623,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":276,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":272,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":380,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":668,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":334,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":436,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":513,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":204,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":562,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":505,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":504,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":501,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":503,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":502,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":497,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":368,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":499,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":498,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":678,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":756,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":355,"org.apache.commons.collections4.map.LinkedMapTest.testClone":178,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":177,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":581,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":375,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":275,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":186,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":400,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":248,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":511,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":478,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":701,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":683,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":378,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":377,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":376,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":468,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":105,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":655,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":126,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":443,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":331,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":653,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":452,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":694,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":470,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":569,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":670,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":7,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":80,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":388,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":172,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":710,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":455,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":753,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":127,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":467,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":466,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":465,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":596,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":401,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":608,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":22,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":360,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":718,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":364,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":339,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":715,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":252,"org.apache.commons.collections4.map.LRUMapTest.testLRU":112,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":609,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":221,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":4,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":583,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":517,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":398,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":594,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":587,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":737,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":614,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":418,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":257,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":516,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":642,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":486,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":10,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":644,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":370,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":332,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":731,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":659,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":206,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":691,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":159,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":365,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":521,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":138,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":371,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":520,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":359,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":246,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":358,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":448,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":242,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":381,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":407,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":279,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":283,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":438,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":572,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":739,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":769,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":723,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":618,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":231,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":320,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":434,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":82,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":356,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":496,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":373,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":439,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":542,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":23,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":164,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":262,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":751,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":729,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":165,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":606,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":566,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":706,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":595,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":645,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":237,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":37,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":5,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":635,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":714,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":282,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":397,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":218,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":244,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":219,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":255,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":471,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalFullCollectionExists":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":313,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":764,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":669,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":315,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":314,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":743,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":728,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":695,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":274,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":732,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":128,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":674,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":250,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":551,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":565,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":459,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":342,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":696,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":203,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":420,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":621,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":226,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":579,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":539,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":570,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":580,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":679,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalFullCollectionExists":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":354,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":767,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":251,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":196,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":578,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":329,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":532,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":672,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":328,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":625,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":184,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":435,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":298,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":481,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":665,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":776,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":775,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":631,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":526,"org.apache.commons.collections4.map.LRUMapTest.testClone":111,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":651,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":287,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":344,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":207,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":67,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":510,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":383,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":599,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":190,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":656,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":367,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":393,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":430,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":561,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":445,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":369,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":523,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":692,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testCanonicalEmptyCollectionExists":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":422,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":480,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":647,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":323,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":590,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":650,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":550,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":479,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":441,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":507,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":428,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":556,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":473,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":648,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":646,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":427,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":676,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":530,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":169,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":763,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":72,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":136,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":492,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":261,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":75,"org.apache.commons.collections4.map.ReferenceMapTest.testCanonicalEmptyCollectionExists":54,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":175,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":632,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":720,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":307,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":738,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":734,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":53,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":429,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":411,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":293,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":292,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":399,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":673,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":721,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":291,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":382,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":62,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":239,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":687,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":681,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":390,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":525,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":730,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":170,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":626,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":273,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":73,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":349,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":350,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":351,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":591,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":423,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":612,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":639,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":690,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":424,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":180,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":253,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":733,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":552,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":582,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":145,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":306,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":637,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":321,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":586,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":654,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":277,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":163,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":341,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":636,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":638,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":415,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":12,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":742,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":195,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":543,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":697,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":740,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":719,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":705,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":588,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":458,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":396,"org.apache.commons.collections4.CollectionUtilsTest.isFull":531,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":147,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":657,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":433,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":666,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":546,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":600,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":425,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":522,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":485,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":301,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":634,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":256,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":540,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":527,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":602,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":682,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":456,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":607,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx5":749,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":584,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":208,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":476,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":538,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":629,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":640,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":630,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":187,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":389,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":573,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":24,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":238,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":477,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":619,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":564,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":410,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":508,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":545,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":771,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":571,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":611,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":624,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":240,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":703,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":745,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":347,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":449,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":348,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":346,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":464,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":528,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":243,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":708,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":302,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":547,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":174,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":535,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":568,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":536,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":537,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":267,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":405,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":303,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":337,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":211,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":210,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":386,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":512,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":707,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":489,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":725,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx5":747,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":444,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":115,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":212,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":106,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":761,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":762,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":488,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":419,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":185,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":153,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":236,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx5":748,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":280,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":229,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":641,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":643,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":726,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":615,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":741,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":141},"transformations":[{"failures":[],"tindex":"47bad915-13c9-11e5-96bf-35866aaa68b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:588","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188],"tindex":"47bad916-13c9-11e5-96bf-410307217842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","index":"proposedCapacity","beyond":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bb2737-13c9-11e5-96bf-494c3e9d45a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"status":-2},{"failures":[],"tindex":"47bb2738-13c9-11e5-96bf-89e9e86ae7f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-2},{"failures":[],"tindex":"47bb2739-13c9-11e5-96bf-316a3459854f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:81","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(false , org.apache.commons.collections4.Closure<? super E>[])"},"variableMap":{"cmds":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:201","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ChainedClosure.chainedClosure(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[189,190,191,192,193,194,195,196,197,198],"tindex":"47bb273a-13c9-11e5-96bf-ff2312960d88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"myCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-1},{"failures":[199],"tindex":"47bb4e4b-13c9-11e5-96bf-9fa015e46d1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bb4e4c-13c9-11e5-96bf-91fa6a1eb642","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"node","dataElement":"dataElement","child":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[200,201,202,203,204,205,206,207,208,209,210,211],"tindex":"47bb4e4d-13c9-11e5-96bf-1d5c0b06cb5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"47bb4e4e-13c9-11e5-96bf-3786ce2dbea8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"endIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"47bb4e4f-13c9-11e5-96bf-6912558551bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233,234],"tindex":"47bb7560-13c9-11e5-96bf-4bba0f267e94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-1},{"failures":[],"tindex":"47bb7561-13c9-11e5-96bf-ab67a21474ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[214,215,217,218,220,235,236,222,223,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"tindex":"47bb7562-13c9-11e5-96bf-312c6854fcfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[252,253],"tindex":"47bb7563-13c9-11e5-96bf-9d1199d49557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:101","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<? extends E>) {\n    if (java.util.HashSet<E>.contains(E)) {\n        java.util.List<E>.add(E);\n        java.util.HashSet<E>.remove(E);\n    } \n}"},"status":-1},{"failures":[0,2,254,255,256,257,258,259,260,261,262,263,4,264,265,266,267,268,269,270,271,272,273,274,275,64,65,66,67,68,69,70,72,75,78,79,109,110,111,122,129,133,134,135,136,137,138,139,141,144,147,148,151,152,153,154,155,156,157,166,167,168,169,178,276,277,278,279,280,281,282,283,284,285,179,286,287,288,289,290,291,292,293,294,295,296,297,180,181,182,298,299,300,301,302,303,304,305,306,307,184,308,309,310,311,312,313,314,315,316,317,318,319,320,321,225,226,322,227,228,229,230,231,323,186,232,324,325,326,327,328,329,330,331,332,333,334,187,335,336,337,338,339,340,341,342,343,188,344,345,346,347,348,349,350,351,352,353,354,355],"tindex":"47bb7564-13c9-11e5-96bf-69ca6a410516","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"47bb9c75-13c9-11e5-96bf-abbed66ae99a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":0},{"failures":[],"tindex":"47bb9c76-13c9-11e5-96bf-b9ec405864da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"47bbc387-13c9-11e5-96bf-974570b19fac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":0},{"failures":[],"tindex":"47bbc388-13c9-11e5-96bf-ed284c730aa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[254,356,357,264,269,270,358,359,360,361,272,273,274,275,7,8,9,26,33,34,36,39,40,43,44,45,46,47,60,61,62,69,79,86,87,89,92,93,96,97,98,99,100,121,122,123,124,129,130,131,148,155,156,158,161,162,165,166,167,168,169,362,276,363,364,286,291,292,365,366,367,368,294,295,296,297,298,369,370,308,313,314,371,372,373,374,316,317,318,319,320,375,376,377,378,321,379,380,232,328,329,381,382,383,384,331,332,333,334,335,385,386,344,349,350,387,388,389,390,352,353,354,355,391,392,393,394,395,396,397,398,399],"tindex":"47bbc389-13c9-11e5-96bf-51a1dc0f2bac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"variableMap":{"entry":"previous","previous":"previous","hashCode":"index","this":"this","index":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447],"tindex":"47bbea9a-13c9-11e5-96bf-09a25cdb261a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[423,446],"tindex":"47bbea9b-13c9-11e5-96bf-dd9bbe481668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[],"tindex":"47bbea9c-13c9-11e5-96bf-1ddf124478ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"47bbea9d-13c9-11e5-96bf-8fdfa3034ebb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-2},{"failures":[],"tindex":"47bbea9e-13c9-11e5-96bf-27ef833e4d86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"47bc11af-13c9-11e5-96bf-e38bc2ef37c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":0},{"failures":[],"tindex":"47bc11b0-13c9-11e5-96bf-013ff67bd4a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475],"tindex":"47bc11b1-13c9-11e5-96bf-6176a7b3debe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl","sourcecode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":-1},{"failures":[476,477,478,479,480,481,482,483,484,485,486,487],"tindex":"47bc11b2-13c9-11e5-96bf-ed25328bbcda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:289","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n        final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        return V;\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bc11b3-13c9-11e5-96bf-d9535781f896","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"47bc11b4-13c9-11e5-96bf-97d3add1d2c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[488,489,490,491,492,493],"tindex":"47bc11b5-13c9-11e5-96bf-236ec2fd7a91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start1","n":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"47bc11b6-13c9-11e5-96bf-1bf12d5abe53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[214,215,217,218,220,235,236,222,223,237,238,239,240,241,242,244,245,247,248,249,250,251],"tindex":"47bc11b7-13c9-11e5-96bf-93ac13ac1331","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[494],"tindex":"47bc11b8-13c9-11e5-96bf-c17cf1437aa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-1},{"failures":[495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532],"tindex":"47bc38c9-13c9-11e5-96bf-bf577bc86ef9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-1},{"failures":[533],"tindex":"47bc38ca-13c9-11e5-96bf-1f00f2677e99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:195","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} "},"status":-1},{"failures":[534],"tindex":"47bc38cb-13c9-11e5-96bf-71d509cd7ede","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"47bc38cc-13c9-11e5-96bf-dfc0107034bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"from","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"47bc38cd-13c9-11e5-96bf-0da4b765c143","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"47bc38ce-13c9-11e5-96bf-0ffe514a8377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:95","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return false;\n} "},"status":-2},{"failures":[535,536,537,538,539,540,541,542,543],"tindex":"47bc38cf-13c9-11e5-96bf-15e86973d76a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"47bc38d0-13c9-11e5-96bf-2f10acc75974","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"47bc38d1-13c9-11e5-96bf-1ba9191eb932","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[544,545,546,547,548,549,550,551,552,553],"tindex":"47bc5fe2-13c9-11e5-96bf-a5092b261907","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[448,554,555,556,449,450,451,557,452,453,558,454,455,456,559,457,458,560,459,561,562,460,461,563,564,565,462,463,464,465,466,467,468,566,567,469,568,569,570,470,571,471,472,473,474,475],"tindex":"47bc5fe3-13c9-11e5-96bf-df5c4436807b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-1},{"failures":[572,573,574,575,576,577,578,579,580,343,188],"tindex":"47bc5fe4-13c9-11e5-96bf-2190ec9fa9c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[581,582,583,584],"tindex":"47bc5fe5-13c9-11e5-96bf-69d5926e0c8e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[585,586,587,588,589],"tindex":"47bc5fe6-13c9-11e5-96bf-8953c7222bc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:115","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"47bc5fe7-13c9-11e5-96bf-3fd2a8e6a4d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[590,212,591,592,593,594,595,596,597],"tindex":"47bc86f8-13c9-11e5-96bf-e3a5f04c7f43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[598],"tindex":"47bc86f9-13c9-11e5-96bf-c126b458461b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bc86fa-13c9-11e5-96bf-6b5bee8c63e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"47bc86fb-13c9-11e5-96bf-2da0258f0113","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:263","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"null keys not allowed\");\n} "},"status":-2},{"failures":[137,144,158,161,281,285,365,366],"tindex":"47bc86fc-13c9-11e5-96bf-c1bae64cbf03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-1},{"failures":[599],"tindex":"47bc86fd-13c9-11e5-96bf-d18e68513186","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey())"},"status":-1},{"failures":[600,601],"tindex":"47bc86fe-13c9-11e5-96bf-054334052c90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"cursor":"cursor","node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[449,450,451,461,465,466,568,571,602,603,604,605,606,607],"tindex":"47bc86ff-13c9-11e5-96bf-b75929e5b7e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"47bc8700-13c9-11e5-96bf-fd58aaa95e6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} "},"status":-2},{"failures":[],"tindex":"47bc8701-13c9-11e5-96bf-f7e09bad70c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"47bcae12-13c9-11e5-96bf-6d61773801c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"47bcae13-13c9-11e5-96bf-2b5ff7140eeb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[189,190,191,192,193,194,195,196,197,198],"tindex":"47bcae14-13c9-11e5-96bf-237cad67a3cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"47bcae15-13c9-11e5-96bf-75304382296f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"value","removeIndex":"value","currentIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[608,609],"tindex":"47bcae16-13c9-11e5-96bf-63f73f692eb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1182","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<T>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"47bcae17-13c9-11e5-96bf-237061104821","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"47bcae18-13c9-11e5-96bf-a7e8943c0721","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:160","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.checkLocked()"},"status":-2},{"failures":[],"tindex":"47bcae19-13c9-11e5-96bf-1359b197fe32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:315","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.ListIterator<java.util.Map.Entry<K, V>>.next()"},"variableMap":{"iterator":"iterator","last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":0},{"failures":[],"tindex":"47bcae1a-13c9-11e5-96bf-93d49eedae3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:304","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627],"tindex":"47bcae1b-13c9-11e5-96bf-793a498c071e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[628,629,630,631,632,633],"tindex":"47bcae1c-13c9-11e5-96bf-8389ecd355f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[535,536,537,538,539,540,541,542,543,634,635],"tindex":"47bcd52d-13c9-11e5-96bf-830bec244bb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"47bcd52e-13c9-11e5-96bf-755f2fe9a57b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[488,489,490,491,492,493],"tindex":"47bcd52f-13c9-11e5-96bf-33c7f66b4b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"offset","d":"delta","offset":"start2","vDown":"vDown","delta":"offset","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vUp","equator":"equator","end2":"d","end1":"delta","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[636,637,638,639,640,641,642,643,644,645,646,647,648],"tindex":"47bcd530-13c9-11e5-96bf-5fa0476c3ed4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-1},{"failures":[0,254,356,357,649,255,256,257,258,259,260,261,650,262,651,263,652,653,4,264,654,655,265,266,267,268,269,270,271,358,656,657,359,360,658,659,361,272,273,274,275,5,7,8,9,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,58,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,109,112,115,116,117,118,660,661,662,362,663,664,665,666,667,276,363,364,668,277,278,279,280,281,282,283,669,284,670,285,671,672,179,286,673,674,287,288,289,290,291,292,293,365,675,676,366,367,677,678,368,294,295,296,297,180,298,369,370,679,299,300,301,302,303,304,305,680,306,681,307,682,683,184,308,684,685,309,310,311,312,313,314,315,371,686,687,372,373,688,689,374,316,317,318,319,320,690,691,692,375,376,377,378,185,321,379,380,693,225,226,322,227,228,229,230,694,231,695,323,696,697,186,232,698,699,324,325,326,327,328,329,330,381,700,701,382,383,702,703,384,331,332,333,334,335,385,386,704,336,337,338,339,340,341,705,706,342,707,343,708,709,188,344,710,711,345,346,347,348,349,350,351,387,712,713,388,389,714,715,390,352,353,354,355,716,717,718,719,720,721,391,392,722,723,724,725,393,726,394,727,728,729,730,731,732,733,734,735,396,397,736,737,738,739,398,740,399,741,742,743],"tindex":"47bcd531-13c9-11e5-96bf-3ddc08c5f8a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:551","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"newCapacity","expectedModCount":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[],"tindex":"47bcfc42-13c9-11e5-96bf-0533d4f982a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"start","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"47bcfc43-13c9-11e5-96bf-0306bf5e7c87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[744,421,444],"tindex":"47bcfc44-13c9-11e5-96bf-c3d56eb24c25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bcfc45-13c9-11e5-96bf-e5c8d701e402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[535,536,537,538,539,745,540,541,542,543,634,635],"tindex":"47bcfc46-13c9-11e5-96bf-d9851ed21fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"47bcfc47-13c9-11e5-96bf-9379a9e1bb44","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"47bcfc48-13c9-11e5-96bf-a96866a7fcb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[746],"tindex":"47bcfc49-13c9-11e5-96bf-7763f39afd11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"lastReturned","maxElements":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1},{"failures":[],"tindex":"47bcfc4a-13c9-11e5-96bf-5d81c3f435f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[747,748,749,750,751,752,753,754,755,756,756,757,758,758,759],"tindex":"47bcfc4b-13c9-11e5-96bf-b3622b63c67b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1},{"failures":[760],"tindex":"47bd235c-13c9-11e5-96bf-138c2a498c66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"47bd235d-13c9-11e5-96bf-4f19ac4d05fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"rightChild","dataElement":"dataElement","child":"rightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"47bd235e-13c9-11e5-96bf-dd38ec48c06a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-2},{"failures":[],"tindex":"47bd235f-13c9-11e5-96bf-7f6e5a285010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:203","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"47bd2360-13c9-11e5-96bf-43e77cc0f787","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:133","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"47bd2361-13c9-11e5-96bf-fd2b7b5f30a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"data","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[214,215,217,218,220,235,236,222,223,761,762,763,533,597,764,765,766,767,768,769,633,770],"tindex":"47bd2362-13c9-11e5-96bf-2d8345ddfcfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"47bd2363-13c9-11e5-96bf-33fcfc601a2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[771,772,773,774,544,545,775,776,546,547,548,549,550,551,552,553],"tindex":"47bd2364-13c9-11e5-96bf-d590b8f945d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"47bd4a75-13c9-11e5-96bf-71bfdb5040a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"47bd4a76-13c9-11e5-96bf-ff2a71ce1ae4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:535","type":"CtReturnImpl","sourcecode":"return (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 4) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))"},"status":-2},{"failures":[],"tindex":"47bd4a77-13c9-11e5-96bf-df491f5f5e54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:831","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}