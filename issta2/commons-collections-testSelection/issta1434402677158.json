{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":120,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":87,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":392,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":422,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":309,"org.apache.commons.collections4.map.StaticBucketMapTest.testEqualsNull":413,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":80,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":357,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":347,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":356,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":57,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":115,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":430,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":36,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":405,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":3,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":41,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":329,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":402,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":447,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":145,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":302,"org.apache.commons.collections4.CollectionUtilsTest.get":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":13,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":411,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":106,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":166,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":429,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":204,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testFullIterator":460,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":200,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":349,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":171,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":227,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":147,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":272,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":296,"org.apache.commons.collections4.CollectionUtilsTest.select":389,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":322,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":271,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testIterator":461,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":368,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":72,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":338,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":380,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":107,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":251,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testFullIterator":463,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":478,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":255,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":412,"org.apache.commons.collections4.CollectionUtilsTest.intersection":404,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":378,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":248,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":2,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":442,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":167,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":330,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":477,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":211,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":479,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":318,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":49,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":471,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":208,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":260,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":258,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":350,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":274,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":90,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":226,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":241,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":135,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":299,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":19,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":289,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":172,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":262,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":163,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":53,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":282,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":162,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":29,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":362,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":393,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":370,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":126,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":78,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":328,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsSelfHashCode":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":105,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":259,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":139,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":216,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":265,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":46,"org.apache.commons.collections4.CollectionUtilsTest.union":403,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":300,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":189,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSimpleSerialization":59,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":421,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":85,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":141,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":417,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":399,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":233,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":382,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":435,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":140,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testEmptyIterator":462,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":154,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":353,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":174,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":234,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":424,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":238,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":326,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":331,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":12,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":4,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":280,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":303,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":102,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":336,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":348,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":203,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":69,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":244,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":395,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":99,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":475,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":165,"org.apache.commons.collections4.ListUtilsTest.testSubtract":187,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":281,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":148,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":247,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":473,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":207,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":97,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":288,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":434,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":366,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":449,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":218,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":308,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":410,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":199,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":195,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":113,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":408,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":298,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":212,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":198,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":270,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":470,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":196,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":416,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":256,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":379,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":355,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":134,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":252,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":317,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testFullIterator":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":175,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":186,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":427,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":190,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMakeMap":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":361,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":433,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":415,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":384,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":205,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":456,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":70,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":20,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":440,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":452,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":315,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":431,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":358,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":332,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":423,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":409,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":335,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":354,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalFullCollectionExists":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":168,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":231,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":307,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":443,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":426,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":79,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":169,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":224,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":472,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":301,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":164,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":5,"org.apache.commons.collections4.ListUtilsTest.testPartition":390,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":213,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":290,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":279,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":125,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIteratorSet":457,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":321,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":385,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":341,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":360,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":425,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testIterator":458,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":156,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":55,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":436,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":161,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":439,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":28,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":284,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":136,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":398,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":441,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPutAll":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":264,"org.apache.commons.collections4.map.HashedMapTest.testClone":159,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":267,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":476,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":170,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":344,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":364,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":394,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":345,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":337,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testEmptyIterator":459,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":210,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":283,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":314,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":334,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEmptyMapCompatibility":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":108,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":127,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":254,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":286,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":406,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":217,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":444,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":104,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":266,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":367,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":184,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":183,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":180,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":323,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":179,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":225,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":182,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":268,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":181,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":176,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":178,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":240,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":312,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":407,"org.apache.commons.collections4.map.LinkedMapTest.testClone":142,"org.apache.commons.collections4.ListUtilsTest.testSelect":388,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyIterator":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":26,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":263,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":464,"org.apache.commons.collections4.map.UnmodifiableMapTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":221,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":66,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":414,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":377,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":15,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":453,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":292,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":194,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":333,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":451,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":383,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":305,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":381,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":324,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":351,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":365,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":122,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":245,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":277,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":173,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":342,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.CollectionUtilsTest.find":84,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":249,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":14,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":450,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":420,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":387,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":419,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":359,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":375,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":374,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":339,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":295,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":446,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":373,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":304,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":32,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":146,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":428,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":287,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":311,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":340,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":220,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":261,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":448,"org.apache.commons.collections4.map.UnmodifiableMapTest.testUnmodifiable":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":278,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":294,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":466,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":346,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":230,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":130,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":438,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":152,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":474,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":401,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":215,"org.apache.commons.collections4.map.UnmodifiableMapTest.testCanonicalEmptyCollectionExists":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":243,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":313,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":222,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":297,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":293,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":310},"transformations":[{"failures":[],"tindex":"129e5002-13a3-11e5-afde-a5e1cc186832","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"12a04bd3-13a3-11e5-afde-4b30cbe44d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"12a04bd4-13a3-11e5-afde-2977afb3213d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"12a04bd5-13a3-11e5-afde-83d23585b96b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"12a072e6-13a3-11e5-afde-7d0b723f79c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"12a18457-13a3-11e5-afde-f1d8e7df8b54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"12a18458-13a3-11e5-afde-7d79915b3d2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[75,76,77,78,79,80],"tindex":"12a18459-13a3-11e5-afde-e79891082a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"12a1845a-13a3-11e5-afde-d1a442cc8854","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:132","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[81,82],"tindex":"12a1845b-13a3-11e5-afde-b78492bedf45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:65","type":"CtReturnImpl","sourcecode":"return int == (org.apache.commons.collections4.trie.KeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY":"startIndex","bitIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl","sourcecode":"return (this.int) > (this.int)"},"status":-1},{"failures":[83],"tindex":"12a1ab6c-13a3-11e5-afde-77dd289c8059","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-1},{"failures":[],"tindex":"12a1ab6d-13a3-11e5-afde-2d728e94be38","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:393","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Collection)\" : java.lang.Object));\n    boolean = java.util.Iterator<E>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":-2},{"failures":[84],"tindex":"12a1ab6e-13a3-11e5-afde-af88bbd79634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:644","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return T;\n} "},"status":-1},{"failures":[],"tindex":"12a1ab6f-13a3-11e5-afde-5579d136ba22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"12a1ab70-13a3-11e5-afde-039f3cd91f8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:621","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (O.equals(java.lang.Object)) {\n        int++;\n    } \n}"},"status":-2},{"failures":[],"tindex":"12a1ab71-13a3-11e5-afde-15f1e09cb8ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[85],"tindex":"12a1d282-13a3-11e5-afde-15e5d56513b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[86,87,88,89,90,91,92,93],"tindex":"12a1d283-13a3-11e5-afde-8ffdc22416cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"hash2","removeIndex":"hash1","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"12a1d284-13a3-11e5-afde-b919185f5e2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"12a1d285-13a3-11e5-afde-37cdf808c5dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"start1","currentIndex":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-2},{"failures":[86,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"12a1d286-13a3-11e5-afde-29f8edeb3f4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[172,173,174,175],"tindex":"12a1f997-13a3-11e5-afde-2f7b263fd148","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"y","leftChild":"y","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[176,177,178,179,180,181,182,183,184,185,186],"tindex":"12a1f998-13a3-11e5-afde-b362146811d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304],"tindex":"12a1f999-13a3-11e5-afde-094dae90ec7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"12a220aa-13a3-11e5-afde-0d636cb990a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"variableMap":{"this":"set","set1":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"12a220ab-13a3-11e5-afde-c7edbb557941","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[11,12,13,14,15,17,18,19,20,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353],"tindex":"12a220ac-13a3-11e5-afde-dfc9d9cc2023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[188,187],"tindex":"12a220ad-13a3-11e5-afde-ff19bf60e1d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"12a220ae-13a3-11e5-afde-6759ebd3b54c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>._putAll(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"12a220af-13a3-11e5-afde-c9a8c398a2df","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"result","length":"size","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[354,355],"tindex":"12a220b0-13a3-11e5-afde-dfa32f917ce0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"canRemove":"iDoLoop"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} "},"status":-1},{"failures":[356,357,358,9,10,359,360,361,362,11,12,363,13,14,15,16,364,17,365,18,366,367,19,20,368,369,370,371,372,373,374,375,376,377,378,379,380,21,381,382,383,22,23,24,384,385],"tindex":"12a247c1-13a3-11e5-afde-397e0d77a368","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"allNull","nextCalled":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[386,387],"tindex":"12ab2162-13a3-11e5-afde-a72687c12fd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-1},{"failures":[388,389],"tindex":"12ab2163-13a3-11e5-afde-8bf96a5bff5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:923","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"12ac0bc4-13a3-11e5-afde-65be3329d0fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"12ad4445-13a3-11e5-afde-ff0f6dab9cc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.MapIterator<? extends K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\");\n} "},"status":-2},{"failures":[189,204,224,237,250,265,280],"tindex":"12ad6b56-13a3-11e5-afde-5f25fa6353d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"current","key2":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:153","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"12ad6b57-13a3-11e5-afde-8f4c0dbb5845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[390],"tindex":"12ad6b58-13a3-11e5-afde-f73dcb0f2d60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-1},{"failures":[],"tindex":"12ad6b59-13a3-11e5-afde-bbc7cc6d1acb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:571","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    break;\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"12ad6b5a-13a3-11e5-afde-ffed471e21a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"variableMap":{"path":"root","current":"root","lengthInBits":"lengthInBits","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"12ad6b5b-13a3-11e5-afde-a17becc93d66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"12ad6b5c-13a3-11e5-afde-a7823da22ca5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[],"tindex":"12ad6b5d-13a3-11e5-afde-4fc92ff1ea6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[172,173,391,174,392,175,393,394,395],"tindex":"12ad6b5e-13a3-11e5-afde-9b421026031d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"12ad6b5f-13a3-11e5-afde-671e2400fe4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"rval","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"12ad9170-13a3-11e5-afde-31d2299bb299","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","leftChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"12ad9171-13a3-11e5-afde-5f62d5ea4f9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"child","parent":"child","left":"child","h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[75,76,77,78,79,80],"tindex":"12af6632-13a3-11e5-afde-a5e034c6ab08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vDown","start1":"start1","d":"start2","vDown":"vUp","delta":"start1","end2":"end1","this":"this","i":"delta","end1":"offset","k":"offset","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"12af6633-13a3-11e5-afde-49c19eaf5842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"12af8d44-13a3-11e5-afde-43e5b06ca432","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1746","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"12af8d45-13a3-11e5-afde-534778de27d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"12bbe956-13a3-11e5-afde-1fb856d0fad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"variableMap":{"this":"uniqueSet","set1":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-2},{"failures":[],"tindex":"12bbe957-13a3-11e5-afde-e94140585306","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[396],"tindex":"12bbe958-13a3-11e5-afde-89bf47912a42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"modified","nextCalled":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"12bbe959-13a3-11e5-afde-cd3f33d5e075","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"12bbe95a-13a3-11e5-afde-5ba1d126180d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"12bbe95b-13a3-11e5-afde-237b34f8f140","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"12bbe95c-13a3-11e5-afde-59550f964132","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:167","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[397,398,399,400,401,402,403,404,405,406],"tindex":"12bbe95d-13a3-11e5-afde-a166e8d7e96e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1105","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? extends C> instanceof java.util.Collection<?>) {\n    return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)));\n} "},"status":-1},{"failures":[],"tindex":"12bbe95e-13a3-11e5-afde-5f1284219371","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"12bc106f-13a3-11e5-afde-e7312cf3c1af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"a","defaultValue":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"12bc1070-13a3-11e5-afde-37a6733be835","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:924","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n        R.add(O);\n    } \n}"},"status":-2},{"failures":[],"tindex":"12bc1071-13a3-11e5-afde-0f1e6fc73a95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"12bc1072-13a3-11e5-afde-cdd2160fcb60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"o","defaultValue":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[172,173,407,391,174,392,175,393,394,395],"tindex":"12bc1073-13a3-11e5-afde-d50a4fc8200b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"y","node":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"12bc1074-13a3-11e5-afde-277575472582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:147","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[75,76,77,78,79,80],"tindex":"12bc1075-13a3-11e5-afde-1deeac008c32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"delta","vDown":"vUp","delta":"start2","end2":"k","this":"this","i":"end1","end1":"delta","k":"i","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[408],"tindex":"12bc1076-13a3-11e5-afde-e1fd4f1cd729","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:74","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[356,357,9,10,359,360,361,11,12,13,14,15,16,364,17,18,19,20,371,372,374,375,376,380,21,22,385],"tindex":"12bc1077-13a3-11e5-afde-4b036412050a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"12bc1078-13a3-11e5-afde-f79c8d2a01df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"12bc1079-13a3-11e5-afde-8519cab17f10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":-2},{"failures":[],"tindex":"12bc378a-13a3-11e5-afde-a598749560cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[172,173,391,174,392,175,393,394,395],"tindex":"12bc378b-13a3-11e5-afde-45f9fe83d8d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"yFormerRightChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"12bc378c-13a3-11e5-afde-a50e4ab1bce1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:81","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[409,410],"tindex":"12bc378d-13a3-11e5-afde-cd27ef9bcd13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"remove"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"12bc378e-13a3-11e5-afde-a30d36ea34ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl","sourcecode":"this.int = -1"},"variableMap":{"lastItemIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:525","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[411,412],"tindex":"12bc378f-13a3-11e5-afde-773c7a105c01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"12bc3790-13a3-11e5-afde-bb69de7754b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[68,413],"tindex":"12bc3791-13a3-11e5-afde-5112c91a9cd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[414,415,416,417,191,418,419,420,421,422,423],"tindex":"12bc3792-13a3-11e5-afde-cf8d709dcc2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-1},{"failures":[424,425,426,427,428,429,430,431,432,433,434,435],"tindex":"12bc3793-13a3-11e5-afde-c1f5dd5e3d07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:359","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    if (int == (-1)) {\n        int = int;\n        E = java.util.ArrayList<E>.get(int);\n    } else {\n        final E E = java.util.ArrayList<E>.get(int);\n        if ((java.util.Comparator<? super E>) == null) {\n            throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n        } \n        if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n            E = E;\n            int = int;\n        } \n    }\n} "},"status":-1},{"failures":[436,213,233,246],"tindex":"12bc3794-13a3-11e5-afde-e9611519dc28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[437],"tindex":"12bc5ea5-13a3-11e5-afde-2333a2da9977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1279","type":"CtReturnImpl","sourcecode":"return java.util.Enumeration<?>.nextElement()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"status":-1},{"failures":[],"tindex":"12bc5ea6-13a3-11e5-afde-63204aa25f0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"leftChild","replacement":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[397,398,399,438,439,440,441,442,400,401,443,444,445,446,403,404,447,405,406],"tindex":"12bc5ea7-13a3-11e5-afde-af8ef8d4ea76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[448,449,450,451],"tindex":"12bc5ea8-13a3-11e5-afde-a7cbc5642edf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:105","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.clear()"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"12bc5ea9-13a3-11e5-afde-89a3481316b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:917","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"12bc5eaa-13a3-11e5-afde-055dedc682a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:332","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"12bc5eab-13a3-11e5-afde-d3adfda2a4f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:546","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[356,357,9,10,359,360,361,11,12,13,14,15,16,364,17,18,19,20,371,372,374,375,376,380,385],"tindex":"12bc5eac-13a3-11e5-afde-5b2e69bed5e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:427","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:457","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"12bc5ead-13a3-11e5-afde-3f585a777b65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"variableMap":{"previous":"next","this":"this","header":"header","i":"i","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:134","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int++;\n}"},"status":-2},{"failures":[452,453,454,455,456,457,458,459,460,461,462,463,464],"tindex":"12bc5eae-13a3-11e5-afde-cdcf18a5730c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"size":"endIndex","maxSize":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:111","type":"CtReturnImpl","sourcecode":"return (this.int) < (this.int)"},"status":-1},{"failures":[465,466,467,468,469,470,471,472,473,474,475,476,477],"tindex":"12bc85bf-13a3-11e5-afde-7b8c51646639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:453","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values())"},"status":-1},{"failures":[75,76,78,79],"tindex":"12bc85c0-13a3-11e5-afde-1b4b20471fe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"12bc85c1-13a3-11e5-afde-2520c75c3a98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"variableMap":{"h":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1337","type":"CtAssignmentImpl","sourcecode":"int = ((java.util.Collection<?>)(java.lang.Object)).size()"},"status":-2},{"failures":[478,479],"tindex":"12bc85c2-13a3-11e5-afde-77ce317d0237","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-1},{"failures":[],"tindex":"12bc85c3-13a3-11e5-afde-a37a748e3ac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"12bc85c4-13a3-11e5-afde-477ce78f1aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}