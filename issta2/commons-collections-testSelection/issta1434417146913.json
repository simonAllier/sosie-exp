{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":141,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":548,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":70,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":252,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":496,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":146,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":380,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":396,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":386,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":312,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":327,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":453,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":434,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":400,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":567,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":152,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":422,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":485,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":344,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":163,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":232,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":270,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":258,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":225,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":518,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":535,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":351,"org.apache.commons.collections4.CollectionUtilsTest.get":419,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":157,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":481,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":198,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":512,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":353,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":395,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":101,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":508,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":145,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":298,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":526,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":549,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":173,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":561,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":402,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":220,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":542,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":556,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":288,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":183,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":16,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":249,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":355,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":317,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":475,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":460,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":223,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":375,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":314,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":148,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":580,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":165,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":0,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":116,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":573,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":315,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":160,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":411,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":466,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":343,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":324,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":505,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":153,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":219,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":325,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":577,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":486,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":193,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":426,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":583,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":482,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":346,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":409,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":336,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":403,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":462,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":521,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":137,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":86,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":310,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":215,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":427,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":576,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":34,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":570,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":305,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":555,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":311,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":420,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":507,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":459,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testSerializeDeserializeThenCompare":484,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.map.Flat3MapTest.testEmptyMapCompatibility":7,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":136,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":56,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":467,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":76,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":451,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":356,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":372,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":99,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":297,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":289,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":544,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":568,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":214,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":83,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":169,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":239,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":587,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":276,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":245,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":164,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":501,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":474,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":592,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":593,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":156,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":267,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":430,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":423,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":349,"org.apache.commons.collections4.list.TreeListTest.testRemove":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":406,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":111,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":575,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":511,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":591,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":370,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":487,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":515,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":572,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":269,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":309,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":450,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":268,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":503,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":536,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":551,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":95,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":373,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":159,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":407,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":401,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":528,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":306,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":405,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":429,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":472,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.map.LRUMapTest.testClone":545,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":581,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":281,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":265,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":61,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":360,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":231,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":365,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":417,"org.apache.commons.collections4.ListUtilsTest.testSubtract":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":272,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":25,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":302,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":537,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":415,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":371,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":424,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":254,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":341,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":90,"org.apache.commons.collections4.list.TreeListTest.testListEquals":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":192,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":121,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":385,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":571,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":155,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":329,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":582,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":108,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":279,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":307,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":1,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":431,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":412,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":207,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":66,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":495,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":205,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":117,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":506,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":393,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":40,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":500,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":140,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":558,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":88,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":236,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":235,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":180,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":171,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":585,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.CollectionUtilsTest.filter":554,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":58,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":391,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":538,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":80,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":471,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":488,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":247,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":294,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":224,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":491,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":480,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":497,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":15,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":313,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":589,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":590,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":257,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":543,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":295,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":238,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":452,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":27,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":414,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":216,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":32,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":73,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":525,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":510,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":251,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":338,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":250,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":352,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":271,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":227,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":397,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":437,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":339,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":358,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":513,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":331,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":532,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":383,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":421,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":529,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":282,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":283,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":479,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":519,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":316,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":87,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":541,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":574,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.map.HashedMapTest.testClone":552,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":418,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":132,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":381,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":197,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":303,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":374,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":195,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":464,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":362,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":264,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":390,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":174,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":354,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":465,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":490,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":103,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":125,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":410,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":469,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":144,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":266,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":584,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":212,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":539,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":559,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":185,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":357,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":177,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":367,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":458,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":433,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":550,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":564,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":55,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":498,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":566,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":335,"org.apache.commons.collections4.list.TreeListTest.testBug35258":14,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":389,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":186,"org.apache.commons.collections4.map.LinkedMapTest.testClone":546,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":97,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":23,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":569,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":31,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":540,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":523,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":12,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":262,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":428,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":233,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":520,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":206,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":494,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":201,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":361,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":489,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":179,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":202,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":382,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":456,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":286,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":455,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":292,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":368,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":188,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":208,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":35,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":379,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":446,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":517,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":516,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":211,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":449,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":565,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":342,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":436,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":477,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":478,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":444,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":443,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":476,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":440,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":376,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":442,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":562,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":579,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":162,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":350,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":470,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":578,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":445,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":463,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":483,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":388,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":181,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":377,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":175,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":531,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":461,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":119,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":553,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":304,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":364,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":337,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":363,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":524,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":468,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":118,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":492,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":534,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":399,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":194,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":448,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":81,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":432,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":509,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":143,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":113,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":131,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":504,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":114,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":416,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":191,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":392,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":340,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":109,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":128,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":234,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":308,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":560,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":530,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":586,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":533,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":275,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":387,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":347},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"c08de2e7-13c4-11e5-b70a-d3b656aa4277","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"e","it1":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[6,7,8,9],"tindex":"c08e09f8-13c4-11e5-b70a-b73a33ef11a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"count","lengthInBits":"count","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"count","otherOffsetInBits":"count","otherLengthInBits":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"c08e3109-13c4-11e5-b70a-47e23a5e91ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"endIndex","index":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"c08e310a-13c4-11e5-b70a-817deadb32a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode","replacement":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[44,45,46,47],"tindex":"c08e581b-13c4-11e5-b70a-03f6d392fdbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"c08e581c-13c4-11e5-b70a-8157e1e2218c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-1},{"failures":[64,65],"tindex":"c08e581d-13c4-11e5-b70a-8b497163d05c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:129","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.List<E>) {\n    if (!(org.apache.commons.collections4.bag.HashBag<E>.remove(E, 1))) {\n        java.util.ArrayList<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"c08e581e-13c4-11e5-b70a-41dfa4c6990e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"y","currentNode":"y","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"c08e7f2f-13c4-11e5-b70a-5f9f24580b57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"c08e7f30-13c4-11e5-b70a-cf742fe7e447","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"c08ea641-13c4-11e5-b70a-bfce28130440","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:431","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NO_PREVIOUS_ENTRY":"childValue","hasNext":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:993","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n} else {\n    org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n    final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n    if (int == (-1)) {\n        java.io.PrintStream.print(java.lang.Object);\n    } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n        java.io.PrintStream.print(\"(this Map)\");\n    } else {\n        java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n    }\n    if (boolean && (java.lang.Object != null)) {\n        java.io.PrintStream.print(' ');\n        java.io.PrintStream.println(java.lang.Object.getClass().getName());\n    } else {\n        java.io.PrintStream.println();\n    }\n}"},"status":-2},{"failures":[111],"tindex":"c08ea642-13c4-11e5-b70a-5f0c323127ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[],"tindex":"c08ea643-13c4-11e5-b70a-d5197e96a759","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"c08ea644-13c4-11e5-b70a-2f8dda40bfc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"variableMap":{"iterator":"it","this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[112,113,114,115,116,117],"tindex":"c08ea645-13c4-11e5-b70a-e993aee90574","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-1},{"failures":[118],"tindex":"c08ecd56-13c4-11e5-b70a-11171ca92497","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-1},{"failures":[],"tindex":"c08ecd57-13c4-11e5-b70a-0f711b7e3c55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:126","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[119,120,121,122],"tindex":"c08ecd58-13c4-11e5-b70a-f501fab2e357","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[123,124,125,126,127,128,129],"tindex":"c0911749-13c4-11e5-b70a-811ea747d020","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,34,159,160,161,35,162,163,164,165,166,167,168,36,169,170,37,38,171,172,39,40,41,42,43,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"c091174a-13c4-11e5-b70a-f7d90a047491","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"c0913e5b-13c4-11e5-b70a-f3d84fe010a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"c0913e5c-13c4-11e5-b70a-cfc7398beccf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null)"},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"c0913e5d-13c4-11e5-b70a-7921232138a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[343,344,345,346,347,348,349,350,351,352],"tindex":"c091656e-13c4-11e5-b70a-b1497aebfb25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:355","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[353,354,355,356,357,358,359,360,361,362,363,364],"tindex":"c091656f-13c4-11e5-b70a-49fd13032061","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[365,366],"tindex":"c0916570-13c4-11e5-b70a-895cca1c6102","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:62","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Bag<E>"},"status":-1},{"failures":[],"tindex":"c0916571-13c4-11e5-b70a-6342d212700a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object));\n    return java.util.Comparator<E>.equals(org.apache.commons.collections4.comparators.ReverseComparator<?>.java.util.Comparator<?>);\n} "},"status":-2},{"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,234,390,391,392,393,394,395,396,397,249,398,399,400,401,402,403,404,405,406],"tindex":"c0916572-13c4-11e5-b70a-0170b82a939b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[407,408],"tindex":"c0916573-13c4-11e5-b70a-dfabcd44fe47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"status":-1},{"failures":[],"tindex":"c0916574-13c4-11e5-b70a-6d3a634ff8ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:279","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"c0916575-13c4-11e5-b70a-0d875c1dc3fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"variableMap":{"it":"it","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"c0916576-13c4-11e5-b70a-6f86d550887b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"c0918c87-13c4-11e5-b70a-b71159348594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"right","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"c0944ba8-13c4-11e5-b70a-8f71953495d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[409,410,411,412,413,414,415,416,417,418],"tindex":"c0944ba9-13c4-11e5-b70a-11e077e5823e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:480","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet()) {\n    int += java.util.Map.Entry<K, V>.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"c0944baa-13c4-11e5-b70a-73fd4c138857","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"c0944bab-13c4-11e5-b70a-73086861e470","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"c0944bac-13c4-11e5-b70a-9dbc9ef8dd87","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[419,420,421],"tindex":"c0944bad-13c4-11e5-b70a-e38572c18ab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[],"tindex":"c0944bae-13c4-11e5-b70a-13f0b5a5443d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"c0944baf-13c4-11e5-b70a-239113460856","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[422],"tindex":"c09472c0-13c4-11e5-b70a-db573fcc96be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"status":-1},{"failures":[34,35,37,38,39,40,41,42,43],"tindex":"c09472c1-13c4-11e5-b70a-e7ffce41a2d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"yFormerParent","rightChild":"yFormerParent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[423,424,425],"tindex":"c09472c2-13c4-11e5-b70a-1f64161c6c76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"c09472c3-13c4-11e5-b70a-dd1fbc18b0a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43],"tindex":"c09472c4-13c4-11e5-b70a-a570fd05eb9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:757","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:756","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"c09472c5-13c4-11e5-b70a-79b62e57b182","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342],"tindex":"c09472c6-13c4-11e5-b70a-2b2387875f79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"previous","hashCode":"index","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"c09499d7-13c4-11e5-b70a-83f2c3bcf9fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"c09499d8-13c4-11e5-b70a-9fc163c6bde1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index2","proposedCapacity":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[],"tindex":"c09499d9-13c4-11e5-b70a-cd830e62db97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"bitIndex","proposedCapacity":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"c09499da-13c4-11e5-b70a-d528e99035fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"c09499db-13c4-11e5-b70a-5f7ab7234298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[426,427,428,429,410,411,412,413,414,415,416,417,418],"tindex":"c09499dc-13c4-11e5-b70a-a597898da23d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-1},{"failures":[430,431],"tindex":"c09499dd-13c4-11e5-b70a-29f3112f9dd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[432,433],"tindex":"c09499de-13c4-11e5-b70a-234a0ea42ef4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[434,48,435,436,437,438,49,50,51,52,53,54,55,56,57,58,439,440,441,442,443,444,59,445,446,62,63],"tindex":"c09499df-13c4-11e5-b70a-49a319092efa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"parent":"current","bitIndex":"lengthInBits","child":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"c094c0f0-13c4-11e5-b70a-2ff2a6f93a9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:380","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    org.apache.commons.collections4.queue.CircularFifoQueue.this.remove();\n    int = -1;\n    return ;\n} "},"variableMap":{"lastReturnedIndex":"size","start":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"c094c0f1-13c4-11e5-b70a-1dadd857159c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"bitIndex","expectedModCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"c094c0f2-13c4-11e5-b70a-ebf44e0f77f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"c094c0f3-13c4-11e5-b70a-87ccf1df838c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[343,344,345,347,348,349,351,352],"tindex":"c094c0f4-13c4-11e5-b70a-3b144571191b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"c094c0f5-13c4-11e5-b70a-63a14414956a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:265","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)))"},"variableMap":{"i":"end1","script":"script","sequence1":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[447],"tindex":"c094c0f6-13c4-11e5-b70a-f972ae4abaaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:423","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"c094c0f7-13c4-11e5-b70a-5361ae124531","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"c094c0f8-13c4-11e5-b70a-6fab41ccd0ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[448,449],"tindex":"c094e809-13c4-11e5-b70a-7911a59c9878","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"c094e80a-13c4-11e5-b70a-6b84879d79d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[450,451,452,453,454,118],"tindex":"c094e80b-13c4-11e5-b70a-7df5561fa0e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"end2","start":"end1","end":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[455,456,457,278,279,280,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,281,473,474,475,476,477,478,282,283,479,284,480,481,285,286,482,483,287,288,289,290,291],"tindex":"c094e80c-13c4-11e5-b70a-a97c54d38ab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"c094e80d-13c4-11e5-b70a-3f9379cecbeb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY","expectedModCount":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[],"tindex":"c094e80e-13c4-11e5-b70a-0122259b1ab9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:303","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"c094e80f-13c4-11e5-b70a-853121f2a496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"left","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"c094e810-13c4-11e5-b70a-d7ad8041165e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[484],"tindex":"c0950f21-13c4-11e5-b70a-5d525b743413","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:113","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,234,485,486,487,488,489,490,491,390,391,392,393,394,395,396,397,249,398,399,400,401,402,403,404,405,406,49,50,51,52,53,55,56,57,58],"tindex":"c0950f22-13c4-11e5-b70a-871bc3bcba50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[492,493,494,495,116,496,449,497,498,498,499,499,500,501],"tindex":"c0950f23-13c4-11e5-b70a-017dd3b977f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[502,503],"tindex":"c0950f24-13c4-11e5-b70a-0304b7932739","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"hash","listSize":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":-1},{"failures":[127,504,505,129,506,123],"tindex":"c0950f25-13c4-11e5-b70a-7d771931bc3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"c0950f26-13c4-11e5-b70a-f303ea5d2f34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-2},{"failures":[216,217,218,219,220,221,222,223,225,227,228,229,230,224,226,231,232,233,234,235,236,237,239,241,242,243,244,238,240,245,246,247,248,249,250,251,252,254,256,257,258,259,253,255,260,261,262,263,264,265,266,267,268,269,270,272,274,275,276,277,271,273,278,279,280,281,282,283,284,286,288,289,290,291,285,287,292,293,294,295,296,297,298,300,302,303,304,305,299,301,306,307,308,309,310,311,312,314,316,317,318,319,313,315,320,321,322,323,324,325,326,328,330,331,332,333,327,329,334,335,336,337,338,339,340,341,342],"tindex":"c0950f27-13c4-11e5-b70a-5b8985eeafb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[111,507,508,245],"tindex":"c0953638-13c4-11e5-b70a-4f8f441bb2a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[],"tindex":"c0953639-13c4-11e5-b70a-e1d3c90e29ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB":"maxElements","bit":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:202","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"c095363a-13c4-11e5-b70a-4357236b77df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[130,131,132,133,141,142,143,145,144,150,151,152,153,154,155,156,157,34,161,35,162,163,164,165,147,148,166,167,168,146,40,43,509,510,175,176,177,178,184,185,211,190,191,192,193,194,195,196,197,511,199,200,201,202,203,187,188,204,205,206,207,208,209,210,186,212,213,214,215],"tindex":"c095363b-13c4-11e5-b70a-77b22e69b3e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"c095363c-13c4-11e5-b70a-33ee5ef378ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[512],"tindex":"c095ab6d-13c4-11e5-b70a-4b722b0f3fab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<T> instanceof java.util.List<?>) {\n    return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int);\n} "},"status":-1},{"failures":[513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"c095ab6e-13c4-11e5-b70a-49a686b10a76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"c095ab6f-13c4-11e5-b70a-f5fc4dd94f10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"root","right":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[545,389,546,397,547,456,472,548,549,550,551,552,553],"tindex":"c095d280-13c4-11e5-b70a-475accf48c69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"mapSize","newCapacity":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1},{"failures":[554,555],"tindex":"c095d281-13c4-11e5-b70a-b31fe5dfa6d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"c095d282-13c4-11e5-b70a-45af3d274228","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"c095d283-13c4-11e5-b70a-053217e1793b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"c095d284-13c4-11e5-b70a-bf3d82e2c6b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[556],"tindex":"c095d285-13c4-11e5-b70a-455af6a73cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-1},{"failures":[557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586],"tindex":"c095d286-13c4-11e5-b70a-811f466d91df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544],"tindex":"c095d287-13c4-11e5-b70a-a7af57bd4d0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[455,587,588,589,590,591,592,593],"tindex":"c095f998-13c4-11e5-b70a-d39ab27d7066","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"c095f999-13c4-11e5-b70a-9f6b3720030e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"i","maxElements":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-2},{"failures":[34,35],"tindex":"c095f99a-13c4-11e5-b70a-2d90b3b281e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}