{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":182,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":334,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":440,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":240,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":426,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":189,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":187,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":327,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":395,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":128,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":144,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":186,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":145,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":437,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":418,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":513,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":287,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":415,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":211,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":529,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":536,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":538,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":123,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":510,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":537,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":474,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":225,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":312,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":447,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":256,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":217,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":363,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":266,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":154,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":252,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":274,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":102,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":322,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":207,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":248,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":414,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":463,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":394,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":245,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":380,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":310,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":535,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":533,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":191,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":368,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreater":472,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":253,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":467,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareGreaterOrEqual":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":239,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":329,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":355,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":338,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":515,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":489,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":378,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":229,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":300,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":227,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":221,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":111,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":469,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":345,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":492,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":502,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":451,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":509,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":318,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":212,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":297,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":430,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":260,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":441,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":303,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":109,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":185,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":365,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":443,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":99,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":113,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":204,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":201,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":264,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":340,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":137,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":528,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":445,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":161,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":458,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":285,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":442,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":219,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":290,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":460,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":108,"org.apache.commons.collections4.map.ReferenceMapTest.testEqualsNull":429,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":337,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":520,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":96,"org.apache.commons.collections4.map.HashedMapTest.testEqualsNull":427,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":523,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":41,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":482,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":484,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":198,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEqualsNull":435,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEqualsNull":431,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":142,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":403,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":288,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":284,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":383,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":234,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":333,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":226,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":354,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":421,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":496,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":370,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":216,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":461,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":400,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":222,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":483,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":237,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":409,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":34,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":295,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":208,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":127,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":153,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":141,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":511,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":387,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":280,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":389,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":8,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":464,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":375,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":232,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":230,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":351,"org.apache.commons.collections4.map.LRUMapTest.testClone":27,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":301,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":352,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":397,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":519,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":180,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":117,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":525,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":10,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":500,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":372,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":508,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":392,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":259,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":406,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":487,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":48,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":291,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":178,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":214,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":302,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":335,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":473,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":200,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":184,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":493,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":7,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":320,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":438,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":241,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":306,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":202,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":307,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":485,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":412,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":439,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":499,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":60,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":59,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":408,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":151,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":419,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":465,"org.apache.commons.collections4.map.LRUMapTest.testReset":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":250,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":238,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":162,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":319,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":72,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":416,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":146,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":466,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":197,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":350,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":129,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":362,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":454,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":24,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":47,"org.apache.commons.collections4.map.LinkedMapTest.testReset":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":50,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":411,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":213,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":143,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":390,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":135,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":462,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":405,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":183,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":512,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":425,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":196,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":326,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":384,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":86,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":85,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":105,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":14,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":506,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":521,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":174,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":396,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":501,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":527,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":267,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":150,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":410,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":478,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":94,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":432,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":388,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":522,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":46,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":450,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":359,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":360,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":361,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":434,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":294,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":417,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":181,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":97,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":243,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":342,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":455,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":530,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":457,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":147,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":449,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":246,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":343,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":516,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":517,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":518,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":254,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":348,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":459,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":476,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":82,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLessOrEqual":470,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":81,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":206,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":385,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":504,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":107,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":304,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":422,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":503,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":282,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":308,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":255,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":488,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":344,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":313,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":315,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":98,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":371,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":66,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":468,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":233,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":263,"org.apache.commons.collections4.map.LinkedMapTest.testClone":62,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":433,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":12,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":289,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":456,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":130,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":176,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":279,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":401,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":18,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":257,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":276,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":269,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":283,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":391,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":249,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":477,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":399,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":270,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":507,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":514,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":495,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":332,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":364,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":331,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":120,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":423,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":272,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":271,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":278,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":486,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":490,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":402,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":235,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":481,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":223,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":428,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":323,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":497,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":373,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":386,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":281,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":40,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":479,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":357,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":167,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":356,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":163,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":330,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":164,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":475,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":165,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":311,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":446,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":224,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":125,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":298,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":349,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":494,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":526,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":398,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":210,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":341,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":366,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":413,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":480,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":52,"org.apache.commons.collections4.map.LRUMapTest.testLRU":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":251,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":393,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":188,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":138,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":339,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":424,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":103,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":336,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":448,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":328,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":347,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":139,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":531,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":376,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":31,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":134,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":452,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":261,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":453,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":140,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":498,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":205,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":524,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":131,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":92,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":195,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":317,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":13,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":268,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":258,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":436,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":316,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":309,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":377,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":286,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":95},"transformations":[{"failures":[],"tindex":"aab0a583-13c0-11e5-9110-b16987501292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)"},"variableMap":{"key":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"aab20514-13c0-11e5-9110-31637c040ffe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"aab20515-13c0-11e5-9110-61872333af3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"aab20516-13c0-11e5-9110-e76352d54ea0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"aab20517-13c0-11e5-9110-c363967de243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:392","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null"},"variableMap":{"buckets":"buckets","i":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:281","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"aab20518-13c0-11e5-9110-e9d030a3092b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"start2","maxElements":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-2},{"failures":[21],"tindex":"aab22c29-13c0-11e5-9110-b32ba5d4f178","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"aab22c2a-13c0-11e5-9110-a1c232b713d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"aab22c2b-13c0-11e5-9110-e54307a72df4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"aab22c2c-13c0-11e5-9110-4b94cb21de2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"h","previous":"parent","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"aab2533d-13c0-11e5-9110-c503a55def4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"parent","predecessor":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"aab2533e-13c0-11e5-9110-057a11441764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:121","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"aab2533f-13c0-11e5-9110-03d601f9ce68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(java.util.Collection<? extends T>)"},"variableMap":{"coll":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1732","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<? extends C>)"},"status":-2},{"failures":[3,4,5,6,7,9,10,11,12,13],"tindex":"aab25340-13c0-11e5-9110-c9c425ca45ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"aab25341-13c0-11e5-9110-9d13a8a19bc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.set(E)"},"status":-2},{"failures":[],"tindex":"aab25342-13c0-11e5-9110-317fcbe5ef5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"aab27a53-13c0-11e5-9110-07a6d4232d0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[109],"tindex":"aab27a54-13c0-11e5-9110-e14cb2509764","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:248","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"aab27a55-13c0-11e5-9110-bf162f45f181","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"aab27a56-13c0-11e5-9110-6b6f23638b77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"aab27a57-13c0-11e5-9110-9b0cb3193e09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[134,135,110,111,136,112,113,137,114,138,117,118],"tindex":"aab27a58-13c0-11e5-9110-69cd75ce6fc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl","sourcecode":"return (int) < (int)"},"variableMap":{"endIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"aab27a59-13c0-11e5-9110-aba92f10372d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"parent","parent":"parent","left":"left","h":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"aab2a16a-13c0-11e5-9110-835a03aa2ee5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"aab2a16b-13c0-11e5-9110-5db76a41ad5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"value","newCapacity":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[],"tindex":"aab2a16c-13c0-11e5-9110-8d8cddc4ff4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"status":0},{"failures":[139,140,141,142,143,144],"tindex":"aab2a16d-13c0-11e5-9110-a9d8937d3267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"start2","start":"start2","end":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"aab2a16e-13c0-11e5-9110-1744ca5f43e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"aab2a16f-13c0-11e5-9110-51eac982e681","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"aab2c880-13c0-11e5-9110-7f488e1091c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:494","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":0},{"failures":[],"tindex":"aab2c881-13c0-11e5-9110-b56636456fc8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"aab2c882-13c0-11e5-9110-e7ecc3f86e09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"aab2c883-13c0-11e5-9110-038e07b4499f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"aab2c884-13c0-11e5-9110-a3f2e05405e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"aab2ef95-13c0-11e5-9110-edec987d21ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[175,176,177,178],"tindex":"aab2ef96-13c0-11e5-9110-5178c7340267","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion == null) {\n    throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n} "},"variableMap":{"criterion":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[],"tindex":"aab2ef97-13c0-11e5-9110-4fdf217f7ee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"aab2ef98-13c0-11e5-9110-991b98d9747c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[147,149,150,151,152,153,154,155,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,179,180,172,173,174],"tindex":"aab2ef99-13c0-11e5-9110-293d0b494b1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"aab2ef9a-13c0-11e5-9110-9f5d3102f097","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"value","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:266","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":0},{"failures":[181,182,183,184],"tindex":"aab2ef9b-13c0-11e5-9110-cb10f4e7f502","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[185,186,187,188,189,190,191,192,193],"tindex":"aab2ef9c-13c0-11e5-9110-d3a4406a84f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[194,195,175,176,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,177,178,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"aab316ad-13c0-11e5-9110-c977028a6846","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"aab316ae-13c0-11e5-9110-e13f988e6880","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"variableMap":{"vUp":"key1","d":"h","delta":"h","i":"h","k":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315],"tindex":"aab316af-13c0-11e5-9110-b35add3c1456","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[182,183,184,92],"tindex":"aab316b0-13c0-11e5-9110-45cc21984879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"aab316b1-13c0-11e5-9110-81fb6531d262","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"modCount","lastItemIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:227","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<? extends E>.size()"},"status":0},{"failures":[],"tindex":"aab316b2-13c0-11e5-9110-2f9693e02292","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"cursor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:289","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n        java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n        break;\n    } \n}"},"status":0},{"failures":[316,317,318,319,320,321],"tindex":"aab316b3-13c0-11e5-9110-b7014ccd3218","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[322],"tindex":"aab33dc4-13c0-11e5-9110-fbea9b7d72a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:115","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[194,195,175,176,323,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,177,178,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285],"tindex":"aab33dc5-13c0-11e5-9110-3b1eb510d3e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-1},{"failures":[],"tindex":"aab33dc6-13c0-11e5-9110-41d09a273845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[324],"tindex":"aab33dc7-13c0-11e5-9110-4bf88366143b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"status":-1},{"failures":[325,326,327,328,123,329,330,126,130,132,133],"tindex":"aab33dc8-13c0-11e5-9110-553a26c89064","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[199,205,206,207,211,224,225,226],"tindex":"aab33dc9-13c0-11e5-9110-c509bd93751f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:267","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":-1},{"failures":[331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,192,362,363,193,364,365,366,367,368,369,370,371],"tindex":"aab33dca-13c0-11e5-9110-d7f12bba5a70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[],"tindex":"aab33dcb-13c0-11e5-9110-af4b66dea8de","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.this(java.util.Comparator<E>, false)"},"status":-2},{"failures":[],"tindex":"aab364dc-13c0-11e5-9110-dfdc84b06262","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389],"tindex":"aab364dd-13c0-11e5-9110-79c57e8251bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[1,0,2,390,3,4,391,5,6,7,8,9,10,392,11,393,394,12,13,395,396,397,14,15,16,17,18,19,398,399,400,20,401,402,403,404,405,406,407,408],"tindex":"aab364de-13c0-11e5-9110-a5d7564bbf64","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"aab364df-13c0-11e5-9110-f74b95330f89","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"aab364e0-13c0-11e5-9110-e1c5987ebec6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"aab364e1-13c0-11e5-9110-5922796a5151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"aab364e2-13c0-11e5-9110-33aa457701fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[409,410,411,412,413,414,415,416,417,418,419,420,421],"tindex":"aab364e3-13c0-11e5-9110-0791f252f495","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:95","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(0)"},"variableMap":{"orderingBits":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-1},{"failures":[],"tindex":"aab364e4-13c0-11e5-9110-078ca00dab7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"aab38bf5-13c0-11e5-9110-7905b578f4d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[],"tindex":"aab38bf6-13c0-11e5-9110-e9b05740be15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"aab38bf7-13c0-11e5-9110-e5c05e1bce5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"end2","proposedCapacity":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"aab38bf8-13c0-11e5-9110-cdc0cd6a77e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"aab38bf9-13c0-11e5-9110-6973655639be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:139","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-2},{"failures":[],"tindex":"aab38bfa-13c0-11e5-9110-479b45deac53","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"bitIndex","newCapacity":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2},{"failures":[422,423,424,425],"tindex":"aab38bfb-13c0-11e5-9110-75d4b597b74a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"aab38bfc-13c0-11e5-9110-af0ae81155a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl","sourcecode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:98","type":"CtIfImpl","sourcecode":"if ((java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} "},"status":0},{"failures":[],"tindex":"aab38bfd-13c0-11e5-9110-353842e0d8c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"aab38bfe-13c0-11e5-9110-4109f3fcd064","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":0},{"failures":[426,427,428,429,430,431,49,432,75,433,434,435,436,437,343],"tindex":"aab38bff-13c0-11e5-9110-cb49d98c09d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"aab3b310-13c0-11e5-9110-5f1be8a8f970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"aab3b311-13c0-11e5-9110-ff28c4ea62ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:528","type":"CtIfImpl","sourcecode":"if (java.lang.Float == null) {\n    java.lang.Float = java.lang.Float;\n} "},"variableMap":{"answer":"object","defaultValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"aab3b312-13c0-11e5-9110-cdd776c108c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"aab3b313-13c0-11e5-9110-4b02b7ecb73f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:806","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} "},"variableMap":{"removed":"result","org.apache.commons.collections4.map.AbstractHashedMap.GETKEY_INVALID":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-2},{"failures":[438,304,439,440,441,442,134,443,135,444,110,111,112,113,137,114,115,445,116,117,118,446,447,448,449,450,451,120,124,125,126,127,129,130,131,132,133,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467],"tindex":"aab3b314-13c0-11e5-9110-87550eae7618","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"currentIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[468,469,470,471,472],"tindex":"aab3b315-13c0-11e5-9110-39b44351e0f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:189","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[473],"tindex":"aab3b316-13c0-11e5-9110-bb718d60850e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"aab3b317-13c0-11e5-9110-1bbfb3896bcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:648","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<V>)(java.lang.Object)).clear()"},"variableMap":{"value":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"aab3b318-13c0-11e5-9110-79241f004d45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"aab3da29-13c0-11e5-9110-0751598f627d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"aab3da2a-13c0-11e5-9110-0f356b3ffc4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"bitIndex","index":"lengthInBits","beyond":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:465","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[474,475,476,477,478,479,480,447,451,481,482,483],"tindex":"aab3da2b-13c0-11e5-9110-15b875b19333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[145,146,147,148,149,150,151,484,152,153,485,154,155,156,157,158,159,486,160,487,488,161,162,489,490,491,163,164,165,166,167,168,169,492,493,170,494,495,496,171,497,179,180,172,173,174],"tindex":"aab3da2c-13c0-11e5-9110-1d0fcd798203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[209,210,211,212,213,214,215,217,219,222,223,498,257,258,260,261,262,263,265],"tindex":"aab3da2d-13c0-11e5-9110-6be01ce644ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[499],"tindex":"aab3da2e-13c0-11e5-9110-517a65553cd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:621","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Iterable<? super O>) {\n    if (O.equals(java.lang.Object)) {\n        int++;\n    } \n}"},"status":-1},{"failures":[361],"tindex":"aab3da2f-13c0-11e5-9110-83c69b33c2db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-1},{"failures":[500],"tindex":"aab3da30-13c0-11e5-9110-911943fb0b44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"aab3da31-13c0-11e5-9110-cf67f45f4560","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[145,146,147,148,149,150,151,152,153,485,154,155,156,157,158,159,160,161,162,489,490,491,163,164,165,166,167,168,169,497,172,501,502,503,504,173,174],"tindex":"aab40042-13c0-11e5-9110-b54512761058","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,489,490,491,163,164,165,166,167,168,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"tindex":"aab40043-13c0-11e5-9110-419beecfc434","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"aab40044-13c0-11e5-9110-07bfa1f6108c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"aab40045-13c0-11e5-9110-a9dce7a584f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"key","keys":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"aab40046-13c0-11e5-9110-e7adc76d6a3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:202","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}