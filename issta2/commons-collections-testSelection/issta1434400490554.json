{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":123,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":363,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":385,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":541,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":143,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":323,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":500,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":1,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":362,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":40,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":472,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":246,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":611,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":421,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":587,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":603,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":240,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":532,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":602,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":242,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":201,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":505,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":311,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":631,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":387,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":451,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":533,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":534,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":622,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":614,"org.apache.commons.collections4.CollectionUtilsTest.get":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":347,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":560,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":434,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":461,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":214,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":386,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":142,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":393,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":82,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":430,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":416,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":594,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":581,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":69,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":268,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":238,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":239,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":378,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":516,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":299,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":582,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":145,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":4,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":446,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":523,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":456,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":508,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":551,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":179,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":530,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":452,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":590,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":261,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":335,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":503,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":291,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":536,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":405,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":159,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":506,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":245,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":102,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":200,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":58,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":469,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":343,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":470,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":471,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":351,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":417,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":398,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":16,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":340,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":629,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":562,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":248,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":217,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":6,"org.apache.commons.collections4.map.CompositeMapTest.testPut":49,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":615,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":354,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":279,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":129,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":545,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":302,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.map.CompositeMapTest.testGet":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":234,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":620,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":627,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":497,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":220,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":575,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":435,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":316,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":318,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":577,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":607,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":499,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":628,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":498,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":88,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":298,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":429,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":409,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":254,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":544,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":403,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":381,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":78,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":481,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":494,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":501,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":495,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":496,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":297,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":440,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":8,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":189,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":219,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":366,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":382,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":360,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":414,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":415,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":413,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":262,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":400,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":566,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":604,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":288,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":638,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":271,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":396,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":130,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":427,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":283,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":101,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":550,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":619,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":312,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":332,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":486,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":517,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":567,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":346,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":55,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":368,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":579,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":11,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":388,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":457,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":322,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":411,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":410,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":623,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":305,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":412,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":608,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":306,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":359,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":438,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":112,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":202,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":437,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":263,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":169,"org.apache.commons.collections4.map.Flat3MapTest.testEqualsNull":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":284,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":371,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":260,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":190,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":483,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":192,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":266,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":432,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":327,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":132,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":367,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":186,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":152,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":460,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":187,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":441,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":278,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":606,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":431,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":251,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":232,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":390,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":375,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":423,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":473,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":104,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":273,"org.apache.commons.collections4.CollectionUtilsTest.get1":43,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":585,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":199,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":445,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":595,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":345,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":610,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":542,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":569,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":484,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":282,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":538,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":90,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":309,"org.apache.commons.collections4.IteratorUtilsTest.testToList":313,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":188,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":47,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":294,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":408,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":341,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":33,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":139,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":324,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":492,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":630,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":597,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":208,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":286,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":211,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":285,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":281,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":522,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":509,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":221,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":59,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":51,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":121,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":137,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":243,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":333,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":520,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":626,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":300,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":444,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":391,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":548,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":134,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":605,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":401,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":511,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":559,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":572,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":634,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":176,"org.apache.commons.collections4.map.LinkedMapTest.testReset":428,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":613,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":344,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":361,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":504,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":369,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":580,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":377,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":338,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":512,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":172,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":612,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":632,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":455,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":617,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":596,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":81,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":272,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":150,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":236,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":85,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":149,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":370,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":439,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":633,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":144,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":537,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":591,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":514,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":420,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":210,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":502,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":443,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":488,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":535,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":66,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":317,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":564,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":276,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":476,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":259,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":625,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":636,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":17,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":480,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":229,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":635,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":365,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":609,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":555,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":556,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":557,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":407,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":507,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":165,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":265,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":155,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":527,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":308,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":373,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":453,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":528,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":252,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":529,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":177,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":384,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":355,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":424,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":449,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":168,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":491,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":26,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":303,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":97,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":315,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":574,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":63,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":463,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":207,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":182,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":296,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":310,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":205,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":206,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":244,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":576,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":598,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":147,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":146,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":117,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":54,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":442,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":458,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":280,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":418,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":256,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":99,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":479,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":433,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":87,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":397,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":601,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":337,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":383,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":183,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":448,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":447,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":218,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":79,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":474,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":45,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":320,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":599,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":118,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":573,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":616,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":487,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":339,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":482,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":154,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":287,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":304,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":334,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":364,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":593,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":524,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":389,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":490,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":526,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":510,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":589,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":292,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":637,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":227,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":464,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":349,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":454,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":489,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":216,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":394,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":462,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":29,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":422,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":331,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":105,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":194,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":195,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":558,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":301,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":198,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":204,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":561,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":436,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":584,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":406,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":399,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":277,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":404,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":269,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":521,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":319,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":119,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":549,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":264,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":270,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":257,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":513,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":293,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":215,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":392,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":209,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":553,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":554,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":225,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":552,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":224,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":465,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":290,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":222,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":223,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":518,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":321,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":475,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":64,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":328,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":135,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":329,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":330,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":466,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":342,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":563,"org.apache.commons.collections4.map.LRUMapTest.testLRU":125,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":253,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":180,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":160,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":425,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":83,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":543,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":624,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":376,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":546,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":314,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":358,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":578,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":70,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":267,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":126,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":570,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":352,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":571,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":357,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":231,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":459,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":95,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":592,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":586,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":402,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":468,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":350,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":103,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":56,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":72,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":515,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":485,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":493,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":583,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":540,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":258,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":86,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":618,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":395,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":372},"transformations":[{"failures":[],"tindex":"f8920329-139d-11e5-9cda-17a30f1a9d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:889","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    } else {\n        return null;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"left","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"f8922a3a-139d-11e5-9cda-5b6436490e7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:250","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.lockChain()"},"variableMap":{"this":"chain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:151","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Set<E>.iterator());\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"f8922a3b-139d-11e5-9cda-f9e13adabdda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"f892514c-139d-11e5-9cda-f7e62fe49f70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f892514d-139d-11e5-9cda-ed6a92161551","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38],"tindex":"f892514e-139d-11e5-9cda-4547f1c29dab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"f892514f-139d-11e5-9cda-f7b31230a9f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":0},{"failures":[],"tindex":"f8925150-139d-11e5-9cda-c18fb3e152ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"f8927861-139d-11e5-9cda-2d07b2b04a86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:373","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[39],"tindex":"f8927862-139d-11e5-9cda-459cdbbc73df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1145","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[40,41,42,43,44,45,46,47],"tindex":"f8927863-139d-11e5-9cda-b50208d3ee1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"status":-1},{"failures":[48,49,50,51,52,53,54,55],"tindex":"f8927864-139d-11e5-9cda-237b344363f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-1},{"failures":[],"tindex":"f8927865-139d-11e5-9cda-2b28adef4214","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[],"tindex":"f8927866-139d-11e5-9cda-99371105077f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"f8929f77-139d-11e5-9cda-472b374e3de4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[56,57,58,59,60,61],"tindex":"f8929f78-139d-11e5-9cda-fddc0a929c86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[],"tindex":"f8929f79-139d-11e5-9cda-8504b4ea1cf3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"f8929f7a-139d-11e5-9cda-7b9ee0805b99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:752","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"path","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,11,103,104,105,106,12,107,108,109,110,111,112,113,114,115,116,117,118,13,119,120,121,122,14,123,124,15,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,16,156,157,158,159,17,160,161,18,162,163,164,19,165,166,167,168,20,169,170,21,171,172,173,23,174,175,176,24,177,178,25,179,180,181,26,182,183,184,185,27,186,187,28],"tindex":"f892c68b-139d-11e5-9cda-85ce0b56bfc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"f892c68c-139d-11e5-9cda-0d199a6296c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:304","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[188],"tindex":"f892c68d-139d-11e5-9cda-176fa89c2c8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:105","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f892c68e-139d-11e5-9cda-05aa4b71b1c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"p","parent":"parent","left":"p","h":"right","right":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[189,190],"tindex":"f892ed9f-139d-11e5-9cda-bdb2e4f99b82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:208","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V"},"status":-1},{"failures":[191,192,193,194,195,196],"tindex":"f892eda0-139d-11e5-9cda-ad1e8fac51a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[106,122,197,142,159,168,176,185],"tindex":"f892eda1-139d-11e5-9cda-775430af047c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[],"tindex":"f892eda2-139d-11e5-9cda-57afc28a9555","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f892eda3-139d-11e5-9cda-7dba1118f2e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242],"tindex":"f892eda4-139d-11e5-9cda-81231c299aa7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f89314b5-139d-11e5-9cda-6de4c87a9c3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"f89314b6-139d-11e5-9cda-7b56c8bf8506","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[243],"tindex":"f89314b7-139d-11e5-9cda-6d92d3a6de13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:533","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 2;\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"f89314b8-139d-11e5-9cda-c9ad4c9884cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"node","tree":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[],"tindex":"f89314b9-139d-11e5-9cda-6de3a5062a32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:509","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"f89314ba-139d-11e5-9cda-ddb4ec25f80f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"f89314bb-139d-11e5-9cda-3b5e453c081a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"status":-2},{"failures":[8,244,245,246,247,248,249,250,251,252],"tindex":"f89314bc-139d-11e5-9cda-350fa1925591","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"i","lengthInBits":"i","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"f89314bd-139d-11e5-9cda-af6fbdcbbfc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"f89314be-139d-11e5-9cda-476fa6e497c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[41,42,43,44,46,47],"tindex":"f8933bcf-139d-11e5-9cda-5f6372b30d90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator"},"variableMap":{"org.apache.commons.collections4.functors.DefaultEquator.INSTANCE":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"f8933bd0-139d-11e5-9cda-150ae994260c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:378","type":"CtForEachImpl","sourcecode":"for (java.util.Set<E> java.util.Set<E> : java.util.Set<E>[]) {\n    org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>);\n}"},"status":-2},{"failures":[],"tindex":"f8933bd1-139d-11e5-9cda-810bd4d0a807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"root","left":"root","h":"root","right":"root","child":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[253,254,255],"tindex":"f8933bd2-139d-11e5-9cda-1f813a38badd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"status":-1},{"failures":[256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273],"tindex":"f8933bd3-139d-11e5-9cda-6d1b46a8c6c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"i","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1},{"failures":[274],"tindex":"f8933bd4-139d-11e5-9cda-05d542e69a44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"f8933bd5-139d-11e5-9cda-0b47f01b02af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtIfImpl","sourcecode":"if ((java.util.Queue<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Queue<E>.toArray()));\n    java.util.Queue<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"f8933bd6-139d-11e5-9cda-c71188ba9aa5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:128","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310],"tindex":"f89362e7-139d-11e5-9cda-53cbaaba52ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"status":-1},{"failures":[311],"tindex":"f89362e8-139d-11e5-9cda-9bf8e1c2088e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:413","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,92,89,96,90,91,97,98,99,100,101,102,11,103,104,105,106,12,107,108,109,110,111,112,113,114,115,116,117,118,13,119,120,121,122,14,123,124,15,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,16,156,157,158,159,17,160,161,18,162,163,164,19,165,166,167,168,20,169,170,21,171,172,173,23,174,175,176,24,177,178,25,179,180,181,26,182,183,184,185,27,186,187,28],"tindex":"f89362e9-139d-11e5-9cda-0561c41c1ff4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[],"tindex":"f89362ea-139d-11e5-9cda-d9ce4b994aa3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:567","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 0;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"f89362eb-139d-11e5-9cda-73f850744536","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"node","this":"this","y":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[312,313,314,315,316,317],"tindex":"f89389fc-139d-11e5-9cda-e9c9d0646a57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[318,319,320,321,322,323,324,325,326,327],"tindex":"f89389fd-139d-11e5-9cda-a3f4339c1405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"currentNode","this":"this","y":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"f893b10e-139d-11e5-9cda-2d19fd560d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"f893b10f-139d-11e5-9cda-fdab9ddba711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-2},{"failures":[341,342,343,344,345,346,347,318,348,319,349,350,351,352,353,354,355],"tindex":"f893b110-139d-11e5-9cda-c927aff155cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"total","modifications":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[95,89,96,356,90],"tindex":"f893b111-139d-11e5-9cda-638d1e376417","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"total":"h","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"f893b112-139d-11e5-9cda-abc15aad04ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:219","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n}"},"status":0},{"failures":[357,358,359,360,361,362],"tindex":"f893b113-139d-11e5-9cda-c187677b95a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[357,358,359,360,361,362],"tindex":"f893b114-139d-11e5-9cda-59fc5fbefa65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"f893d825-139d-11e5-9cda-9fa345823fd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"nextP"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:145","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])))"},"status":-2},{"failures":[],"tindex":"f893d826-139d-11e5-9cda-e3184bfd1c60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"f893d827-139d-11e5-9cda-e16feed77ec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[363,29,30,31,32,33,35,36,37,38,364],"tindex":"f893d828-139d-11e5-9cda-c39e9f34dcc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:229","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[365,366,367],"tindex":"f893d829-139d-11e5-9cda-a76a6eb608e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[368,62,63,64,65,369,370,66,67,68,69,371,70,71,72,73,74,75,76,77,372,78,373,374,375,79,80,81,376,377,82,83,84,85,86,87,88,378,89,96,90,91,92,93,94,95,97,98,99,379,100,101,380,102,11,103,104,105,106,381,12,382,383,107,108,384,385,386,109,110,111,112,113,114,387,388,389,115,390,391,392,393,394,395,396,397,398,399,400,401,402,116,117,403,118,13,119,120,121,122,404,14,405,406,123,124,407,408,409,410,411,412,413,414,415,416,417,418,15,419,420,421,422,423,424,425,426,125,126,127,128,129,427,428,429,430,130,431,432,131,132,133,134,135,433,136,137,434,138,139,140,141,435,142,436,143,437,438,144,145,439,440,441,146,147,442,148,149,150,151,443,444,152,445,446,447,448,449,450,451,452,453,454,455,456,457,458,153,154,459,155,16,156,157,158,159,460,17,461,462,160,161,463,464,465,466,467,468,469,470,471,472,473,474,18,475,476,477,478,479,480,481,482,483,484,485,486,162,163,487,164,19,165,166,167,168,488,20,489,490,169,170,491,492,493,494,495,496,497,498,499,500,501,502,21,503,504,505,506,507,508,509,510,511,512,513,514,515,171,172,516,173,23,174,175,517,176,518,24,519,520,177,178,521,522,523,524,525,526,527,528,529,530,531,532,25,533,534,535,536,537,538,539,540,541,542,543,544,179,180,545,181,26,182,183,184,185,546,27,547,548,186,187,549,550,551,552,553,554,555,556,557,558,559,560,28,561,562,563,564,565,566,567,568],"tindex":"f893d82a-139d-11e5-9cda-f5e1a60df59a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-1},{"failures":[569],"tindex":"f893ff3b-139d-11e5-9cda-091bd49900f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[570,571,572,274,573,574,575,576,577,578,579,580,581,192,582,583,584,244,245,246,247,248,249,585,250,586,251,252],"tindex":"f893ff3c-139d-11e5-9cda-23466cbf60d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"code","lengthInBits":"code","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"f893ff3d-139d-11e5-9cda-8f66180ae8b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f893ff3e-139d-11e5-9cda-11daa520aa80","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1149","type":"CtIfImpl","sourcecode":"if ((int) != (java.util.Map<?, ?>.size())) {\n    return false;\n} "},"variableMap":{"other":"other","size":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"f893ff3f-139d-11e5-9cda-c94e3d2e89d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:925","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super O>.evaluate(O)) {\n    R.add(O);\n} "},"status":-2},{"failures":[],"tindex":"f893ff40-139d-11e5-9cda-25cb5eb7c41d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:408","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    java.lang.Boolean = java.lang.Boolean;\n} "},"variableMap":{"answer":"key2","defaultValue":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[357,358,359,360,361,362],"tindex":"f893ff41-139d-11e5-9cda-d55882ab061d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"i","end2":"delta","this":"this","i":"start1","end1":"end1","k":"start1","start2":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"f893ff42-139d-11e5-9cda-43cb58b4cbec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"f8942653-139d-11e5-9cda-eba24004f4ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"status":-2},{"failures":[587,207,208,212,213,214,215,216,217,588,218,219,220,221,589,590,591],"tindex":"f8942654-139d-11e5-9cda-138d9e338ddc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[74,86],"tindex":"f8942655-139d-11e5-9cda-e3c35b5f4c9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[592,593,594,595],"tindex":"f8942656-139d-11e5-9cda-4bfb9e38258d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[89,96,356,90],"tindex":"f8942657-139d-11e5-9cda-419ed27a384d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[596,597,598,599,600,601,602],"tindex":"f8942658-139d-11e5-9cda-6fc085671fde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f8942659-139d-11e5-9cda-a980aa83fd0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"f894265a-139d-11e5-9cda-b3994f05d86c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f8944d6b-139d-11e5-9cda-89d90c1388cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[357,358,359,360,361,362],"tindex":"f8944d6c-139d-11e5-9cda-83f98051b9b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"k","start":"end1","end":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"f8944d6d-139d-11e5-9cda-15c0e8224f02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[],"tindex":"f8944d6e-139d-11e5-9cda-d7c3a3246254","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8944d6f-139d-11e5-9cda-251d3da4eeeb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[357,358,359,360,361,362],"tindex":"f8947480-139d-11e5-9cda-210c27df4b5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:211","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:222","type":"CtLocalVariableImpl","sourcecode":"int int = (int[][int]) - 1"},"status":-1},{"failures":[603,604,605,606],"tindex":"f8947481-139d-11e5-9cda-e592131d098a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"slotFilled","beforeFirst":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:85","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    E = java.util.Iterator<? extends E>.next();\n    boolean = true;\n} else {\n    boolean = true;\n    E = null;\n    boolean = false;\n}"},"status":-1},{"failures":[],"tindex":"f8947482-139d-11e5-9cda-55b8fceff9da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f8947483-139d-11e5-9cda-c1d4e6f1d0ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"currentNode","dataElement":"dataElement","child":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[106,122,197,142,159,168,176,185],"tindex":"f8947484-139d-11e5-9cda-9ba24e2c22d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1381","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(',').append(' ');\n} "},"status":-1},{"failures":[607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626],"tindex":"f8947485-139d-11e5-9cda-8bf8f8ec83a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[627,398,399,400,401,402,116,117,403,118,13,119,120,121,122,628,404,14,405,406,123,124,407,408,409,410,411,412,413,414,415,416,417,418,15,419,420,421,422,423,424,425,426,629,630,631,632,22,633,634,511,512,513,514,515,171,172,516,173,23,174,175,517,176,635,518,24,519,520,177,178,521,522,523,524,525,526,527,528,529,530,531,532,25,533,534,535,536,537,538,539,540,636,637,638,639],"tindex":"f8949b96-139d-11e5-9cda-b95905334a1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:380","type":"CtWhileImpl","sourcecode":"while (java.lang.ref.Reference<?> != null) {\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge(java.lang.ref.Reference<?>);\n    java.lang.ref.Reference<?> = java.lang.ref.ReferenceQueue<java.lang.Object>.poll();\n}"},"status":-1},{"failures":[],"tindex":"f8949b97-139d-11e5-9cda-ad9eec35965e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:503","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey())"},"status":-2},{"failures":[331,332,334,335,336,337,339,340],"tindex":"f8949b98-139d-11e5-9cda-8db758850012","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"f8949b99-139d-11e5-9cda-a9097521ba60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"f8949b9a-139d-11e5-9cda-11382a4276e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.TransformedQueue:80","type":"CtInvocationImpl","sourcecode":"java.util.Queue<E>.clear()"},"variableMap":{"queue":"intersects"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}