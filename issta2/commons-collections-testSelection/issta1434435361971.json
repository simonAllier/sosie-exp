{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":743,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":546,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":291,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":55,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSimpleSerialization":262,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":276,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":339,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":207,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":822,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":821,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":685,"org.apache.commons.collections4.CollectionUtilsTest.collect":828,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":686,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":104,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":687,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":426,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":714,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":719,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":600,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectHashCodeEqualsContract":425,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":571,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":622,"org.apache.commons.collections4.CollectionUtilsTest.get":118,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":454,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":799,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":220,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":395,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":697,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":329,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":541,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":129,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":579,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":654,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":190,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":348,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":373,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":15,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":424,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":554,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":453,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":562,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":699,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":749,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":525,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":620,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":232,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":572,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":102,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":659,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":623,"org.apache.commons.collections4.CollectionUtilsTest.intersection":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":523,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":313,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":712,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":591,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":133,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":592,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":616,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":356,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":161,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":466,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":6,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":415,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":349,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":500,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":126,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":650,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":165,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":515,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":322,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":230,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":760,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":445,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":432,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":754,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorIteration":414,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":216,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":580,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":762,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":680,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":290,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":578,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":577,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":75,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":555,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":574,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":347,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":199,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":607,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":668,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":422,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":544,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":535,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":401,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":589,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":440,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":188,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":26,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":285,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":678,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":468,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":472,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":287,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":337,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":350,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":56,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":450,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":691,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":497,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":676,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":791,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":533,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":251,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":325,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":683,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":583,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":321,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":757,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":488,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":741,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":738,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":655,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":594,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":83,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":547,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":605,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":824,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":346,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":625,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":243,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":427,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":273,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":734,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":776,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":219,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":405,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":490,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":604,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":581,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":603,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":183,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":215,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":451,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":189,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":477,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":526,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":284,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":231,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":33,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":210,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":452,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":358,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":560,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":695,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":621,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsSelfHashCode":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":670,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":495,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":671,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":570,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":669,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":576,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":606,"org.apache.commons.collections4.set.CompositeSetTest.testSimpleSerialization":458,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":306,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":478,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":448,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":382,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":778,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":711,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":804,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":736,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":761,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":713,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":380,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":624,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":721,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":491,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":214,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":27,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":628,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":702,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":511,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":493,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":71,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":789,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":750,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":618,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":514,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":619,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":224,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":429,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":823,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":163,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":378,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":694,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":569,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectHashCodeEqualsContract":435,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":507,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":753,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":745,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":439,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":706,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":442,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":434,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":782,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":211,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":498,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":428,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":733,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":361,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":813,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":803,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":444,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":675,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":393,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":128,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":559,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":534,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":595,"org.apache.commons.collections4.set.CompositeSetTest.testEqualsNull":456,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":545,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":809,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":701,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":268,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":779,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":568,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testFullIterator":256,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":366,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":557,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":164,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":281,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":528,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":513,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":728,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":652,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":798,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":531,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":530,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":529,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":601,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":527,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":819,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":816,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":646,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":542,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":801,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":340,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectEqualsSelf":258,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":642,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":246,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":460,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":24,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":573,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":170,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":509,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":226,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":257,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":343,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":192,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":78,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":320,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":727,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":221,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":197,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":467,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":402,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":375,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":631,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":365,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":681,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":240,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":506,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":239,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":413,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":238,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":648,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":476,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":404,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":593,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":763,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":561,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":720,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":797,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":371,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":811,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":805,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":19,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":272,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":323,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":486,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":689,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":25,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":585,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":635,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":781,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":505,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":446,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":342,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":626,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":766,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":127,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":643,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":651,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":177,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":41,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":160,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":338,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":399,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":38,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":602,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testObjectHashCodeEqualsContract":263,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":459,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":518,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":543,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":632,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":638,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":703,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":565,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":136,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":336,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":744,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":315,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":209,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":403,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":34,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":330,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":688,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":355,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":418,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":538,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":309,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":742,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":812,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":270,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":815,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":11,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":54,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":274,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":449,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":479,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":101,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":510,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":3,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":353,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":73,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":275,"org.apache.commons.collections4.CollectionUtilsTest.transform2":827,"org.apache.commons.collections4.CollectionUtilsTest.transform1":16,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":481,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":794,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":280,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":344,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":588,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":709,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":392,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":390,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":143,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":142,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalFullCollectionExists":259,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":660,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":352,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":608,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":690,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":242,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalFullCollectionExists":455,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":113,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":178,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":328,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":663,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":771,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":300,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":634,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":317,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":400,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":716,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":739,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":318,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySet":193,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":278,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":250,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":772,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":484,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":520,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":443,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":293,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":289,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":586,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":644,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":384,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":521,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":327,"org.apache.commons.collections4.set.CompositeSetTest.testCanonicalEmptyCollectionExists":457,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":597,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":106,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":679,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":645,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testCanonicalEmptyCollectionExists":261,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":790,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":227,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":700,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":810,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":735,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":489,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":768,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":512,"org.apache.commons.collections4.CollectionUtilsTest.union":120,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":103,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":391,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":463,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":508,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":558,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":108,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":647,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":673,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":247,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":657,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":674,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":389,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":447,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":725,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":423,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":184,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":672,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":800,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":59,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":271,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":357,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":218,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":537,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":793,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":536,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":77,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":590,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":796,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":516,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":774,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":147,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":145,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":370,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":396,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":310,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":610,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":566,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":494,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":549,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":364,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":377,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":704,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":409,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":599,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":540,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":186,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":471,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":826,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":682,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":756,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":718,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":567,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":630,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":788,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":296,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":228,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":473,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":818,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":517,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":483,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":294,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":295,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":693,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":316,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":501,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":640,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":785,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":770,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":180,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":609,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":755,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":814,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":504,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":786,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":35,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":181,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":386,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":430,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":665,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":179,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":664,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":780,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":765,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":807,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":299,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":333,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":469,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":266,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":612,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":502,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":438,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":802,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":134,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":88,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":470,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":752,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":613,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":93,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":649,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":587,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":787,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":279,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":351,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":748,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":564,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":636,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":563,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":747,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":751,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":539,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":208,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":615,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":204,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":360,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":553,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":729,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":98,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":331,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":110,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":596,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":416,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":550,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":551,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":666,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":722,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":524,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":696,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":773,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":462,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":637,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":775,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":420,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":777,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEqualsNull":260,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":584,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":611,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":461,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":532,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":367,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":795,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":698,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":433,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":269,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":311,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":764,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":737,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":191,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":661,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":156,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":408,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":723,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":282,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":225,"org.apache.commons.collections4.set.CompositeSetTest.testContains":206,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":633,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":806,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":792,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":724,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":808,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":710,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":641,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":465,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":441,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":52,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":662,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":277,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":658,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":464,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":730,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":419,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":783,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":304,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":312,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":758,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":410,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":387,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":684,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":222,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":692,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":376,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":359,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":705,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":397,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":582,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySet":195,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":412,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":656,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":301,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":303,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":302,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":335,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":552,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":267,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":667,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":825,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":407,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":233,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":746,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":492,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":653,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":314,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":97,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":614,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":732,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":717,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":237,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":332,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":383,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":726,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":677,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":487,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":769,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":148,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":92,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":421,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":740,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":394,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testSerializeDeserializeThenCompare":265,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":731,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":253,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":155,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":475,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":0,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":63,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":708,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":381,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":548,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":707,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":379,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testIterator":254,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":817,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":297,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":436,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":499,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":162,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":437,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":759,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":767,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":715,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":109,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":417,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":784,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":324,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testEmptyIterator":255,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":629,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":96,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":176,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":820,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":431,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":627,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":482,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":288},"transformations":[{"failures":[],"tindex":"298e212e-13ef-11e5-a52a-25b3cab0624c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"to","replacement":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"298e483f-13ef-11e5-a52a-25552d453e7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"298e4840-13ef-11e5-a52a-83070215c665","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"298e4841-13ef-11e5-a52a-b36306269560","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"from":"newNode","to":"newNode","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"298e6f52-13ef-11e5-a52a-29c926db42fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-2},{"failures":[9,10],"tindex":"298e9663-13ef-11e5-a52a-83aa313d647e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1},{"failures":[11,12,13,14],"tindex":"298e9664-13ef-11e5-a52a-a5defc1073c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[15],"tindex":"298e9665-13ef-11e5-a52a-93892ecadb9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:382","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[16],"tindex":"298e9666-13ef-11e5-a52a-3f2199257d27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:799","type":"CtIfImpl","sourcecode":"if (java.util.Collection<C> instanceof java.util.List<?>) {\n    final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n    for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n        java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n    }\n} else {\n    final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n    java.util.Collection<C>.clear();\n    java.util.Collection<C>.addAll(java.util.Collection<C>);\n}"},"variableMap":{"transformer":"transformer","this":"this","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<C> != null) && (org.apache.commons.collections4.Transformer<? super C, ? extends C> != null)) {\n    if (java.util.Collection<C> instanceof java.util.List<?>) {\n        final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n        for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n            java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n        }\n    } else {\n        final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n        java.util.Collection<C>.clear();\n        java.util.Collection<C>.addAll(java.util.Collection<C>);\n    }\n} "},"status":-1},{"failures":[17,18],"tindex":"298ebd77-13ef-11e5-a52a-6f2045fd6887","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotPredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} "},"status":-1},{"failures":[19,20,21,22,23],"tindex":"298ebd78-13ef-11e5-a52a-11561041aacb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"298ebd79-13ef-11e5-a52a-7922e342fc23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:225","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[24,25],"tindex":"298ebd7a-13ef-11e5-a52a-237c069978b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"298ebd7b-13ef-11e5-a52a-b725c30541da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"found","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"298ee48c-13ef-11e5-a52a-7fca3db7656a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[],"tindex":"298ee48d-13ef-11e5-a52a-7392a3225ad4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:970","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)"},"status":-2},{"failures":[],"tindex":"298ee48e-13ef-11e5-a52a-c307d4a43867","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"298f0b9f-13ef-11e5-a52a-5dd998c9dda6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:715","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"298f0ba0-13ef-11e5-a52a-7b86303d0fff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"298f0ba1-13ef-11e5-a52a-19c385827212","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"leastIndex","lengthInBits":"leastIndex","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[38,39,40],"tindex":"298f0ba2-13ef-11e5-a52a-779b4b078174","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"298f0ba3-13ef-11e5-a52a-2f4252d29d70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-2},{"failures":[],"tindex":"298f0ba4-13ef-11e5-a52a-2939c045b6aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[41,42,43,44,14,45,46,47,48,49,50],"tindex":"298f0ba5-13ef-11e5-a52a-f3cd56836ba3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"298f0ba6-13ef-11e5-a52a-a3bf99fd2e8a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"status":-2},{"failures":[],"tindex":"298f32b7-13ef-11e5-a52a-7bbf7cfd5b3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"298f32b8-13ef-11e5-a52a-f10f05fe1b6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[83],"tindex":"298f32b9-13ef-11e5-a52a-351ac165ca32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-1},{"failures":[84,85,86,87,88,89],"tindex":"298f32ba-13ef-11e5-a52a-0d8c75f7ea49","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"298f32bb-13ef-11e5-a52a-7dde0b43f75e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[90,91,92,93,94,95,96],"tindex":"298f32bc-13ef-11e5-a52a-399fde9c1422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"variableMap":{"this":"this","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[],"tindex":"298f32bd-13ef-11e5-a52a-7bba6266a483","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:333","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.getClass().equals(java.util.HashSet.java.util.HashSet)) {\n    java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size());\n} else {\n    try {\n        java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n    } catch (final java.lang.InstantiationException ie) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    } catch (final java.lang.IllegalAccessException iae) {\n        java.util.Set<E> = new java.util.HashSet<E>();\n    }\n}"},"status":-2},{"failures":[97,53,98,56,99,60,61,100,66,101,70,72,102,75,77,78,103,82],"tindex":"298f32be-13ef-11e5-a52a-3b2deab1b570","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"298f32bf-13ef-11e5-a52a-6dce81ba238b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2},{"failures":[],"tindex":"298f59d0-13ef-11e5-a52a-b9186b68c6f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"298f59d1-13ef-11e5-a52a-adc6a5911da8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"298f59d2-13ef-11e5-a52a-c7b10b32d446","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1730","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n    return null;\n} "},"variableMap":{"this":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"298f59d3-13ef-11e5-a52a-5b2f1bc8fd35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1069","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"298f59d4-13ef-11e5-a52a-d3147b664a00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"298f59d5-13ef-11e5-a52a-f9f210d0d03a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:967","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval","replacement":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"298f59d6-13ef-11e5-a52a-a71babc17b5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-2},{"failures":[],"tindex":"298f80e7-13ef-11e5-a52a-93666586f95c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"next","entry":"entry","key2":"key4","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"298f80e8-13ef-11e5-a52a-f5ca5f709be4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-2},{"failures":[],"tindex":"298f80e9-13ef-11e5-a52a-978b06e6ccb8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[176,177,178,179,180,181],"tindex":"298f80ea-13ef-11e5-a52a-9114bb4f2666","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[182,183,184,185,186,187,188,189,190,191],"tindex":"298f80eb-13ef-11e5-a52a-419ff294fa7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[],"tindex":"2990443c-13ef-11e5-a52a-457fee7ac12a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-2},{"failures":[104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"2990443d-13ef-11e5-a52a-bf0c3f530ad9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:81","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[],"tindex":"29906b4e-13ef-11e5-a52a-4b9ef3f1c069","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"29906b4f-13ef-11e5-a52a-3ba3b400f7dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[192],"tindex":"29906b50-13ef-11e5-a52a-c5a28a04af52","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"removeState","nextCalled":"removeState"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:215","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (((int) - (int)) > 1)) {\n    throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)));\n} "},"status":-1},{"failures":[],"tindex":"29906b51-13ef-11e5-a52a-6f8087753d49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"29906b52-13ef-11e5-a52a-6f9b8cbc6a58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[24,193,194,25,195],"tindex":"29906b53-13ef-11e5-a52a-23743ea0da7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:145","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Predicate<? super V>) != null) && ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\");\n} "},"status":-1},{"failures":[196,197],"tindex":"29906b54-13ef-11e5-a52a-210900722d41","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[125,129,130,131,132,133,134,135,136,138,139,140,141,198,199,200,148,157,159,160,161,162,163,164,166,201,202,203,171],"tindex":"29906b55-13ef-11e5-a52a-6155bac12af4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[204,205,206,106,107,108],"tindex":"29906b56-13ef-11e5-a52a-7f1c6877aafd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"list":"intersects"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":-1},{"failures":[],"tindex":"29906b57-13ef-11e5-a52a-b95cc485c8a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"29909268-13ef-11e5-a52a-5317b15f9ee5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"29909269-13ef-11e5-a52a-615404e5ef53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"value","parentNode":"value","dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:274","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-2},{"failures":[207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252],"tindex":"2990926a-13ef-11e5-a52a-b7e57219a859","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"2990926b-13ef-11e5-a52a-779b8755c91b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"object","b":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1390","type":"CtReturnImpl","sourcecode":"return (((java.lang.Object[])(java.lang.Object)).int) == 0"},"status":-2},{"failures":[253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,204,205,206,106,107,108,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,182,462,463,183,464,465,184,185,466,467,468,186,469,470,187,188,471,472,473,474,475,476,72,477,478,479,189,190,480,481,482,483,484,485,77,486,487,488,489,191,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,157,159,160,161,162,163,164,166,167,171,172,505,506,507,508,509,510,511,512,513,514,515],"tindex":"2990926c-13ef-11e5-a52a-0ff097436359","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[516,517,518,519,520,521,1,2,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,4,5,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,7,8,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636],"tindex":"2990926d-13ef-11e5-a52a-bf722bbae5a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"2990926e-13ef-11e5-a52a-a3f9e2c5bc61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:186","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"variableMap":{"orderingBits":"valueSet","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:356","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == false) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n} "},"status":-1},{"failures":[637,638,639,640],"tindex":"2990b97f-13ef-11e5-a52a-0bf70a56221b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"h","modifications":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"2990b980-13ef-11e5-a52a-c708cc6a4c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"2990b981-13ef-11e5-a52a-3b2520f3a786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"previous","entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} "},"status":-2},{"failures":[641,182,642,183,643,184,644,185,645,186,646,187,647,188,648,189,649,190,650,191],"tindex":"2990b982-13ef-11e5-a52a-69bb472c2b68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"2990b983-13ef-11e5-a52a-855f1a55b17a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-2},{"failures":[123,651,124,652,653,127,128,129,130,131,133,134,135,136,137,138,139,140,141,148,155,654,156,655,159,160,161,162,163,164,165,166],"tindex":"2990b984-13ef-11e5-a52a-cd5a15587d70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"2990e095-13ef-11e5-a52a-a71bf037cc99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[90,91,92,656,657,658,659,660,661,662,663],"tindex":"2990e096-13ef-11e5-a52a-7121037cf198","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} "},"status":-1},{"failures":[],"tindex":"2990e097-13ef-11e5-a52a-4722b3bd37ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[664,665,666,105,303,311,324],"tindex":"2990e098-13ef-11e5-a52a-155bb3e1295b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2990e099-13ef-11e5-a52a-01de2c85b4c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[667,668,669,670,671,672,673,674,675,676],"tindex":"2990e09a-13ef-11e5-a52a-75af101d5681","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:219","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return true;\n        } \n}"},"status":-1},{"failures":[677,678,679,311,313,316,317,319,321,324,325,326],"tindex":"2990e09b-13ef-11e5-a52a-fb1b0ed6e624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i","proposedCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[680,681,682,474,683],"tindex":"2990e09c-13ef-11e5-a52a-e78a8b68604e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"variableMap":{"e":"e","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[684,685,686,687,688,689,690,691,692,693,694,695,231,241,244,245,248,249,250,251,252],"tindex":"2990e09d-13ef-11e5-a52a-b32e47f490e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"parent","h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"2990e09e-13ef-11e5-a52a-fd58e9abf44e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[696],"tindex":"2990e09f-13ef-11e5-a52a-7fd5202c9838","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:108","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"299107b0-13ef-11e5-a52a-23cb48c446dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[90,91,92,94],"tindex":"299107b1-13ef-11e5-a52a-cbc085c81488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[697,698,699,700,701,702,703,704,705,706,707,708],"tindex":"299107b2-13ef-11e5-a52a-db97da2e33e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[90,91,92,93,94,95,96],"tindex":"299107b3-13ef-11e5-a52a-99f1a1d526ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl","sourcecode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}"},"status":-1},{"failures":[],"tindex":"299107b4-13ef-11e5-a52a-f1882bff32db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"299107b5-13ef-11e5-a52a-7fd8c98be0b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key3","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"299107b6-13ef-11e5-a52a-0d1f7ddbad64","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"299107b7-13ef-11e5-a52a-9d440607d744","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":0},{"failures":[709,710,711,38,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,39,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,40,813,814,815,816,817,818,819,820,821,822,823,824,825,826],"tindex":"299107b8-13ef-11e5-a52a-cb19db9e571d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"29912ec9-13ef-11e5-a52a-4596c3690563","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[652,655],"tindex":"29912eca-13ef-11e5-a52a-717f23ed971b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:650","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"29912ecb-13ef-11e5-a52a-fb72cff8bb4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"29912ecc-13ef-11e5-a52a-758d0b67bbe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"29912ecd-13ef-11e5-a52a-439708b54003","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"29912ece-13ef-11e5-a52a-97d9cf9c3a92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"29912ecf-13ef-11e5-a52a-51787558e85d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[130,131,133,134,135,138,139,140,141,159,160,161,162,163,166],"tindex":"29912ed0-13ef-11e5-a52a-f1f10ca133bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"status":-1},{"failures":[827,119,828],"tindex":"29912ed1-13ef-11e5-a52a-0d33c2f7df14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}