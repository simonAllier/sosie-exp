{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":273,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":23,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":292,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":341,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":395,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":18,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":481,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":498,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":220,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":393,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":497,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":429,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":201,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":39,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":484,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":158,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":241,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":148,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":188,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":218,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":224,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":390,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":229,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":391,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":553,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":0,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":451,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":320,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":50,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":87,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":473,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":386,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":396,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":136,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":394,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":134,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":427,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":174,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":464,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":403,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":325,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":445,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":191,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":552,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":485,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":402,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":251,"org.apache.commons.collections4.ListUtilsTest.testEquals":96,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":311,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":470,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":296,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":397,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":247,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":379,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":1,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":128,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":380,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":434,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":205,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":302,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":153,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":259,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":223,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":546,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":215,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":459,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":122,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":99,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":383,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":322,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":208,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":465,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":105,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":535,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":364,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":53,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":456,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":160,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":439,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":495,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":405,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":298,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":463,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":252,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":238,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":80,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":331,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":489,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":137,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":448,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":60,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":271,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":337,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":441,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":258,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":525,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":295,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":357,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":234,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":46,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":368,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":263,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":488,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":57,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":303,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":253,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":89,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":438,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":326,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":462,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":454,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":520,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":530,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":449,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":124,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":284,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":516,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":289,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":310,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":290,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":377,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":327,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":97,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":166,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":512,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":340,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":406,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":167,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":120,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":288,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":161,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":260,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":48,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":490,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":225,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":130,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":452,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":418,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":430,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":256,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":515,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":355,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":388,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":387,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":345,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":307,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":28,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":358,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":13,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":334,"org.apache.commons.collections4.ListUtilsTest.testSubtract":472,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":170,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":236,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":457,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":131,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":142,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":466,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":121,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":210,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":527,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":222,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":455,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":190,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":350,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":501,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":118,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":510,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":412,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":479,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":426,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":422,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":293,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":351,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":447,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":460,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":25,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":436,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":425,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":244,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":401,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":207,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":423,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":114,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":435,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":175,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":279,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":474,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":431,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":532,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":359,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":519,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":548,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":98,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":176,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":342,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":335,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":49,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":526,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":171,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":11,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":117,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":156,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":469,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":549,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":135,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":123,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":400,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":61,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":547,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":181,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":291,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":40,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":147,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":306,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":480,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":551,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":132,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":162,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":228,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":31,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":336,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":504,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":319,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":246,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":468,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":286,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":287,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":285,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":110,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":417,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":103,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":450,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":180,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":487,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":226,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":370,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":500,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":30,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":362,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":272,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":521,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":189,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":410,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":483,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":494,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":499,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":392,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":505,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":216,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":360,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":517,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":172,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":27,"org.apache.commons.collections4.ArrayStackTest.testNewStack":550,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":233,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":266,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":482,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":315,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":316,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":506,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":523,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":443,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":192,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":540,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":398,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":344,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":145,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":245,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":404,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":112,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":93,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":458,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":538,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":264,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":144,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":330,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":41,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":177,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":492,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":300,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":518,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":537,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":539,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":204,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":86,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":183,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":433,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":268,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":385,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":356,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":420,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":424,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":186,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":155,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":187,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":116,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":267,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":90,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":381,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":59,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":507,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":4,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":140,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":7,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":399,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":250,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":328,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":413,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":389,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":511,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":184,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":496,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":367,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":231,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":442,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":382,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":163,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":14,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":378,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":415,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":265,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":71,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":230,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":509,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":52,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":193,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":243,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":199,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":274,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":421,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":92,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":376,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":541,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":366,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":318,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":221,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":76,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":283,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":321,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":282,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":361,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":428,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":471,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":257,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":408,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":347,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":338,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":329,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":309,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":407,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":514,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":217,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":51,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":477,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":478,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":503,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":43,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":313,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":278,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":314,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":108,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":312,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":68,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":369,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":444,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":67,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":513,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":219,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":305,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":453,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":349,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":531,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":339,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":528,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":373,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":374,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":237,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":375,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":502,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":299,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":323,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":269,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":277,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":533,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":414,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":102,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":440,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":211,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":297,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":491,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":333,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":94,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":151,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":294,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":255,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":409,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":304,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":194,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":33,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":195,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":276,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":467,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":32,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":476,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":529,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":348,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":493,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":384,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":235,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":169,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":365,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":486,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":239,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":196,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":19,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":543,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":197,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":212,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":534,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":461,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":536,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":542,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":544,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":254,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":545,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":173,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":416,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":446,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":363,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":26,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":275},"transformations":[{"failures":[],"tindex":"6d8240a6-13b1-11e5-98b2-a5d113496335","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"6d8240a7-13b1-11e5-98b2-ddc09f6905dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:240","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    boolean = true;\n} "},"variableMap":{"start":"maxElements","end":"maxElements","full":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[32,33,34,35,36,37],"tindex":"6d8267b8-13b1-11e5-98b2-5f02aabe7b93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"delta","start":"delta","end":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"6d8267b9-13b1-11e5-98b2-fd0f07bd66d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"6d8267ba-13b1-11e5-98b2-4109fd7c73ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"6d8267bb-13b1-11e5-98b2-637b1af46fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"6d8267bc-13b1-11e5-98b2-f15bd4220b46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"status":-2},{"failures":[84],"tindex":"6d828ecd-13b1-11e5-98b2-27c92d9c669c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"6d828ece-13b1-11e5-98b2-c357f4b6a550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"6d828ecf-13b1-11e5-98b2-13e3f33016c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-2},{"failures":[85],"tindex":"6d828ed0-13b1-11e5-98b2-fd16326e8368","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"6d828ed1-13b1-11e5-98b2-41093b9a5817","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"next","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[86],"tindex":"6d82b5e2-13b1-11e5-98b2-8d02b3e7e41c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:270","type":"CtIfImpl","sourcecode":"if (java.lang.Object.equals(V)) {\n    return true;\n} "},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95],"tindex":"6d82b5e3-13b1-11e5-98b2-93fb3a19476c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"6d82b5e4-13b1-11e5-98b2-93c58cb5fa86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-2},{"failures":[96],"tindex":"6d82b5e5-13b1-11e5-98b2-c102194d2911","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"obj1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:257","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<?>.hasNext()) && (java.util.Iterator<?>.hasNext())) {\n    java.lang.Object = java.util.Iterator<?>.next();\n    java.lang.Object = java.util.Iterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6d82b5e6-13b1-11e5-98b2-110b8a0c561a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,86,113],"tindex":"6d82b5e7-13b1-11e5-98b2-97df7468f71f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"6d82dcf8-13b1-11e5-98b2-f1c4431c881a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"variableMap":{"map":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1336","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":0},{"failures":[38,41,43,44,45,47,48,50,51,52,54,55,57,60,61,65,66,67,68,69,70,71,74,78,80,81,82,83],"tindex":"6d82dcf9-13b1-11e5-98b2-2d6bf2092bd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-1},{"failures":[],"tindex":"6d82dcfa-13b1-11e5-98b2-85afa189d4eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"6d82dcfb-13b1-11e5-98b2-3d5fba5c5c53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"variableMap":{"size":"length","in":"obj","elements":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"6d83040c-13b1-11e5-98b2-776065d7dd60","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"nextIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}"},"status":-2},{"failures":[],"tindex":"6d83040d-13b1-11e5-98b2-4382422df044","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"right","current":"current","tree":"current","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142],"tindex":"6d83040e-13b1-11e5-98b2-4dff9d9b4fd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"uniqueSet","existingSet":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[143,144,145,146,147,148],"tindex":"6d83040f-13b1-11e5-98b2-97e6b2924521","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:132","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"6d830410-13b1-11e5-98b2-d966d4d120c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"6d832b21-13b1-11e5-98b2-2b4cb55b8e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"6d832b22-13b1-11e5-98b2-adbc330ccfee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"6d832b23-13b1-11e5-98b2-f5b73e8bf995","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[183,184,185,186,187,188,189,156],"tindex":"6d832b24-13b1-11e5-98b2-bd4975ed9870","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"callCounter","start":"callCounter","maxElements":"callCounter","end":"callCounter","full":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[],"tindex":"6d835235-13b1-11e5-98b2-1ddbe3b50bcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:974","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"variableMap":{"label":"nextElement","out":"nextElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:373","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"6d835236-13b1-11e5-98b2-c18e5a8df4ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[190,191],"tindex":"6d835237-13b1-11e5-98b2-07198c5861a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"6d835238-13b1-11e5-98b2-c93003eed52f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashIndex","proposedCapacity":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"6d835239-13b1-11e5-98b2-6b03e5fbae9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"variableMap":{"keys":"key","largestKey":"total","i":"total","direction":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:264","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"6d83523a-13b1-11e5-98b2-27b50d16249e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"6d83523b-13b1-11e5-98b2-37abfbc38906","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[204,205,206,207,208,209,210,211,212,213,214,215,157,216,217,218,158,219,160,161,220,162,163,164,165,166],"tindex":"6d83523c-13b1-11e5-98b2-0bb1aaeafd0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1121","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:103","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<E>.size()"},"status":-1},{"failures":[221,222,223,224,225,226,227,228,229,41,42,47,48,50,51,52,53,55,57,60,61,75,79,80,81,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"6d83523d-13b1-11e5-98b2-13ffc677b9df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"6d83794e-13b1-11e5-98b2-f5fb0b5adaeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:190","type":"CtIfImpl","sourcecode":"if (java.io.ByteArrayInputStream != null) {\n    java.io.ByteArrayInputStream.close();\n} "},"variableMap":{"bais":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[246],"tindex":"6d83794f-13b1-11e5-98b2-d9f30953ae39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6d837950-13b1-11e5-98b2-6b54211feaa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1342","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int++;\n    java.util.Iterator<?>.next();\n}"},"status":-2},{"failures":[247,248,249,250,251,252,253,254,255,256,257,258,121,259,260,261,122,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,132,277,278,279,280,281],"tindex":"6d837951-13b1-11e5-98b2-a3f126546191","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-1},{"failures":[32,33,34,35,36,37],"tindex":"6d837952-13b1-11e5-98b2-334c5c0eb47e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"end2","delta":"k","end2":"start1","this":"this","i":"delta","end1":"end2","k":"start1","start2":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,112,300,301,302,303,304,86,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,113,321,322,323,324,325,326,327,328],"tindex":"6d837953-13b1-11e5-98b2-a595c3e7e4d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:352","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"6d84fff4-13b1-11e5-98b2-2de9fc4f4234","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:859","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"rightChild","leftChild":"node","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"6d84fff5-13b1-11e5-98b2-0721ef1ee900","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[329,330,331,332,333,334,335,336],"tindex":"6d84fff6-13b1-11e5-98b2-9d9a614caa56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"status":-1},{"failures":[],"tindex":"6d84fff7-13b1-11e5-98b2-818b9a948b43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"6d852708-13b1-11e5-98b2-435f427b9ffb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[337,338,339,340,341,342,343,344,345],"tindex":"6d852709-13b1-11e5-98b2-676291bc7db7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"6d854e1a-13b1-11e5-98b2-dfbd9ae23348","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"6d854e1b-13b1-11e5-98b2-2580156410a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"6d854e1c-13b1-11e5-98b2-c7486126b3b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":0},{"failures":[346,347,348,349,350,351,352,353,354,355,356],"tindex":"6d854e1d-13b1-11e5-98b2-9b4fea3cb3cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:404","type":"CtIfImpl","sourcecode":"if (java.lang.Long != null) {\n    final long long = java.lang.Long.longValue();\n    return (long >= 0) && (long >= long);\n} "},"status":-1},{"failures":[357,358,359,360,361,362,363],"tindex":"6d854e1e-13b1-11e5-98b2-4f7171014442","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"6d85752f-13b1-11e5-98b2-551e09685c19","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":0},{"failures":[364,116,365,120,258,121,366,125,367,128,368,131,369,135,370,136,371,140,372,141],"tindex":"6d857530-13b1-11e5-98b2-d766510d1b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"6d857531-13b1-11e5-98b2-3bd35b45c731","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:320","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[373,374,375,376,377,378,379,380,381,382,383],"tindex":"6d857532-13b1-11e5-98b2-d9359d7ac692","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[],"tindex":"6d857533-13b1-11e5-98b2-372a06a2c84c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"6d857534-13b1-11e5-98b2-c18b356d66fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"status":-2},{"failures":[183,187],"tindex":"6d857535-13b1-11e5-98b2-1fdeb96e120a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:85","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    boolean = true;\n} "},"status":-1},{"failures":[384,385,386,337,338,387,388,389,339,340,341,342,343,344,345],"tindex":"6d857536-13b1-11e5-98b2-49faa550868c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","node":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[390],"tindex":"6d85c357-13b1-11e5-98b2-49799720f68f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:123","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n} "},"status":-1},{"failures":[],"tindex":"6d85ea68-13b1-11e5-98b2-8b4faeaef802","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"6d85ea69-13b1-11e5-98b2-a3fcc1ca0c4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"next","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[38,39,41,42,43,44,45,47,48,50,51,52,53,54,55,57,60,61,65,66,68,69,70,74,83],"tindex":"6d85ea6a-13b1-11e5-98b2-674169455ee8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"6d85ea6b-13b1-11e5-98b2-c124933d47f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"value","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[116,120,121,125,128,131,135,136,140,141],"tindex":"6d85ea6c-13b1-11e5-98b2-df46cd156c96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"6d85ea6d-13b1-11e5-98b2-afd8485c87f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[97,98,391,392,99,100,393,101,394,102,103,395,104,105,106,396,107,108,109,110,397,111,112,86,318,113],"tindex":"6d85ea6e-13b1-11e5-98b2-379bc7a8338d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"6d85ea6f-13b1-11e5-98b2-3951fd94ea68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[32,33,34,35,36,37],"tindex":"6d85ea70-13b1-11e5-98b2-13fd33792056","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"start1","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:263","type":"CtWhileImpl","sourcecode":"while ((int < int) || (int < int)) {\n    if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n        ++int;\n    } else {\n        if ((int - int) > (int - int)) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        } else {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n        }\n    }\n}"},"status":-1},{"failures":[115,116,398,399,400,401,402,403,404,405,406,407,408,409,410,119,120,248,250,252,253,254,256,257,258,121,259,261,411,412,413,414,415,416,417,124,125,418,419,420,421,422,423,424,425,426,427,428,429,430,127,128,431,432,433,434,435,436,437,438,439,440,441,442,443,130,131,262,264,266,267,268,269,270,271,272,273,274,275,276,444,445,446,447,448,449,450,451,452,453,134,135,454,455,456,457,458,459,460,370,136,461,462,139,140,463,464,465,466,467,468,469,372,141,470,471,472,473],"tindex":"6d861181-13b1-11e5-98b2-3959bd21820a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"6d861182-13b1-11e5-98b2-6de55d5ba40e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"6d861183-13b1-11e5-98b2-117936ad31db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":0},{"failures":[474,475],"tindex":"6d861184-13b1-11e5-98b2-0d7e64610125","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-1},{"failures":[476,477],"tindex":"6d861185-13b1-11e5-98b2-6948bd373129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"6d861186-13b1-11e5-98b2-df2eefcffc8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"current","parent":"path","left":"path","root":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"6d861187-13b1-11e5-98b2-b90cd5a4b7bf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[478,479,480,481,482,483,484,485,486,487,488,489,490,491,492],"tindex":"6d861188-13b1-11e5-98b2-934efb3513a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[],"tindex":"6d861189-13b1-11e5-98b2-09ef70348fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"6d86118a-13b1-11e5-98b2-d3a1c9f4e9bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,479,523,524,525,526,527,528,529,530,531,532],"tindex":"6d86118b-13b1-11e5-98b2-514c36d7e255","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[533],"tindex":"6d86389c-13b1-11e5-98b2-2d21f6250956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"6d86389d-13b1-11e5-98b2-879d65459316","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"variableMap":{"size":"h","out":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"6d86389e-13b1-11e5-98b2-69b96661d193","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"6d86389f-13b1-11e5-98b2-71fecf354d1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:108","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"6d8638a0-13b1-11e5-98b2-e3fe64102b4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"6d8638a1-13b1-11e5-98b2-3d205f8c38d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"6d8638a2-13b1-11e5-98b2-bb23626be6a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:319","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    java.util.Collection<E>.clear();\n}"},"status":-2},{"failures":[],"tindex":"6d8638a3-13b1-11e5-98b2-e5971311ee1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-2},{"failures":[],"tindex":"6d8638a4-13b1-11e5-98b2-4f79e32da3ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"variableMap":{"size":"length","buckets":"obj","length":"length","cnt":"length","locks":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"6d8638a5-13b1-11e5-98b2-8f5b05f19652","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"hash","index":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"6d8638a6-13b1-11e5-98b2-3bbb87d07c48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"status":-2},{"failures":[373,374,375,376,377,378,379,380,381,382,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553],"tindex":"6d8638a7-13b1-11e5-98b2-01101798081a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:107","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get(int);\n}"},"variableMap":{"this":"this","m":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-1},{"failures":[],"tindex":"6d865fb8-13b1-11e5-98b2-9b097fd0134e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:77","type":"CtIfImpl","sourcecode":"if (java.util.Set<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Set must not be null\");\n} "},"variableMap":{"set":"existingSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:346","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n        throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n    } \n    org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n    if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n        throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n    } \n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}