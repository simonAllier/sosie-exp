{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":216,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":156,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":7,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":424,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":145,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":586,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":197,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":370,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":380,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":401,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":539,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":495,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":455,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":415,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":601,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":383,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":189,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":161,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":346,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":475,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":535,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":553,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":542,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":613,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":246,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":555,"org.apache.commons.collections4.CollectionUtilsTest.collect":493,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":229,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":178,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":234,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":120,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveAll":467,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":121,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":551,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":618,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":583,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":527,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":255,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":163,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":279,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.initializationError":418,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":359,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":612,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":39,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":391,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":549,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":307,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":293,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":72,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":340,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":122,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":578,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsSelfHashCode":647,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":219,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":328,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":112,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":157,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":356,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":464,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":348,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":431,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testObjectHashCodeEqualsContract":646,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":335,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":446,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testFullIterator":207,"org.apache.commons.collections4.CollectionUtilsTest.transform2":491,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":330,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":582,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":638,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":428,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":494,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":543,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":296,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":387,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":17,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorOrder":417,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":477,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":364,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":144,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":506,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":329,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":339,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":137,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":247,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":600,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":341,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":623,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":228,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":141,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":312,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":587,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":149,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":222,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":509,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":147,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":336,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":593,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":271,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":603,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":375,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetIteratorRemoveChangesMap":360,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":470,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":498,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":258,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":558,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":354,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":267,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":201,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":350,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":604,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":195,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":243,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":607,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":395,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":265,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":545,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":261,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":572,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":588,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":451,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":81,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":133,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":281,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsContract":644,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":574,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":239,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":563,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":522,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":260,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":472,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":166,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":310,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":38,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":650,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":404,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsContract":636,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":420,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":21,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":334,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":466,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":514,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":552,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":503,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":268,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":576,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":322,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":181,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":564,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":627,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":353,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":204,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":434,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":448,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":139,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":306,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":528,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":559,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":277,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":136,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":313,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":254,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":523,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":230,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":289,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":496,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":276,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":221,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":381,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":32,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":361,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":635,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":338,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":406,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":347,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":579,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":352,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":88,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":206,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsContract":639,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":200,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":287,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":210,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":116,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":146,"org.apache.commons.collections4.map.LRUMapTest.testClone":211,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsSelfHashCode":632,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":445,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":266,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":610,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":241,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":320,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":450,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":180,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":407,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":479,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":298,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsSelfHashCode":626,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":125,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsContract":641,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":606,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":227,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":308,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":295,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":27,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":400,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":591,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsSelfHashCode":634,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":537,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":78,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":269,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":331,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":148,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":440,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":89,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":423,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":2,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":589,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":590,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":333,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":447,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":249,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":273,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":324,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":602,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":318,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":497,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":69,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":454,"org.apache.commons.collections4.bag.PredicatedBagTest.testObjectHashCodeEqualsContract":625,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":193,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":135,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":297,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":433,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":521,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":223,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":443,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":132,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":408,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":488,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":108,"org.apache.commons.collections4.bag.HashBagTest.testObjectHashCodeEqualsSelfHashCode":637,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":645,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.initializationError":458,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":109,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":616,"org.apache.commons.collections4.map.TransformedSortedMapTest.initializationError":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":25,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":252,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsContract":648,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":357,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":580,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":476,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":51,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":337,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":376,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsContract":651,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":152,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":300,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":305,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":516,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":629,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":67,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":314,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":486,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":538,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":457,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapClear":363,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectHashCodeEqualsContract":286,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":291,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":560,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":233,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":270,"org.apache.commons.collections4.bag.TransformedBagTest.testObjectHashCodeEqualsContract":631,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":377,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":568,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":530,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":77,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectHashCodeEqualsContract":301,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveAll":302,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":225,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":597,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":605,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":577,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":485,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":474,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":412,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":192,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":480,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":544,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":231,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapClear":345,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":119,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":26,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":643,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":245,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":390,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":541,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":237,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":162,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":368,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":456,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":168,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":316,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":326,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":442,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":465,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":436,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":104,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":327,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":550,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":614,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":124,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":238,"org.apache.commons.collections4.bag.CollectionBagTest.testObjectHashCodeEqualsSelfHashCode":649,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":416,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":622,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":540,"org.apache.commons.collections4.bag.TreeBagTest.testObjectHashCodeEqualsSelfHashCode":640,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":444,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":288,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":388,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":598,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":28,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":24,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":565,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.map.HashedMapTest.testClone":214,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":319,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":611,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":63,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":371,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveAll":332,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":199,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":343,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":362,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":58,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":403,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":250,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":342,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":484,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":461,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":481,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":8,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":397,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":172,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":569,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":294,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":358,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":571,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":518,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":251,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":284,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":620,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":524,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":164,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":393,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":355,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":599,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":573,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":71,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":432,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":37,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":150,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":512,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testObjectHashCodeEqualsSelfHashCode":642,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":468,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":167,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":507,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":48,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":101,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":624,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":515,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":98,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.initializationError":439,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":220,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":99,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":123,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":94,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":95,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":259,"org.apache.commons.collections4.CollectionUtilsTest.isFull":92,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":212,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":59,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":285,"org.apache.commons.collections4.map.LinkedMapTest.testClone":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":34,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":130,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":427,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":373,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":570,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":236,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":508,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":213,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":561,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":504,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":526,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":413,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":519,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapGet":367,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapGet":349,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":372,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":453,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetIteratorRemoveChangesMap":378,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":471,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":235,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":421,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":533,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":257,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":384,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":188,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":426,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":529,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":253,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":290,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":385,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":419,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":171,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":315,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testObjectHashCodeEqualsSelfHashCode":652,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":502,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":469,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":594,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":596,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":595,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":478,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":155,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":226,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":232,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":209,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":585,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":323,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":274,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":389,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":414,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":487,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":513,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":554,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":621,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":304,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":351,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":61,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":463,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":409,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":9,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":399,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":280,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":410,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":369,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":65,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":205,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":264,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":256,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":292,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":628,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":536,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":126,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":90,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":460,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":365,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":492,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":557,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":118,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":615,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":617,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":143,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":429,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":556,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":142,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":177,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":398,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":490,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":396,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":449,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":263,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":321,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":499,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":500,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":242,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":489,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":501,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":278,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":75,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":159,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":425,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":525,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":52,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":366,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testObjectHashCodeEqualsContract":633,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":532,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":531,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":547,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":608,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":473,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":275,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":215,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":174,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":510,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":437,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":546,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":184,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":173,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":283,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":405,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":619,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":482,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":517,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":459,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":186,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":575,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":325,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":386,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":394,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":592,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":344,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":566,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":57,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":567,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":630,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":240,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":452,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":441,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":562,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":520,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":244,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":187,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":609,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":435,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":55,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":282,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":382,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":534,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":422,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":111,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":374,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":584,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":107,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":272,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":309,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":548},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"f7d591ed-13c2-11e5-8785-d5a9e7c5b83d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"f7dc96ce-13c2-11e5-8785-df07a155368f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkValue(java.lang.Object)"},"variableMap":{"this":"this","value":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[89,90,91],"tindex":"f7dc96cf-13c2-11e5-8785-2b35d92b4365","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:185","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[92,93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"f7dcbde0-13c2-11e5-8785-1b571e316feb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"maxElements","index":"maxElements","beyond":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[],"tindex":"f7dcbde1-13c2-11e5-8785-f32baf80ee86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":0},{"failures":[],"tindex":"f7df07d2-13c2-11e5-8785-3dd7936209ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:87","type":"CtReturnImpl","sourcecode":"return boolean ? -1 : 0"},"status":-2},{"failures":[],"tindex":"f7df2ee3-13c2-11e5-8785-7d248f337cb5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"root","prior":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f7df2ee4-13c2-11e5-8785-a92359fcdac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":0},{"failures":[106],"tindex":"f7df2ee5-13c2-11e5-8785-f1612dcdb048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:80","type":"CtIfImpl","sourcecode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"f7df2ee6-13c2-11e5-8785-d70051642b88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-2},{"failures":[],"tindex":"f7df55f7-13c2-11e5-8785-05fa727ae7b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"f7e06768-13c2-11e5-8785-874af8766c83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"f7e08e79-13c2-11e5-8785-5166956130e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","parent":"p","left":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f7e08e7a-13c2-11e5-8785-6756b7584ea7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(java.lang.Object, org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)"},"status":-2},{"failures":[161,162],"tindex":"f7e374ab-13c2-11e5-8785-ebf672f8868b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"f7e374ac-13c2-11e5-8785-f93d5cac3db7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[163,164,165,166,167,168,169,170,171,172,173,174],"tindex":"f7e374ad-13c2-11e5-8785-91481d4d69c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"f7e39bbe-13c2-11e5-8785-35240ebc2a3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-2},{"failures":[],"tindex":"f7e39bbf-13c2-11e5-8785-7ba9eb8c1a14","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:514","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f7e856b0-13c2-11e5-8785-ade2944297c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key5","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"f7e87dc1-13c2-11e5-8785-a56f114037c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-2},{"failures":[],"tindex":"f7e87dc2-13c2-11e5-8785-355529c33323","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":0},{"failures":[175,176],"tindex":"f7e8a4d3-13c2-11e5-8785-49ce9796d966","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:326","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"f7e8a4d4-13c2-11e5-8785-25cd4562713c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:379","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.bag.AbstractMapBag<E>.uniqueSet().iterator()"},"status":-2},{"failures":[177,178,179,180,181,182,183,184],"tindex":"f7e8a4d5-13c2-11e5-8785-59cfb1426e38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[185,186,187,188,189],"tindex":"f7e8a4d6-13c2-11e5-8785-c32c9a2ddc81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")"},"status":-1},{"failures":[],"tindex":"f7e8cbe7-13c2-11e5-8785-dbdc37f5f09f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:436","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f7e8cbe8-13c2-11e5-8785-5119c4daccb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":0},{"failures":[190,191,192,193],"tindex":"f7e8cbe9-13c2-11e5-8785-c18ca21943d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:659","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"f7e8cbea-13c2-11e5-8785-33e3dff076a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"f7e8f2fb-13c2-11e5-8785-c72f3d406915","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"f7f723cc-13c2-11e5-8785-3587a944a639","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"key1","defaultValue":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"f7f723cd-13c2-11e5-8785-61632f7d9123","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"length","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f7f74ade-13c2-11e5-8785-4727fc1201a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[194,195],"tindex":"f7f771ef-13c2-11e5-8785-d7f2e4aa84fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:320","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"variableMap":{"mapSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f7f771f0-13c2-11e5-8785-4fbab9d38906","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f7f79901-13c2-11e5-8785-67ad03982514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2},{"failures":[],"tindex":"f7f79902-13c2-11e5-8785-d743343f2761","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":0},{"failures":[65,81,83,86,87,196,197,198,199,200],"tindex":"f7fb90a3-13c2-11e5-8785-59f585d2a4cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f7fbdec4-13c2-11e5-8785-af86070e911e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"index","index":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-2},{"failures":[],"tindex":"f7fbdec5-13c2-11e5-8785-dfd6d3d07e57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:391","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n    org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n}"},"variableMap":{"size":"h","buckets":"key2","lock":"key2","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:228","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"f7fc05d6-13c2-11e5-8785-0d854f2e3c37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":0},{"failures":[201],"tindex":"f7fc05d7-13c2-11e5-8785-91614ab30ca7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"removeLRUEntry","beforeFirst":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"f7fc05d8-13c2-11e5-8785-f54bb88693c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[202],"tindex":"f8044339-13c2-11e5-8785-cb9d48b66531","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"f8046a4a-13c2-11e5-8785-3bd0bbd95f13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-2},{"failures":[203,204,205,206,207,208],"tindex":"f8046a4b-13c2-11e5-8785-69c599bc9ba2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"wrappedIteratorIndex","hash2":"wrappedIteratorIndex","hash1":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:150","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"f8046a4c-13c2-11e5-8785-1507b8e2b06b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[222,223,224,225],"tindex":"f804915d-13c2-11e5-8785-97fc6ac045f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:448","type":"CtAssignmentImpl","sourcecode":"int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"f804915e-13c2-11e5-8785-b5f9ed2f13cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:706","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n        return null;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"left","current":"node","tree":"node","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"tindex":"f80c598f-13c2-11e5-8785-8dc8c9766413","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"f80c7fa0-13c2-11e5-8785-631638128a7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"length","removeIndex":"length","currentIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"f80c7fa1-13c2-11e5-8785-0308a4f8a523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"f80ca6b2-13c2-11e5-8785-57c48afced66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"f80ca6b3-13c2-11e5-8785-63fc8c83400c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:306","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f80ca6b4-13c2-11e5-8785-8720d7a04d31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"status":0},{"failures":[48,49,54,55,56,57,58,267,60,63,64,83,196,198,199,74,75,76,77,78,268,80,81],"tindex":"f80ccdc5-13c2-11e5-8785-25abf4f5f07c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[269,270],"tindex":"f80ccdc6-13c2-11e5-8785-5f556365844a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,54,55,56,57,58,59,60,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490],"tindex":"f80ccdc7-13c2-11e5-8785-b7c657f808c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>.hasNext()"},"status":-1},{"failures":[491,492,493],"tindex":"f80cf4d8-13c2-11e5-8785-2be4d75565b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[494,495,496,497,498],"tindex":"f80d1be9-13c2-11e5-8785-792d4535378b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[499,500,501,502,503,202,504,505,506,507,508,509],"tindex":"f80d1bea-13c2-11e5-8785-0969d5c0354b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[510,511,512,513],"tindex":"f82add1b-13c2-11e5-8785-89e192e83eda","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} "},"status":-1},{"failures":[],"tindex":"f82add1c-13c2-11e5-8785-231723a46124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"f82add1d-13c2-11e5-8785-97635775a0e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:251","type":"CtIfImpl","sourcecode":"if ((java.util.List<java.util.Comparator<E>>.size()) == 0) {\n    throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\");\n} "},"status":-2},{"failures":[],"tindex":"f82add1e-13c2-11e5-8785-0f8bd8be42e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"status":-2},{"failures":[514,9,30],"tindex":"f82b042f-13c2-11e5-8785-d12ba9a2d554","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-1},{"failures":[],"tindex":"f82b0430-13c2-11e5-8785-3f4428cd7beb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:92","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get((int - 1))"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"status":-3},{"failures":[],"tindex":"f82b0431-13c2-11e5-8785-9943c312335d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:432","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[515,516,517,518,519,520,521,25,26,27,28,522,29,30,523,31,524,32,525,526,527,528,529,530,33,34,531,35,37,38,532,39,40,41,42,43,44,45,46,533,534,47,535,36],"tindex":"f82b0432-13c2-11e5-8785-0ff1ee3ac461","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:136","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"f82b0433-13c2-11e5-8785-e3ac2e9234e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"entry","entry":"entry","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[536,537,538,539,540,541,542,543,520,544,522,545,523,546,524],"tindex":"f82b2b44-13c2-11e5-8785-65310627ec78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl","sourcecode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} "},"status":-1},{"failures":[],"tindex":"f82b2b45-13c2-11e5-8785-87395b19f204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[190,191,192,193],"tindex":"f82b2b46-13c2-11e5-8785-11934a4ba7cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:362","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[190,191,192,193,547],"tindex":"f82b2b47-13c2-11e5-8785-9b10fcd93708","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"f82b2b48-13c2-11e5-8785-755b5af33fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f82b5259-13c2-11e5-8785-6de4c49a4a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"f82b525a-13c2-11e5-8785-1d598de0673b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:286","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:553","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"f82b525b-13c2-11e5-8785-83565bf985ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1716","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object)"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"f82ba07c-13c2-11e5-8785-01dd7e5d7406","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:141","type":"CtReturnImpl","sourcecode":"return boolean ^ boolean ? boolean ^ (boolean) ? 1 : -1 : 0"},"status":-2},{"failures":[],"tindex":"f82ba07d-13c2-11e5-8785-9190a3860198","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:122","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getValue()"},"status":-2},{"failures":[],"tindex":"f82ba07e-13c2-11e5-8785-f3df38c8693b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f82ba07f-13c2-11e5-8785-3f5125e6203f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"object","keys":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:110","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[548,549,550,551],"tindex":"f82bc790-13c2-11e5-8785-1d44cafeae02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:73","type":"CtIfImpl","sourcecode":"if (((org.w3c.dom.NodeList) != null) && ((int) < (org.w3c.dom.NodeList.getLength()))) {\n    return org.w3c.dom.NodeList.item((int)++);\n} "},"status":-1},{"failures":[],"tindex":"f82bc791-13c2-11e5-8785-5b7b7762ca98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[552],"tindex":"f82bc792-13c2-11e5-8785-49a93c1ee4d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"f82bc793-13c2-11e5-8785-67141b44fa97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","parent":"right","left":"current","root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:726","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"f82bc794-13c2-11e5-8785-a998c15d8c03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"variableMap":{"data":"newEntries","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[],"tindex":"f82bc795-13c2-11e5-8785-63efa2bfba1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"predecessor","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"f82beea6-13c2-11e5-8785-7fca83b70686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"f82beea7-13c2-11e5-8785-09ebd62ca982","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:329","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.addAll(int, java.util.List<E>);\n} "},"status":-2},{"failures":[],"tindex":"f82beea8-13c2-11e5-8785-8793941adcfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"f82beea9-13c2-11e5-8785-c3d606a8feb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"entrySize","index":"entrySize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}"},"status":-2},{"failures":[],"tindex":"f82c15ba-13c2-11e5-8785-db179c3cd5c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[553],"tindex":"f82c15bb-13c2-11e5-8785-f1c499cff00d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-1},{"failures":[],"tindex":"f82c15bc-13c2-11e5-8785-8d1ba1ff8f74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,132,150,151,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623],"tindex":"f82c15bd-13c2-11e5-8785-272361a0b20f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"isLocked","nextCalled":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652],"tindex":"f82d9c5e-13c2-11e5-8785-45b36dafa641","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":98,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}