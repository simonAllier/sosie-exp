{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":441,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":273,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":81,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":475,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":214,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":253,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":389,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":411,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":313,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":450,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":424,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":377,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":493,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":194,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":719,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":835,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":502,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":667,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":369,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":488,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":757,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":510,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":445,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":482,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":107,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":754,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":479,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":541,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":265,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":320,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":744,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":416,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":167,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":601,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":474,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":351,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":631,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":812,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":283,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":173,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":562,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":189,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":745,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":556,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":147,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":725,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":578,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":459,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":451,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":497,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":623,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":652,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":752,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":239,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":604,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":442,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":615,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":584,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":789,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":500,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":332,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":64,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":542,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":709,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":688,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":278,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":786,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":546,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":22,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":840,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":336,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":366,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":281,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":178,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":572,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":527,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":746,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":582,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":740,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":410,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":598,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":349,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":520,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":231,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":470,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":707,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":762,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":330,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":770,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":613,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":620,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":650,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":26,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":828,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":843,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":547,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":244,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":609,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":764,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":384,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":247,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":525,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":117,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":177,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":325,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":671,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":217,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":516,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":446,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":540,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":390,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":574,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":679,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":269,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":588,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":478,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":791,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":295,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":597,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":807,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":261,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":750,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":34,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":400,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":576,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":830,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":155,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":616,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":271,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":422,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":496,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":687,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":484,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":388,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":655,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":809,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":658,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":438,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":726,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":677,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":513,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":340,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":345,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":511,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":448,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":440,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":262,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":804,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":767,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":608,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":347,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":643,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":415,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":739,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":629,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":524,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":76,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":772,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":402,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":782,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":166,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":321,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":435,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":429,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":793,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":834,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":607,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":233,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":367,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":234,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":766,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":638,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":806,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":825,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":154,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":665,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":696,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":30,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":775,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":255,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":85,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":622,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":670,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":53,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":711,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":811,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":144,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":226,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":702,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":568,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":386,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":280,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":326,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":703,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":560,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":819,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":354,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":765,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":797,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":627,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":565,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":842,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":125,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":394,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":683,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":391,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":378,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":294,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":277,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":759,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":121,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":334,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":45,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":640,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":327,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":204,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":432,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":733,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":259,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":826,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":501,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":558,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":499,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":838,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":274,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":101,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":318,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":358,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":254,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":299,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":162,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":724,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":428,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":444,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":567,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":651,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":823,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":653,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":303,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":212,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":779,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":413,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":491,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":353,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":203,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":202,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":199,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":198,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":201,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":200,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":21,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":197,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":196,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":666,"org.apache.commons.collections4.list.TreeListTest.testBug35258":9,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":813,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":503,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":32,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":40,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":383,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":266,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":208,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":319,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":348,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":433,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":829,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":805,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":676,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":515,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":379,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":2,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":589,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":310,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":590,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":654,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":639,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":506,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":833,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":523,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":509,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":507,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":595,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":575,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":636,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":363,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":534,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":832,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":548,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":375,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":747,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":344,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":517,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":777,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":698,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":735,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":267,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":788,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":798,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":776,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":365,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":713,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":139,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":814,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":734,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":647,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":730,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":596,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":126,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":216,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":385,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":583,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":421,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":554,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":397,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":675,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":781,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":538,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":741,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":606,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":680,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":285,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":443,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":844,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":557,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":431,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":808,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":215,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":755,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":505,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":495,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":573,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":210,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":836,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":579,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":222,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":396,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":355,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":810,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":818,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":457,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":535,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":780,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":218,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":839,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":368,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":846,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":539,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":674,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":461,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":827,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":29,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":398,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":672,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":795,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":272,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":455,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":456,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":816,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":821,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":228,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":80,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":305,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":309,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":133,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":211,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":257,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":387,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":768,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":737,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":600,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":732,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":659,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":787,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":60,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":822,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":802,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":407,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":632,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":585,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":691,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":715,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":297,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":489,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":778,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":618,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":610,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":338,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":464,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":714,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":463,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":190,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":342,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":146,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":738,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":577,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":46,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":602,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":193,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":153,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":749,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":439,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":792,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":728,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":634,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":323,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":571,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":381,"org.apache.commons.collections4.map.CompositeMapTest.testGet":423,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":591,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":645,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":437,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":694,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":521,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":731,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":372,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":790,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":118,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":419,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":137,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":145,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":130,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":248,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":669,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":436,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":599,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":476,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":706,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":103,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":352,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":304,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":704,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":729,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":287,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":617,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":695,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":625,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":641,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":462,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":236,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":736,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":186,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":237,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":552,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":454,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":163,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":249,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":458,"org.apache.commons.collections4.list.TreeListTest.testRemove":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":545,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":581,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":258,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":235,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":447,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":561,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":324,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":799,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":593,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":373,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":563,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":95,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":648,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":399,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":298,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":528,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":708,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":721,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":331,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":637,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":171,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":544,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":430,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":468,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":549,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":467,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":466,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":742,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":414,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":224,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":699,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":815,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":317,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":356,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":54,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":207,"org.apache.commons.collections4.ListUtilsTest.testSubtract":756,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":673,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":605,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":847,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":748,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":293,"org.apache.commons.collections4.list.TreeListTest.testListEquals":14,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":769,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":661,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":453,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":312,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":693,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":612,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":753,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":221,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":727,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":420,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":630,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":656,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":329,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":611,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":19,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":681,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":250,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":801,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":289,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":245,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":773,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":205,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":291,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":761,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":624,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":346,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":328,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":486,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":473,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":426,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":256,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":425,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":551,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":284,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":300,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":820,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":418,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":161,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":57,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":67,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":760,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":409,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":452,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":743,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":179,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":849,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":58,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":592,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":412,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":785,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":723,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":771,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":569,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":434,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":276,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":84,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":817,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":824,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":533,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":492,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":841,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":315,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":263,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":12,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":223,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":370,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":401,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":649,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":758,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":66,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":427,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":113,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":290,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":406,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":279,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":240,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":536,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":477,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":537,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":172,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":529,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":642,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":712,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":716,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":114,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":633,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":176,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":751,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":682,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":718,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":845,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":252,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":376,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":350,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":480,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":621,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":102,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":335,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":705,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":341,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":783,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":490,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":282,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":17,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":685,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":333,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":555,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":657,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":136,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":566,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":619,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":518,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":684,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":717,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":483,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":626,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":522,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":594,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":628,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":213,"org.apache.commons.collections4.set.CompositeSetTest.testContains":159,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":72,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":570,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":848,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":662,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":296,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":469,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":301,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":220,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":710,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":559,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":405,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":837,"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":192,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":120,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":188,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":664,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":763,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":343,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":225,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":238,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":494,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":512,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":504,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":690,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":668,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":357,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":550,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":485,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":646,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":185,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":701,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":322,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":96,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":230,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":794,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":660,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":314,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":543,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":382,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":514,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":580,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":206,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":275,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":471,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":243,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":635,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":720,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":374,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":371,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":361,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":108,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":531,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":339,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":460,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":678,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":246,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":697,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":700,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":288,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":472,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":182,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":183,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":270,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":449,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":686,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":487,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":532,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":481,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":663,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":112,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":393,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":360,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":359,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":831,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":209,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":498,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":286,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":614,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":644,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":796,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":260,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":784,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":174,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":587,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":156,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":586,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":90,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":774,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":143,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":722,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":553,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":800,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":392,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":692,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":135,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":70},"transformations":[{"failures":[0],"tindex":"51abbf48-13b0-11e5-bb3d-f7802b444f4d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"51abe659-13b0-11e5-bb3d-4359d6b4a9b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"51abe65a-13b0-11e5-bb3d-0785ac1557f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"51ac0d6b-13b0-11e5-bb3d-c5897f4f8a76","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0},{"failures":[1,2,3],"tindex":"51ac0d6c-13b0-11e5-bb3d-593e10f33395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"51ac0d6d-13b0-11e5-bb3d-db39c9f9fc21","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51],"tindex":"51ac347e-13b0-11e5-bb3d-515fbb7c40fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"51ac347f-13b0-11e5-bb3d-f7261b853cb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,0,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146],"tindex":"51ac3480-13b0-11e5-bb3d-a17a3c650813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"51ac3481-13b0-11e5-bb3d-73f31fc873b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1591","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"51ac5b92-13b0-11e5-bb3d-250a6cb63360","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[3,147],"tindex":"51ac5b93-13b0-11e5-bb3d-7929039a5a0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"proposedCapacity","modifications":"proposedCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[],"tindex":"51ac5b94-13b0-11e5-bb3d-13c7e2a49a52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"51ac5b95-13b0-11e5-bb3d-bf0f07d7cbee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"51ac5b96-13b0-11e5-bb3d-0d0449d62fde","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"tindex":"51ac82a7-13b0-11e5-bb3d-bf8f365bdc86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:128","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[168,169,170,171,172],"tindex":"51ac82a8-13b0-11e5-bb3d-37f973d4ce08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:223","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.remove(E)"},"status":-1},{"failures":[173],"tindex":"51ac82a9-13b0-11e5-bb3d-f54368bf04fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:292","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n    final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"51ac82aa-13b0-11e5-bb3d-bd3442548c3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"51ac82ab-13b0-11e5-bb3d-954dbe957829","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":0},{"failures":[1,61,64,3,174],"tindex":"51aca9bc-13b0-11e5-bb3d-bf495fe5e280","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"51aca9bd-13b0-11e5-bb3d-95aa5e838cbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[175,176],"tindex":"51aca9be-13b0-11e5-bb3d-4d731a8096e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-1},{"failures":[177,178,179,180],"tindex":"51aca9bf-13b0-11e5-bb3d-358a5e8d433a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"end2","lengthInBits":"j","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"end1","otherOffsetInBits":"end2","otherLengthInBits":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"51acd0d0-13b0-11e5-bb3d-93992463ebbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":-2},{"failures":[],"tindex":"51acd0d1-13b0-11e5-bb3d-9b1415db8120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"start1","modifications":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[181],"tindex":"51acd0d2-13b0-11e5-bb3d-736d853c16c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-1},{"failures":[],"tindex":"51acd0d3-13b0-11e5-bb3d-cd4781e8ef1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[],"tindex":"51acd0d4-13b0-11e5-bb3d-91f043ec6095","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"51acd0d5-13b0-11e5-bb3d-09e26d7708d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227],"tindex":"51acd0d6-13b0-11e5-bb3d-cd4620685910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-1},{"failures":[],"tindex":"51acd0d7-13b0-11e5-bb3d-ad873711ffb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:710","type":"CtInvocationImpl","sourcecode":"java.lang.Runnable.run()"},"variableMap":{"r":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"51acd0d8-13b0-11e5-bb3d-839d6622884b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[228,229,230,231,232,233,234,235,236,237,100,0,104],"tindex":"51acf7e9-13b0-11e5-bb3d-27369bd2fa8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[238,239,240,241],"tindex":"51acf7ea-13b0-11e5-bb3d-b1c6af261a5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"51acf7eb-13b0-11e5-bb3d-872ca9e13cd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[242,243,244,245],"tindex":"51acf7ec-13b0-11e5-bb3d-65697e21364d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"dataElement":"dataElement","deletedNode":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"51acf7ed-13b0-11e5-bb3d-27053d3b296b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"51acf7ee-13b0-11e5-bb3d-e165ad0e9c30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[246,247,248,150,151,152,153,154,155,156,157,158],"tindex":"51acf7ef-13b0-11e5-bb3d-a9e63594d6e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"51ad1f00-13b0-11e5-bb3d-e930d8f8fe4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"51ad1f01-13b0-11e5-bb3d-6b7465bea3d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:66","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"51ad1f02-13b0-11e5-bb3d-33a77e4dc2e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:81","type":"CtLocalVariableImpl","sourcecode":"final O O = this.org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[],"tindex":"51ad1f03-13b0-11e5-bb3d-f109ed3eb97c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"endIndex","newCapacity":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-2},{"failures":[],"tindex":"51ad1f04-13b0-11e5-bb3d-37012e15f1e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"51ad1f05-13b0-11e5-bb3d-7531ff2f301c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:251","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet());\n}"},"status":-2},{"failures":[],"tindex":"51ad1f06-13b0-11e5-bb3d-8de94097d9ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"51ad1f07-13b0-11e5-bb3d-63003e1fb091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"51ad4618-13b0-11e5-bb3d-2b68601029e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1056","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[249],"tindex":"51ad4619-13b0-11e5-bb3d-01be4b1f0276","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"nextCalled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265],"tindex":"51ad461a-13b0-11e5-bb3d-0b217be44c9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:170","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K))"},"status":-1},{"failures":[],"tindex":"51ad461b-13b0-11e5-bb3d-bd4a78345005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:196","type":"CtTryImpl","sourcecode":"try {\n    java.io.ByteArrayOutputStream.close();\n} catch (final java.io.IOException ex) {\n}"},"variableMap":{"baos":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:717","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313],"tindex":"51ad461c-13b0-11e5-bb3d-a304eaaa5281","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349],"tindex":"51ad461d-13b0-11e5-bb3d-6f6a3f01f8bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"51ad461e-13b0-11e5-bb3d-d71ff21fb048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"51ad461f-13b0-11e5-bb3d-b5cd1634a496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:985","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"found":"path","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[350,351,352,353,354,355,356,357,358,359,360],"tindex":"51ad4620-13b0-11e5-bb3d-e94f9d4df46e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[361,55,58,362,89,92,101,0,363,364,365,366,112,115,367,122,125,368],"tindex":"51ad6d31-13b0-11e5-bb3d-f755928d27dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"51ad6d32-13b0-11e5-bb3d-012d47a69814","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[],"tindex":"51ad6d33-13b0-11e5-bb3d-91af11a141b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"value","expectedModCount":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-2},{"failures":[369,350,351,352,353,354,355,356,357,358,359,360],"tindex":"51ad6d34-13b0-11e5-bb3d-6ff667a9d458","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"previousObjectSet","beforeFirst":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"51ad6d35-13b0-11e5-bb3d-278791c50ee9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410],"tindex":"51ad9446-13b0-11e5-bb3d-b7b2f8e8dfd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"51ad9447-13b0-11e5-bb3d-95fc2e4cea51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"index","currentIndex":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-2},{"failures":[],"tindex":"51af9018-13b0-11e5-bb3d-e12ae0812a56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"51af9019-13b0-11e5-bb3d-f135b85eed47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"51af901a-13b0-11e5-bb3d-7b22105a747d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"51af901b-13b0-11e5-bb3d-e3d156c24788","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[411,412,413,414,415,416,417,418,419,420,135,421,144,422],"tindex":"51af901c-13b0-11e5-bb3d-dd4992c7c7ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"variableMap":{"this":"this","out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1232","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}"},"status":-1},{"failures":[370,371,373,374,375,377,378,379,381,382,383,385,386,387,389,390,391,392,393,394,396,397,398,399,400,402,403,405,406,407,409,410],"tindex":"51af901d-13b0-11e5-bb3d-1dee14ee6fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"51af901e-13b0-11e5-bb3d-69315adac729","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[423,424,425,426,427,428],"tindex":"51afb72f-13b0-11e5-bb3d-df2baba34c8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-1},{"failures":[],"tindex":"51afb730-13b0-11e5-bb3d-09c268dfa5f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"51afb731-13b0-11e5-bb3d-19c46f7c46b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-2},{"failures":[429],"tindex":"51afb732-13b0-11e5-bb3d-77426887456e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[],"tindex":"51afb733-13b0-11e5-bb3d-6f0fcc44623a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Transformer<?, ?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Transformer<?, ?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[68,71,78,81],"tindex":"51afb734-13b0-11e5-bb3d-954aaeba36d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"51afb735-13b0-11e5-bb3d-e77222e04cd7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,242,458,459,243,460,461,462,463,464,465,466,467,468,469,470,471,472,244,473,474,475,245,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521],"tindex":"51afb736-13b0-11e5-bb3d-7da91b4b5150","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"51afde47-13b0-11e5-bb3d-3f50d47fcbad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"status":-2},{"failures":[243,475,476,477,478,472],"tindex":"51afde48-13b0-11e5-bb3d-f7d7e517a05f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:923","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1022","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"51afde49-13b0-11e5-bb3d-25001f16180d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:171","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:426","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Set) {\n    final java.util.Set<?> java.util.Set<?> = ((java.util.Set<?>)(java.lang.Object));\n    return ((java.util.Set<?>.size()) == org.apache.commons.collections4.set.CompositeSet<E>.(size())) && (java.util.Set<?>.containsAll(this));\n} "},"status":0},{"failures":[522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,82,83,537,538,539,540,541,542,543,544,545],"tindex":"51afde4a-13b0-11e5-bb3d-9de632901c78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtIfImpl","sourcecode":"if (E == E) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"51afde4b-13b0-11e5-bb3d-65229af4bb69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"rval","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[546,547,548,549,550],"tindex":"51b0055c-13b0-11e5-bb3d-71daa5e63fb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-1},{"failures":[],"tindex":"51b0055d-13b0-11e5-bb3d-7ff816388dba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[551],"tindex":"51b0055e-13b0-11e5-bb3d-1337490a722c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:554","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-1},{"failures":[552,553],"tindex":"51b0055f-13b0-11e5-bb3d-afce1a31bc48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.set.TransformedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[],"tindex":"51b00560-13b0-11e5-bb3d-3d52a9820921","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"status":-2},{"failures":[554,370,555,556,557,558,559,560,561,562,563,564,565,566,371,567,314,315,568,317,569,570,571,572,573,574,575,372,576,577,374,319,578,375,579,580,376,581,582,583,584,585,586,377,587,378,588,589,590,591,592,593,594,595,596,597,598,599,379,600,320,321,601,323,602,603,604,605,606,607,608,380,609,610,382,611,612,613,614,615,616,617,618,619,620,621,622,623,624,383,625,324,325,626,327,627,628,629,630,631,632,633,634,384,635,636,385,386,637,638,639,640,641,642,643,644,645,646,647,648,387,649,328,329,650,331,651,652,653,654,655,656,657,658,388,659,660,389,390,333,661,662,663,664,392,665,666,393,667,668,669,670,671,672,673,674,675,676,677,678,394,679,334,335,680,337,681,682,683,684,685,686,687,688,395,689,690,396,397,339,691,692,693,694,695,696,398,399,697,341,698,400,699,700,401,701,702,703,704,705,706,402,707,708,709,710,711,712,713,714,715,716,717,718,719,403,720,342,343,721,345,722,723,724,725,726,727,728,729,404,730,731,405,406,732,733,734,735,736,737,738,739,740,741,742,743,744,407,745,346,347,746,349,747,748,749,750,751,752,753,408,754,755,410,756,757,758,759,760,761,762,763],"tindex":"51b00561-13b0-11e5-bb3d-393cd180fd31","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"51b00562-13b0-11e5-bb3d-3bccf2f89a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[764,765,766,767,768,769,770],"tindex":"51b02c73-13b0-11e5-bb3d-1faff930f279","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"leastIndex","currentIndex":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[182,183,184,771,185,186,772,187,188,189,773,190,774,191,775,192,193],"tindex":"51b02c74-13b0-11e5-bb3d-8f163ba7ba19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} "},"status":-1},{"failures":[],"tindex":"51b02c75-13b0-11e5-bb3d-e73bcec0a818","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-2},{"failures":[],"tindex":"51b02c76-13b0-11e5-bb3d-9bf28cdaf412","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801],"tindex":"51b02c77-13b0-11e5-bb3d-5df1d6466817","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-1},{"failures":[],"tindex":"51b02c78-13b0-11e5-bb3d-e9f2f36cd622","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:274","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.iterator() ; java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext() ; ) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    if ((java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()) == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } \n}"},"status":-2},{"failures":[52,53,802,54,55,56,57,58,59,60,803,804,1,2,805,806,65,66,807,67,68,69,70,71,72,73,808,809,810,811,812,813,814,815,75,76,816,77,78,79,80,81,82,83,817,818,819,820,821,822,823,824,86,87,825,88,89,90,91,92,93,94,826,827,828,829,830,831,363,98,99,100,101,102,103,0,104,105,832,833,834,835,836,367,109,110,837,111,112,113,114,115,116,117,838,839,840,841,842,843,368,119,120,844,121,122,123,124,125,126,127,845,846,847,848,849],"tindex":"51b02c79-13b0-11e5-bb3d-6f3db1661821","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"51b02c7a-13b0-11e5-bb3d-f155ad8c55af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}