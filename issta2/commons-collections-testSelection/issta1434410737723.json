{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":336,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":256,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":134,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":434,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":526,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":454,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":73,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":505,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":267,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":261,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":159,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":324,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":13,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":12,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":70,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":237,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":235,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":187,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":152,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":378,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":21,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":160,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":501,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":433,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":280,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":392,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":208,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":405,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":516,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":419,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":125,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":532,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":322,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":466,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":290,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":372,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":436,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":303,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToString":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":274,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":296,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":411,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":226,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":473,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":281,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":474,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":361,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":442,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":400,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":157,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":230,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":389,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":121,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":463,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":173,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":445,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":346,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":490,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":287,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":477,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":432,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":143,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":239,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":403,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":162,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":291,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":198,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":92,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":343,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":366,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":364,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":449,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":306,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":163,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":289,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":384,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":438,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":276,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":243,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":375,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":484,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":28,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":136,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":112,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":523,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":368,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":106,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":521,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":460,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":427,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":408,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":172,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":327,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":399,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":402,"org.apache.commons.collections4.map.Flat3MapTest.testEmptyMapCompatibility":251,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":221,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":148,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":527,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":415,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":272,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":530,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":385,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":279,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":365,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":478,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":421,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":341,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":376,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":57,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":312,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":268,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":249,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":250,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":120,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":217,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":194,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":471,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":122,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":91,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":265,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":188,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":216,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":499,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":409,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":130,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":259,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":426,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":510,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":326,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":498,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":379,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":444,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":425,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":313,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":387,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":534,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":529,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":507,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":219,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":266,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":416,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":277,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":382,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":170,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":462,"org.apache.commons.collections4.ListUtilsTest.testSubtract":391,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":132,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":344,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":519,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":97,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":479,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":292,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":166,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":342,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":518,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":520,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":487,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":333,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":139,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":224,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":351,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":453,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":317,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":109,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":137,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":138,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":347,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":363,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":320,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":495,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":302,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":493,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":318,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":480,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":362,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":231,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":257,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":151,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":358,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":10,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":179,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":431,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":285,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":222,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":282,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":481,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":295,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":459,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":18,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":180,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":99,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":301,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":485,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":522,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":29,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":186,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":429,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":236,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":508,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":220,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":115,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":142,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":83,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":514,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":483,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":531,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":210,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":294,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":452,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":464,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":203,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":214,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":215,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":213,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":260,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":209,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":288,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":356,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":533,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":202,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":377,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":118,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":359,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":461,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":247,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":492,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":253,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":335,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":404,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":311,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":271,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":437,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":435,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":7,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":189,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":401,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":205,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":329,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":451,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":417,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":509,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":423,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":370,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":440,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":183,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":486,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":396,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":113,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":299,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":465,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":528,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":393,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":420,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":46,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":36,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":81,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":357,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":270,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":305,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":345,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":181,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":517,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":328,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":254,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":14,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":504,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testEqualsNull":535,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":428,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":414,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":511,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":182,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":154,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":273,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":360,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":331,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":264,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":350,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":315,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":319,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":407,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":278,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":330,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":475,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":406,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":225,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":89,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":300,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":383,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":457,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":352,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":506,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":66,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":246,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":381,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":38,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":369,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":476,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":127,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":439,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":472,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":482,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":147,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":111,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":19,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":337,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":513,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":3,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":316,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":131,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":470,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":59,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":144,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":146,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":74,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":450,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":232,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":410,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":8,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":211,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":494,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":323,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":223,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":227,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":388,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":117,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":309,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToString":512,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":502,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":197,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":524,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":308,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":390,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":165,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":22,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":515,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":488,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":418,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":229,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":242,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":380,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":199,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":525,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":394,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":248,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":467,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":468,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":86,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":469,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":286,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":500,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":413,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":234,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":332,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":456,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":114,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":258,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":353,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":367,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":168,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":412,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":489,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":497,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":443,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":2,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":245,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":503,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":310,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":252,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":263,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":244,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":397,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":339,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":140,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":446,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":293,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":104,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":174,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":348,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":430,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":185,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":283,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":398,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":386,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":447,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":269,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":458,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":355,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":373,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":491,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":338,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":455},"transformations":[{"failures":[0,1,2,3],"tindex":"d45bc370-13b5-11e5-abc5-3777e29a74ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[],"tindex":"d45bc371-13b5-11e5-abc5-5dda655161d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"d45bea82-13b5-11e5-abc5-4524ab85abb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"d45bea83-13b5-11e5-abc5-ab5acf8d2ea6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:244","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"d45e0d64-13b5-11e5-abc5-d34fd0a3820d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"d45e0d65-13b5-11e5-abc5-ad98ed9aad47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":-2},{"failures":[],"tindex":"d45e0d66-13b5-11e5-abc5-e17a3be93a4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[],"tindex":"d45e0d67-13b5-11e5-abc5-2fa1de286f87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[],"tindex":"d45e0d68-13b5-11e5-abc5-d5f58f8167b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"d45e0d69-13b5-11e5-abc5-ab2f548b9eb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"d45e347a-13b5-11e5-abc5-95a39e268796","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"object","parentNode":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[36],"tindex":"d45e347b-13b5-11e5-abc5-67b9801bc669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-1},{"failures":[],"tindex":"d45e347c-13b5-11e5-abc5-0743e6de7824","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:394","type":"CtIfImpl","sourcecode":"if ((java.util.Set<V>) == null) {\n    java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"d45e347d-13b5-11e5-abc5-3b736c4dd436","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,16,17,18,29,32,33,48,35,49,50,51,52,53,54],"tindex":"d45e347e-13b5-11e5-abc5-49be14f84f94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"parent","h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"d45e347f-13b5-11e5-abc5-49df23b3de8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"d45e3480-13b5-11e5-abc5-3742b5ea0e29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:150","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.contains(E)) == false) {\n    super.add(int, E);\n    java.util.Set<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"d45e3481-13b5-11e5-abc5-d371bd93eb0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"next","key2":"key2","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"d45e5b92-13b5-11e5-abc5-b7962fedc2fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"d45e5b93-13b5-11e5-abc5-7b1426c14241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"d45e5b94-13b5-11e5-abc5-a1460e3d97ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:346","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[108,109,110,111,112,113,114,115,116],"tindex":"d45e82a5-13b5-11e5-abc5-d5d2ae249562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[117],"tindex":"d45e82a6-13b5-11e5-abc5-797ff8716db6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:234","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1"},"variableMap":{"position1":"object","position2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().lastIndexOf(java.lang.Object)"},"status":-1},{"failures":[118,119,120,121,122,123,124,125,126,127,128,129,130,131,132],"tindex":"d45e82a7-13b5-11e5-abc5-f1ebb05458d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:221","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d45e82a8-13b5-11e5-abc5-2b293c730317","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:73","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().equals(java.util.Map.Entry<?, ?>.getKey())) && (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":-2},{"failures":[133],"tindex":"d45e82a9-13b5-11e5-abc5-2db92ae5cdb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d45e82aa-13b5-11e5-abc5-75661c9496f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"d45e82ab-13b5-11e5-abc5-256be1cf7272","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-2},{"failures":[134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"d45e82ac-13b5-11e5-abc5-dd01af197342","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1},{"failures":[174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"d45e82ad-13b5-11e5-abc5-9db5257ca9c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"lineageIndex","index":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1006","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    java.io.PrintStream.print(java.lang.Object);\n} else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[186,187],"tindex":"d45e82ae-13b5-11e5-abc5-995dee136d5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"a","list2":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[188,189,190,191,192,193,194],"tindex":"d45ea9bf-13b5-11e5-abc5-df423537fa6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d45ea9c0-13b5-11e5-abc5-2f5bc0696f7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"key","value1":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"d45ea9c1-13b5-11e5-abc5-0b0347d9b174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[122,126,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"d45ea9c2-13b5-11e5-abc5-59b12e389990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[211,212,213,214,215,216,217,218,196,219],"tindex":"d45ea9c3-13b5-11e5-abc5-93078481ada6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:586","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"d45ea9c4-13b5-11e5-abc5-d3fb08d29fb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"variableMap":{"keySet":"keySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:251","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[],"tindex":"d45ea9c5-13b5-11e5-abc5-8d799cbb5a08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[11,12,13,220,14,15,16,17,18,221,19,20,222,21,22,23,24,25,26,223,27,224,225,28,29,226,227,228,30,31,229,32,33,34,48,230,231,35,49,232,233,50,51,52,53,54],"tindex":"d45ea9c6-13b5-11e5-abc5-dff414033cc1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[188,189,190,191,234,192,235,236,237,238,193,194],"tindex":"d45ed0d7-13b5-11e5-abc5-3f205396d739","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"leastIndex","index":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[239,240,241],"tindex":"d45ed0d8-13b5-11e5-abc5-0913720818ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:248","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.CollatingIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:243","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-1},{"failures":[],"tindex":"d45ed0d9-13b5-11e5-abc5-396188fbb6ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[242,243,244,245],"tindex":"d45ed0da-13b5-11e5-abc5-fdbf1034fb1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"retval","newCapacity":"retval","proposedCapacity":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":-1},{"failures":[],"tindex":"d45ed0db-13b5-11e5-abc5-572cceae1fc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"child","left":"right","h":"node","right":"right","child":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:762","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d45ed0dc-13b5-11e5-abc5-e38adf565d2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:142","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n        return true;\n    } \n}"},"variableMap":{"header":"after","after":"after"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:148","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n        return true;\n    } \n}"},"status":-2},{"failures":[246,247,248],"tindex":"d45ed0dd-13b5-11e5-abc5-9d019af77373","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-1},{"failures":[],"tindex":"d45ef7ee-13b5-11e5-abc5-4bb2b715a321","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d45ef7ef-13b5-11e5-abc5-53156f85933d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:73","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InstantiateTransformer<T>();\n} "},"variableMap":{"paramTypes":"paramTypes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:80","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?>[] == null) || ((java.lang.Class<?>[].int) == 0)) {\n    return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"d45ef7f0-13b5-11e5-abc5-079ef837a506","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"modified":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:369","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"d45ef7f1-13b5-11e5-abc5-27ad1f6a8194","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key4","length":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[197,195,196],"tindex":"d45ef7f2-13b5-11e5-abc5-a5ba83aefdbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10],"tindex":"d45ef7f3-13b5-11e5-abc5-59a75ff3acc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"d45ef7f4-13b5-11e5-abc5-49c5733baf85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"d45ef7f5-13b5-11e5-abc5-69653ac1b606","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1142","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < int)) {\n    return null;\n} "},"variableMap":{"lengthInBits":"bitIndex","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d45ef7f6-13b5-11e5-abc5-73aa926e880b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:284","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].get(java.lang.Object)"},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"d45f1f07-13b5-11e5-abc5-d9c130b0103a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[249,212,250,251,252,253,254],"tindex":"d45f1f08-13b5-11e5-abc5-ed66d43b4e7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1105","type":"CtForImpl","sourcecode":"for (int int = int ; int > 0 ; int--) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.put(((K)(java.io.ObjectInputStream.readObject())), ((V)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[255,256,118,257,258],"tindex":"d45f1f09-13b5-11e5-abc5-aba944d7904d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d45f1f0a-13b5-11e5-abc5-1b61b7171b25","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":0},{"failures":[211,212,213,214,215,216,217,218,196,219],"tindex":"d45f1f0b-13b5-11e5-abc5-f178ba69bb57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":-1},{"failures":[259,260,261,262,263],"tindex":"d45f1f0c-13b5-11e5-abc5-1fdf36290bd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"d45f1f0d-13b5-11e5-abc5-b31ab5714c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[264],"tindex":"d45f1f0e-13b5-11e5-abc5-bd17f593bf1f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:118","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[122,126,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210],"tindex":"d45f1f0f-13b5-11e5-abc5-4557940534ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[265,266],"tindex":"d45f4620-13b5-11e5-abc5-c5706f8ea11a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283],"tindex":"d45f4621-13b5-11e5-abc5-d760ade183a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:135","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"d45f4622-13b5-11e5-abc5-9334feb1ee32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:199","type":"CtForEachImpl","sourcecode":"for (final C C : org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.decorated()) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n}"},"status":-2},{"failures":[37,38],"tindex":"d45f4623-13b5-11e5-abc5-81686d1fb67b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"d45f4624-13b5-11e5-abc5-5f94da61281f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"d45f4625-13b5-11e5-abc5-27d0b4a61448","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"d45f4626-13b5-11e5-abc5-edaeb88c9d78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"key","keys":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"d45f4627-13b5-11e5-abc5-2d273377acfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:468","type":"CtIfImpl","sourcecode":"if (java.lang.Short == null) {\n    java.lang.Short = java.lang.Short;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:188","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(java.lang.Object)) {\n    V = java.util.Map<K, V>.remove(java.lang.Object);\n    java.util.Map<V, K>.remove(V);\n} "},"status":-2},{"failures":[],"tindex":"d45f4628-13b5-11e5-abc5-09c3e3466a95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[255,256,118,257],"tindex":"d45f4629-13b5-11e5-abc5-d1de03e28edc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[284,285,286,287],"tindex":"d45f6d3a-13b5-11e5-abc5-bdc124e704f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[288,89,289,290,291,292,293,294,295,90,91,296,297,298,93,299,300,301,302,303,304,305,306,307,308,309,310,311,312,95,313,314,315,316,317,318,319,320,321,322,323,324,325,326,97,327,328,329,330,331,332,333,334,335,336,337,338,339,340,99,341,342,343,344,345,346,347,100,101,348,349,350,351,352,353,354,355,356,357,103,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,105,382,383,384,385,386,387,388,106,107,389,390,391,392],"tindex":"d45f6d3b-13b5-11e5-abc5-4b662efe1ccf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:275","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next());\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[393,394,395,396,397,398,4,399,400,401,402,403,404,405,406,5,407,408,118,119,120,121,122,123,125,126,127,128,409,410,250,411,412,413,195,414,415,196,219,416,417,418,419,420,421,422,201,423,424,202,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,204,441,442,205,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,208,463,464,209,465,466],"tindex":"d45f6d3c-13b5-11e5-abc5-515041672199","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"key","entryValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d45f6d3d-13b5-11e5-abc5-3b927fa92f0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"currentNode","to":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":0},{"failures":[467,468,469,470,471,472,473,474,475,476,477],"tindex":"d45f6d3e-13b5-11e5-abc5-076388ed60f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl","sourcecode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}"},"status":-1},{"failures":[478],"tindex":"d45f944f-13b5-11e5-abc5-c995655fcb9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"d45f9450-13b5-11e5-abc5-0d8342e29bd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[288,89,91,479,480,298,93,481,312,95,482,326,97,483,340,99,101,484,485,357,103,486,487,488,489,381,105,107,490],"tindex":"d45f9451-13b5-11e5-abc5-b52cf5ce2f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1},{"failures":[491,492,493,494,495,496,497,498,499,500,501,502,240,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,241,519,520,521,522],"tindex":"d45f9452-13b5-11e5-abc5-65c60486b367","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"d45f9453-13b5-11e5-abc5-b3f54be6e42b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:635","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"node","this":"this","rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:505","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[523,524,525,526,527,528,529],"tindex":"d45f9454-13b5-11e5-abc5-8fd983d06a61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"d45f9455-13b5-11e5-abc5-aff5f8b56850","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:904","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = new org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>(this);\n} "},"status":-2},{"failures":[11,12,13,220,14,15,16,17,18,221,19,20,222,21,22,23,24,25,26,223,27,224,225,28,29,226,227,228,30,31,229,32,33,34,48,230,231,49,232,233,50,51,52,53,54,35],"tindex":"d45fbb66-13b5-11e5-abc5-ab2b579f75e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[259,530,260,261,262,263],"tindex":"d45fbb67-13b5-11e5-abc5-ebbab1b90004","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:118","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n    int = int;\n} "},"variableMap":{"indexOfLargestMobileInteger":"i","keys":"vDown","largestKey":"d","i":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[531],"tindex":"d45fbb68-13b5-11e5-abc5-bbe87ea5e318","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:112","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    return 0;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} "},"status":-1},{"failures":[],"tindex":"d45fbb69-13b5-11e5-abc5-af3035d19f2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[532],"tindex":"d45fbb6a-13b5-11e5-abc5-a537b02ad983","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-1},{"failures":[],"tindex":"d45fbb6b-13b5-11e5-abc5-71657e4768d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"d45fbb6c-13b5-11e5-abc5-63de7b09aae7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:892","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"replacement","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:974","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[533,534,141,144,145,153],"tindex":"d45fbb6d-13b5-11e5-abc5-63c86bac2f86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[535],"tindex":"d45fbb6e-13b5-11e5-abc5-7fa63b628f6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d45fbb6f-13b5-11e5-abc5-15ba182e7d34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d45fbb70-13b5-11e5-abc5-f9ed99fbf9a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:124","type":"CtReturnImpl","sourcecode":"return java.util.Collection<?>.containsAll(java.util.Collection<?>)"},"variableMap":{"set2":"iterable","set1":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-2},{"failures":[],"tindex":"d45fe281-13b5-11e5-abc5-bdcc29f981c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"d45fe282-13b5-11e5-abc5-8da3cbb1bf0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[478],"tindex":"d45fe283-13b5-11e5-abc5-4ddf357732ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":100,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}