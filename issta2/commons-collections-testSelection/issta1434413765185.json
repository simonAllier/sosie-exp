{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":426,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":222,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":260,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":185,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":441,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":417,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":87,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":161,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":59,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":173,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":448,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":224,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":449,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":344,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":211,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":150,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":167,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":383,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":411,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":16,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":299,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":334,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":469,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":472,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":78,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":230,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":248,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":376,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":197,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":415,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":148,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":244,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":467,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":193,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":384,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEmptyCollection":468,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":304,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":40,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":204,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":225,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":232,"org.apache.commons.collections4.ListUtilsTest.testEquals":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":291,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":280,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":273,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":52,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":138,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":274,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":377,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":246,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":131,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":429,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":285,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":210,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":165,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":330,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":437,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":321,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":141,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":258,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":277,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":301,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":213,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":431,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":264,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":208,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":425,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":175,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":324,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":349,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":282,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":391,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":379,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":342,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":12,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":335,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":312,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":395,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":279,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":96,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":220,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":266,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":339,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":83,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":314,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":22,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":49,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":126,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":387,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":362,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":29,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":444,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":309,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":199,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":290,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":390,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":117,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":164,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":271,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":306,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":256,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":216,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":336,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":155,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":133,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":408,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":186,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":176,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":396,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":473,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":77,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":454,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":412,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":418,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":326,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":427,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":316,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":202,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":120,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":435,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":189,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":60,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":419,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":433,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":43,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":100,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":332,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":416,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":140,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":474,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":58,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":451,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":430,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":207,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":182,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":361,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":183,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":144,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":97,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":190,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":308,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":41,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":92,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":95,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.CollectionUtilsTest.exists":124,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":143,"org.apache.commons.collections4.CollectionUtilsTest.filter":311,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":196,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":369,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":288,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":177,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":255,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":298,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":243,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":263,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":443,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":157,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":386,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":331,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":254,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":341,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":432,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":367,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":350,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":385,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":363,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":410,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":366,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":353,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":94,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":438,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":156,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":235,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":303,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":356,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":191,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":465,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":393,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":420,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":259,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":399,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":315,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":72,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":413,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":295,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":296,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":203,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":388,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":351,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":32,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":442,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":406,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":436,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":187,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":340,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":325,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":323,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":452,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":250,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":239,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":194,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":371,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":75,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":184,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":382,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":231,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":471,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":283,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":360,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":53,"org.apache.commons.collections4.CollectionUtilsTest.filterNullParameters":310,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":201,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":422,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":364,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":48,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":142,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":146,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":403,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":234,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":275,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":318,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":463,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":462,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":354,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":368,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":284,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":459,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":458,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":461,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":460,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":455,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":457,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":456,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":82,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":153,"org.apache.commons.collections4.CollectionUtilsTest.isFull":453,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":307,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":215,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":35,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":348,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":447,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":407,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":178,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":272,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":375,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":445,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":372,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":228,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":71,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":226,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":389,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":446,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":466,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":319,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":423,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":238,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":270,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":297,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":116,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":198,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":300,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":278,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":172,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":476,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":392,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":19,"org.apache.commons.collections4.CollectionUtilsTest.filterInverseNullParameters":313,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":123,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":251,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":337,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":289,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":119,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":381,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":397,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":355,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":439,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":359,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":347,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":93,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":293,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":294,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":394,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":109,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":252,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":292,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":105,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":107,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":149,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":166,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":217,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":440,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":475,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":338,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":267,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":268,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":269,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":212,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":470,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":329,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":302,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":374,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":358,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":50,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":317,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":229,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":261,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":398,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":281,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":450,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":241,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":64,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":168,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":240,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":370,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":409,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":223,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":286,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":402,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":322,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":346,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":27,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":188,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":373,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":66,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":434,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":380,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":192,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":414,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":154,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":401,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":214},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e0e325a6-13bc-11e5-8597-edb51e0603d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"e0e34cb7-13bc-11e5-8597-e5291c4dfe83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[62,63,64,65],"tindex":"e0e34cb8-13bc-11e5-8597-3969fc6b44d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"delegateMap","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"e0e34cb9-13bc-11e5-8597-fb8e717d4653","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:365","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>) == null) {\n    throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n} "},"status":-2},{"failures":[],"tindex":"e0e34cba-13bc-11e5-8597-91e1727f3476","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:130","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"e0e373cb-13bc-11e5-8597-cf3dcaa8a00c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().isArray()) {\n    return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(java.lang.Object);\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:405","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.(containsKey(java.lang.Object))) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74],"tindex":"e0e373cc-13bc-11e5-8597-2321688f105f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e0e373cd-13bc-11e5-8597-bb1827c2487c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key","this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"e0e373ce-13bc-11e5-8597-8dfa08db2196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"tree","right":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:716","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"e0e373cf-13bc-11e5-8597-27259ba17419","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:182","type":"CtAssignmentImpl","sourcecode":"int[][(1 + int)] = int + 1"},"status":-2},{"failures":[],"tindex":"e0e399e0-13bc-11e5-8597-8f780a7dfcd8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[89],"tindex":"e0e399e1-13bc-11e5-8597-29a6894ed6f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"removeState","beforeFirst":"removeState"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:215","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (((int) - (int)) > 1)) {\n    throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)));\n} "},"status":-1},{"failures":[],"tindex":"e0e399e2-13bc-11e5-8597-c57794231c39","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"e0e399e3-13bc-11e5-8597-3d0050093de4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"value","currentIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-2},{"failures":[90,91,75,92,93,94,95,96,76,77,97,78,79,80,98,81,82,99,83,100,101,84,85,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,86,120,121,87,88],"tindex":"e0e399e4-13bc-11e5-8597-db151f236b99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"e0e3c0f5-13bc-11e5-8597-5bcb2773e9d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e0e3c0f6-13bc-11e5-8597-d7ae4c79ea95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"e0e3c0f7-13bc-11e5-8597-3dc91d845cfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[],"tindex":"e0e3c0f8-13bc-11e5-8597-99f40612fabc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"e0e3c0f9-13bc-11e5-8597-ed006073535c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:397","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"variableMap":{"buf":"buf","hasNext":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"e0e3c0fa-13bc-11e5-8597-0589a5638297","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"e0e3e80b-13bc-11e5-8597-8b37e77f5f47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:83","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String , java.lang.Class<?>[] , java.lang.Object[])"},"status":-2},{"failures":[122,123],"tindex":"e0e3e80c-13bc-11e5-8597-d92623e42588","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}"},"status":-1},{"failures":[],"tindex":"e0e3e80d-13bc-11e5-8597-5bbf3a9602c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[124],"tindex":"e0e3e80e-13bc-11e5-8597-838f79546b1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"e0e3e80f-13bc-11e5-8597-cb0f71c3a592","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:574","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"e0e40f20-13bc-11e5-8597-b3c8c5c52d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164],"tindex":"e0e40f21-13bc-11e5-8597-dd1eed76dab9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:396","type":"CtForEachImpl","sourcecode":"for (final java.util.Iterator<? extends E> java.util.Iterator<? extends E> : java.util.ArrayList<java.util.Iterator<? extends E>>) {\n    if (java.util.Iterator<? extends E>.hasNext()) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e0e40f22-13bc-11e5-8597-4deff2c8a7aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"hashIndex","proposedCapacity":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:583","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[165,166,167,168,169,170,142,171,172,173,174,175,176,177,178,179,180,181],"tindex":"e0e40f23-13bc-11e5-8597-713c4a3a6c4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"e0e40f24-13bc-11e5-8597-27ea2933a0c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[91],"tindex":"e0e40f25-13bc-11e5-8597-ddc5627800a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197],"tindex":"e0e43636-13bc-11e5-8597-c305c70e211d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[198,199,200,201,202,203],"tindex":"e0e43637-13bc-11e5-8597-876a4aef1e53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:198","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object);\n} "},"status":-1},{"failures":[204,205,206,207,208],"tindex":"e0e43638-13bc-11e5-8597-d1a75b3bfca9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"variableMap":{"dataElement":"object","o":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1338","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"e0e43639-13bc-11e5-8597-257eb215940f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[209],"tindex":"e0e4363a-13bc-11e5-8597-b9a12a14a9c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e0e4363b-13bc-11e5-8597-9144285a70b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e0e45d4c-13bc-11e5-8597-2be5b45a7616","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"e0e4845d-13bc-11e5-8597-85020347f187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:246","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.compareTo(java.lang.Integer)"},"variableMap":{"position1":"object","position2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:286","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.indexOf(java.lang.Object)"},"status":-2},{"failures":[210,211,212,213,214,215,216,217,218,219],"tindex":"e0e4845e-13bc-11e5-8597-97365142efee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[220,221,222,223,224,225,174,175,178,180,181],"tindex":"e0e4845f-13bc-11e5-8597-4b8f7a686b4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e0e48460-13bc-11e5-8597-27479f97569e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[226],"tindex":"e0e4ab71-13bc-11e5-8597-ab2e68be9ad8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:46","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[227],"tindex":"e0e4ab72-13bc-11e5-8597-0391491b9266","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e0e4ab73-13bc-11e5-8597-ad01bc04eca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:971","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> != null) && (org.apache.commons.collections4.Predicate<? super O> != null)) {\n    for (final O O : java.lang.Iterable<? extends O>) {\n        if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n            R.add(O);\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"e0e4ab74-13bc-11e5-8597-77328e5b8d06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} "},"status":-2},{"failures":[7,8,9,228,12,20,229,38,47],"tindex":"e0e4ab75-13bc-11e5-8597-d5b6e3cf4832","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"e0e4ab76-13bc-11e5-8597-e9c8a124ab24","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":0},{"failures":[230,231,232,233,234,235,236,237,238,239,240,241],"tindex":"e0e4d287-13bc-11e5-8597-bd065eaacb00","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e0e4d288-13bc-11e5-8597-75bd4c4b2d55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:103","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"e0e4d289-13bc-11e5-8597-7377ea01d50e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e0e4d28a-13bc-11e5-8597-33ba6abb5963","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[242,243,244,245,246,247,248,249],"tindex":"e0e4d28b-13bc-11e5-8597-254e3232dab7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"hasNext","nextCalled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":-1},{"failures":[250,201,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266],"tindex":"e0e4f99c-13bc-11e5-8597-69fa071ef1f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e0e4f99d-13bc-11e5-8597-d787de079fa7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"e0e4f99e-13bc-11e5-8597-4fb391a130e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":0},{"failures":[267,268,269,270,271,272,273,274,275,276,277],"tindex":"e0e4f99f-13bc-11e5-8597-d570e23cb148","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[0,1,3,4],"tindex":"e0e4f9a0-13bc-11e5-8597-852202f70a4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[278,198,199,62,63,64,279,280,281,282,200,250,283,284,285,242,286,201,287,288,202,65,289,290,291,292,293,294,295,296,203,297,298,299,251,300,301,302,303,304,305,306,307],"tindex":"e0e4f9a1-13bc-11e5-8597-21da6c793486","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:175","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.size();\n} "},"status":-1},{"failures":[308],"tindex":"e0e4f9a2-13bc-11e5-8597-dbe45ddb7462","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"size","modifications":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:137","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    E[][int] = ((E)(java.io.ObjectInputStream.readObject()));\n}"},"status":-1},{"failures":[309],"tindex":"e0e4f9a3-13bc-11e5-8597-530bc98cd32f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[0,1,2,3,4,5],"tindex":"e0e520b4-13bc-11e5-8597-e34a912a2d18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[310,311,312,313],"tindex":"e0e520b5-13bc-11e5-8597-bbf0aba933a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[314,315,316],"tindex":"e0e520b6-13bc-11e5-8597-71362ab80ff6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340],"tindex":"e0e520b7-13bc-11e5-8597-673676e2417e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:684","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"e0e520b8-13bc-11e5-8597-d171693ba697","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","y":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"e0e520b9-13bc-11e5-8597-1b31b0963671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"i","vDown":"vUp","delta":"end1","end2":"end1","this":"this","i":"start1","end1":"start1","k":"start2","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"e0e520ba-13bc-11e5-8597-91c580d53b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"e0e520bb-13bc-11e5-8597-93bad5826ad8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-2},{"failures":[],"tindex":"e0e520bc-13bc-11e5-8597-c785582abc91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:385","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0) {\n    return \"[]\";\n} "},"status":0},{"failures":[],"tindex":"e0e547cd-13bc-11e5-8597-7b292c30b717","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"e0e547ce-13bc-11e5-8597-a79ad9c51f7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"e0e547cf-13bc-11e5-8597-4d4fe729e673","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"lengthInBits","expectedModCount":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e0e547d0-13bc-11e5-8597-a9e51a70e23d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":-2},{"failures":[341,342],"tindex":"e0e547d1-13bc-11e5-8597-1d72057826c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e0e547d2-13bc-11e5-8597-d9709fcd5947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"status":0},{"failures":[343,344,345,346,347,348,349,350,210,351,352,211,212,353,354,215,216,217,355,6,356,357,358,359,360,361,362,363,364,365,13,14,15,16,17,18,19,10,366,367,21,22,24,25,26,27,28,29,30,31,32,368,369,370,371,372,373,35,39,40,41,42,43,44,45,46,36,374,375,48,49,51,52,53,54,55,56,57,58,59],"tindex":"e0e547d3-13bc-11e5-8597-65cf0c628fc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"e0e547d4-13bc-11e5-8597-e9290a7c7c1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:145","type":"CtReturnImpl","sourcecode":"return ((java.lang.Comparable<K>)(K)).compareTo(K)"},"status":-2},{"failures":[],"tindex":"e0e547d5-13bc-11e5-8597-957fdebebb75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:305","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[376,377],"tindex":"e0e547d6-13bc-11e5-8597-8955dfb72f5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"status":-1},{"failures":[378,13,14,15,16,17,18,19,10,21,22,24,25,26,27,28,29,30,31,379,32,35,39,40,41,42,43,44,45,46,36,48,49,51,52,53,54,55,56,57,58,380,59],"tindex":"e0e56ee7-13bc-11e5-8597-a7f1f1e588ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-1},{"failures":[],"tindex":"e0e56ee8-13bc-11e5-8597-b1136fa279a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:694","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"e0e56ee9-13bc-11e5-8597-63df88c3a610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"variableMap":{"next":"next","data":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:252","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421],"tindex":"e0e56eea-13bc-11e5-8597-c13387c34225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[318,422,319,320,321,322,323,324,325,423,424,327,425,328,329,330,331,332,333,334,335,336,337,338,426,339,340,427],"tindex":"e0e56eeb-13bc-11e5-8597-e97712a79aea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e0e56eec-13bc-11e5-8597-7787b3a94bda","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"status":0},{"failures":[428,429,430,431,432,433,434,435,436,437,172,438,439,224,173,440,175,176,441,177,178,179,180,181],"tindex":"e0e56eed-13bc-11e5-8597-9744aed06658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"size","currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1},{"failures":[],"tindex":"e0e56eee-13bc-11e5-8597-09d9f87c9a79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:476","type":"CtWhileImpl","sourcecode":"while (int < (T[].int)) {\n    T[][int++] = null;\n}"},"status":-2},{"failures":[],"tindex":"e0e595ff-13bc-11e5-8597-ab416f6fe157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:122","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.remove((int - 1));\n}"},"variableMap":{"this":"list","n":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:142","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    ++(int);\n    return java.util.List<E>.get(((int) - 1));\n} "},"status":-2},{"failures":[90,75,92,93,94,95,76,77,78,79,80,98,81,82,83,84,85,105,106,108,109,110,114,87,88],"tindex":"e0e59600-13bc-11e5-8597-d9091095a5ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[442,443,444,445],"tindex":"e0e59601-13bc-11e5-8597-93226351e535","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[85,111,114,86,120],"tindex":"e0e59602-13bc-11e5-8597-4729960c0786","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:577","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"e0e59603-13bc-11e5-8597-818049d5c3ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"k","start":"k","end":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[85,111,114,446,447,448,449,450,451,452],"tindex":"e0e59604-13bc-11e5-8597-255b59c9bb63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"e0e59605-13bc-11e5-8597-6f1497186dcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} "},"status":-2},{"failures":[453,454,455,456,457,458,459,460,461,462,463,464,465,466],"tindex":"e0e59606-13bc-11e5-8597-cdacecb82507","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"maxElements","removeIndex":"index","currentIndex":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"status":-1},{"failures":[467,468,469,470,471,472,473,474],"tindex":"e0e59607-13bc-11e5-8597-2717f3ad20ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"largestKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-1},{"failures":[475,476],"tindex":"e0e59608-13bc-11e5-8597-d3bcf6b21de2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}