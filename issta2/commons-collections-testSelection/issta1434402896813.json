{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":723,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":913,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":243,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":1003,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":134,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":675,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":189,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":352,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":938,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":616,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":448,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":738,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":24,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":856,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":970,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":42,"org.apache.commons.collections4.CollectionUtilsTest.collect":780,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":415,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":296,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":973,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":978,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":636,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":213,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":417,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":484,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":552,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":658,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":152,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":875,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullKey":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":227,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":524,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":244,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":619,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":701,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":258,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":706,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":171,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":331,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":553,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":463,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":786,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":819,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":573,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":158,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":657,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":584,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":789,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":755,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":193,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":754,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":896,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":927,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":879,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":1013,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":81,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":413,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":214,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":570,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":776,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":492,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":71,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":487,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":420,"org.apache.commons.collections4.map.HashedMapTest.testInternalState":620,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":881,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":851,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":297,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":689,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":976,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":231,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":367,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":43,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":368,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":394,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":369,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":758,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":56,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":676,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":798,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":888,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":828,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":626,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":351,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":561,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":585,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":844,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":513,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":601,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":756,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":858,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":508,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":60,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":830,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":83,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":696,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":500,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":731,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":715,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":49,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":732,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":77,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":588,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":649,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":389,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":170,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":324,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":137,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":309,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":284,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":291,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":286,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":904,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":334,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":1011,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":614,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":869,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":788,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":459,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":855,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":329,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":330,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":328,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":268,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":304,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":465,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":838,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":817,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":718,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":261,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":167,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":781,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":796,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":396,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":511,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":517,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":787,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":252,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":345,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":479,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":937,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":520,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":586,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":597,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":666,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":280,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":613,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":190,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":527,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":831,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":247,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":449,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":872,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":654,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":532,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":469,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":939,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":91,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":953,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":225,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":926,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":699,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":734,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":775,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":825,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":122,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":234,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":450,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":496,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":695,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1001,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":912,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":630,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":542,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":746,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":434,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":447,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":377,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":802,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":80,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":12,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":929,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":707,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":422,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":431,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":882,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":902,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":807,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":323,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":996,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":282,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":634,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":924,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":710,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":783,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":335,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":443,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":655,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":62,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":458,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":599,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":405,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":894,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":300,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":35,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":549,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":181,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":550,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":401,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":452,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":565,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":656,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":256,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":429,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":760,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":177,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":305,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":667,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":735,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":384,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":416,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":763,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":151,"org.apache.commons.collections4.map.LinkedMapTest.testReset":168,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":848,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":293,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":212,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":321,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":439,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":727,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":230,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":295,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":686,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":694,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":837,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":652,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":921,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":629,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":784,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":740,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":390,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":931,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":975,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":9,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":812,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":533,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":998,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":790,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":125,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":522,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":1010,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":972,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":395,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":421,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":890,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":814,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":980,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":490,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":204,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":106,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveAll":375,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":891,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":862,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":400,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":356,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":531,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":908,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":466,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":628,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":322,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":468,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":952,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":1007,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":716,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":350,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":410,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":108,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":411,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":621,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":412,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":700,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":453,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":242,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":274,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":267,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":211,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":1004,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":85,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":850,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":644,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":579,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":646,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":946,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":994,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":762,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":964,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":959,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":90,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":648,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":880,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":199,"org.apache.commons.collections4.map.HashedMapTest.testMakeMap":346,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":333,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":494,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":226,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":378,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":797,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":800,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":262,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":960,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":943,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":596,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":209,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":901,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":932,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":59,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":603,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":518,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":381,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":971,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":668,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":820,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":427,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":771,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":407,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":253,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":408,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":958,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":278,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":409,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":799,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":220,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":925,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":301,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":476,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":583,"org.apache.commons.collections4.map.HashedMapTest.testKeySetClearChangesMap":362,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":923,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":470,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":967,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":471,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":259,"org.apache.commons.collections4.map.HashedMapTest.testMapPutNullValue":358,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":801,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":594,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":587,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":235,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":440,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":150,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":20,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":660,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":303,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":638,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":316,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":864,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":475,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":548,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":404,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":712,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":900,"org.apache.commons.collections4.TransformerUtilsTest.testPredicateTransformer":942,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":595,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":729,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":141,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":482,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":821,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":986,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":876,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":29,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":114,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":808,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":455,"org.apache.commons.collections4.MapUtilsTest.testPopulateMap":940,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":779,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":664,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":398,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":317,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":835,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":503,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":374,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":102,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":178,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":625,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":979,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":156,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":728,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":957,"org.apache.commons.collections4.map.LRUMapTest.testLRU":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":454,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":79,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":794,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":885,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":697,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":359,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":341,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":590,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":582,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":129,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":521,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":857,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":871,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":945,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":126,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":650,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":861,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":535,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":558,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":846,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":793,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":423,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":847,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":1015,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":724,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":349,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":488,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":569,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":669,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":928,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":606,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":622,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":306,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":829,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":55,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":870,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":96,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":547,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":265,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":283,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":659,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":852,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":534,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":260,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":320,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRetainAll":376,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":217,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":930,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":46,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":543,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":290,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":373,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":750,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":370,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":690,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":337,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":753,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":702,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":662,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":566,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":4,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":530,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":757,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":618,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":251,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":307,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":418,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":536,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":528,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":1002,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":182,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":186,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":188,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":962,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":966,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":393,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":445,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":653,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":456,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":477,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":805,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":893,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":575,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":403,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":842,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":215,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":391,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":460,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":897,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":859,"org.apache.commons.collections4.CollectionUtilsTest.transform2":778,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":916,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":505,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":955,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":406,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":515,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":867,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":849,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":995,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":294,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":504,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":915,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":963,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":598,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":318,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":355,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":88,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":576,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":457,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":633,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":873,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":607,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":841,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":332,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":302,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":75,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":155,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":185,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":602,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":682,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":692,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":311,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":631,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":824,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":665,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":884,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":748,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":990,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":714,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":693,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":347,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":868,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":480,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":742,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":287,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":919,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":647,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":187,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":677,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":886,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":495,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":289,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":288,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":133,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":119,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":380,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":195,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":670,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":526,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":741,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":430,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":839,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":765,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":33,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":708,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":720,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":961,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":713,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":815,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":997,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":514,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":1017,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":228,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":920,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":519,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":441,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":52,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":229,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":478,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":266,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":47,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":425,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":574,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":651,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":593,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":671,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":984,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":854,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":326,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":325,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":491,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":327,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":473,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":497,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":759,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":250,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":743,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":795,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":248,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":537,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":360,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":279,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":499,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":791,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":956,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":263,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":774,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":438,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":173,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":725,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":764,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":935,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":934,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":722,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":809,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":206,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":92,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":196,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":392,"org.apache.commons.collections4.ListUtilsTest.testSubtract":705,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":255,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":572,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":529,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":845,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":371,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":822,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":977,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":951,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":680,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":832,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":969,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":264,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":918,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":678,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":679,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":709,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":883,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":895,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":691,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":803,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":887,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":813,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":905,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":739,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":1019,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":609,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":773,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":237,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":354,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":672,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":726,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":772,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":559,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":965,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":538,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":674,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":949,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":889,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":632,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":551,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":436,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":610,"org.apache.commons.collections4.CollectionUtilsTest.filter":76,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":608,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":314,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":564,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":944,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":1014,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":205,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":592,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":749,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":643,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":397,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":541,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":578,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":717,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":464,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":818,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":615,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":353,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":399,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":472,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionSize":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":276,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":1009,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":385,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":878,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":6,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":121,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":462,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":555,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":865,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":343,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":428,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":950,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":1006,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":202,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":131,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":194,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":201,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":200,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":581,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":752,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":1008,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":254,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":192,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":387,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":336,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":557,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":292,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":419,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":989,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":117,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":446,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":451,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":485,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":703,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":379,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":414,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":540,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":721,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":639,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":751,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":147,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":148,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":149,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":687,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":981,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":298,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":272,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":640,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":1020,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":510,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":216,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":120,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":383,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":402,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":843,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":556,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":766,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":340,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":580,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":604,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":442,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":502,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":275,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":898,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":826,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":224,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":906,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":874,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":730,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":361,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":563,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":637,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":745,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":483,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":86,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":816,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":827,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":688,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":1012,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":308,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":910,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":999,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":486,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":804,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":571,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":132,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":863,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":673,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":516,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":506,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":617,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":909,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":239,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":433,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":103,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":792,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":982,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":87,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":474,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":892,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":123,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":372,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":546,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":866,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":10,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":833,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":954,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":936,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":983,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":948,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":777,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":988,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":501,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":489,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":645,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":747,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":509,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":269,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":74,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":348,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":70,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":836,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":907,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":719,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":991,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":947,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":627,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":623,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":624,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":382,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":277,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":30,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":914,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":525,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":577,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":770,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":761,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":768,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":338,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":435,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":683,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":685,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":684,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":811,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":539,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":840,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":8,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":782,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":154,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":319,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":567,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":661,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":769,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":806,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":481,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":853,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":1005,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":51,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":313,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":312,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":933,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":899,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":507,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":386,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":498,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":257,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":993,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":987,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":600,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":146,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":493,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":144,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":363,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":785,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":635,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":704,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":554,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":903,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":985,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":663,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":139,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":922,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsSelfHashCode":93,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":810,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":270,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":1018,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":432,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":64,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":65,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":66,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":364,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":365,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":1000,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":911,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":545,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":437,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":562,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":992,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":767,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":834,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":271,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":523,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":82,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":560,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":744,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":733,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":136,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":138,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":568,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":589,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":611,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":968,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":163,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":681,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":641,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":57,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":642,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":14,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":612,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":1016,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":974,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":444,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":512,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":737,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":223,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":941,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":591,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":736,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":860,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":698,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":711,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":366,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":233,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":605,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":113,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":877,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":164,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":823,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":388,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":424,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":467,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":917,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":544},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"93bbe62a-13a3-11e5-a271-5d685f221b96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.trie.KeyAnalyzer.int;\n} "},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"endIndex2","allNull":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16],"tindex":"93bcd08b-13a3-11e5-a271-6314ffd3c4b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"93bcd08c-13a3-11e5-a271-45f35cea2c29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"status":-2},{"failures":[17,18,19,20,21,22,23],"tindex":"93bcf79d-13a3-11e5-a271-1f6b20138339","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"size","expectedModCount":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"93bcf79e-13a3-11e5-a271-ffa993e7f98b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:660","type":"CtWhileImpl","sourcecode":"while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        break;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"93bcf79f-13a3-11e5-a271-8388dfba0277","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:258","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"93bcf7a0-13a3-11e5-a271-6735afe20eb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"total","index":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"93bcf7a1-13a3-11e5-a271-659c43224c17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl","sourcecode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"93bd1eb2-13a3-11e5-a271-d5a46d6d7661","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"93bd1eb3-13a3-11e5-a271-bb2d44537ab9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"93bd1eb4-13a3-11e5-a271-f90e41663eb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[76,77],"tindex":"93bd1eb5-13a3-11e5-a271-c15128e60961","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1},{"failures":[78,79],"tindex":"93bd1eb6-13a3-11e5-a271-ab3ebac6eba1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}"},"status":-1},{"failures":[],"tindex":"93bd1eb7-13a3-11e5-a271-853e5bf93f41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[80],"tindex":"93bd45c8-13a3-11e5-a271-fb6e82daf204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:52","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super T, ? extends T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer();\n} "},"status":-1},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"93bd45c9-13a3-11e5-a271-f71c77bfdecd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"93bd45ca-13a3-11e5-a271-07e41ce914bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:958","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n}"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:659","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) || (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    while (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            break;\n        } \n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} "},"status":-2},{"failures":[95,96,97,98,99],"tindex":"93bd45cb-13a3-11e5-a271-07bbc56b8cb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"93bd45cc-13a3-11e5-a271-bdbfed524866","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1056","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}"},"variableMap":{"root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":0},{"failures":[],"tindex":"93bd6cdd-13a3-11e5-a271-bf1d00d8ca14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:158","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-2},{"failures":[100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,17,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,18,132,133,134,135,136,137,81,82,83,84,85,86,87,88,89,138,90,139,140,91,92,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,20,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,21,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,22,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,23,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425],"tindex":"93bd6cde-13a3-11e5-a271-b745f2ff1e29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"this","newSize":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[426,427,428,429,430,431,40,41,43,44,45,46,47,48,49,50,51,432,433,434,435,436,437,54,55,56,57,58,59,60,61],"tindex":"93bf68af-13a3-11e5-a271-f742ca7f3850","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538],"tindex":"93bf68b0-13a3-11e5-a271-5df1d100c7e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:111","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger != null) {\n    return org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n} "},"status":-1},{"failures":[],"tindex":"93bf68b1-13a3-11e5-a271-67f779681c1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-2},{"failures":[81,82,84,85,86,89,90,91,92,539,540,541,542,543,544,545,546,547,180,181,183,184,185,188,189,192,193,228,229,231,232,233,236,237,240,241,267,268,270,271,272,275,276,279,280,307,308,310,311,312,315,317,320,321,347,348,350,351,352,355,356,359,360,389,390,392,393,394,397,399,402,403],"tindex":"93bf8fc2-13a3-11e5-a271-03afbfe3b040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604],"tindex":"93bf8fc3-13a3-11e5-a271-c530088d772d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"bound","lengthInBits":"bound","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} "},"status":-1},{"failures":[605,606,607,608,609,610],"tindex":"93bf8fc4-13a3-11e5-a271-61a50030a56b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1008","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n    java.io.PrintStream.print(\"(this Map)\");\n} else {\n    java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n}"},"status":-1},{"failures":[611,612,613,614,615,616],"tindex":"93bf8fc5-13a3-11e5-a271-9d4e0189cbb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"93bfb6d6-13a3-11e5-a271-c3291afd5a26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[617,618],"tindex":"93bfb6d7-13a3-11e5-a271-4fc0d6b0dd31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:128","type":"CtForEachImpl","sourcecode":"for (final C C : java.util.Collection<? extends C>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C);\n}"},"status":-1},{"failures":[],"tindex":"93bfb6d8-13a3-11e5-a271-33ca31fb5f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"93bfb6d9-13a3-11e5-a271-f78d27ac9310","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"93bfb6da-13a3-11e5-a271-ebdb862447bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[619,620],"tindex":"93bfddeb-13a3-11e5-a271-77b8a2a5ee3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"variableMap":{"index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"status":-1},{"failures":[621],"tindex":"93bfddec-13a3-11e5-a271-412b24e99992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[445,448,449,450,452,460,464,465,466,467,468,476,480,481,482,484,485,493,497,498,506,509,510,518,521,522,523,531,534,535,536,537],"tindex":"93bfdded-13a3-11e5-a271-0fa8bcc70fd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"93bfddee-13a3-11e5-a271-6f7356b51021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[],"tindex":"93bfddef-13a3-11e5-a271-b12c1d891ec7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1766","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"93c00500-13a3-11e5-a271-396e1bc0801c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[612,611,613,615,616],"tindex":"93c00501-13a3-11e5-a271-a9800a1a8784","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[622,623,624,625,626,627,628,629,630,631,632],"tindex":"93c00502-13a3-11e5-a271-61635d93a01c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"93c02c13-13a3-11e5-a271-43b9bdaea548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-2},{"failures":[633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704],"tindex":"93c02c14-13a3-11e5-a271-ddbfe12df34f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[48,61],"tindex":"93c02c15-13a3-11e5-a271-f3bc431c4737","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} "},"status":-1},{"failures":[436,437,54,55,56,57,58,59,61],"tindex":"93c02c16-13a3-11e5-a271-d95be77d0141","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-1},{"failures":[],"tindex":"93c02c17-13a3-11e5-a271-198f090f1ea1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:232","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"93c02c18-13a3-11e5-a271-dde91351f7a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[705,706,439,440,442,443,707,447,451,708,454,455,457,458,709,462,463,470,471,473,474,710,478,479,483,711,487,488,490,491,712,495,496,500,501,503,504,713,508,512,513,515,516,714,520,525,526,528,529,715,533,716,717,718,719],"tindex":"93c05329-13a3-11e5-a271-010e7dddea68","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:325","type":"CtIfImpl","sourcecode":"if (int < (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)) {\n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int;\n    int -= int;\n} else {\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object);\n    int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int;\n}"},"status":-1},{"failures":[],"tindex":"93c0532a-13a3-11e5-a271-f55039f2efcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"status":0},{"failures":[720,721,722],"tindex":"93c0532b-13a3-11e5-a271-8b6715fb9334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[723,724,40,41,43,44,45,48,49,50,51,725,726,54,55,56,57,58,61],"tindex":"93c0532c-13a3-11e5-a271-fd38c85c10e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2138","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n    java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n} "},"variableMap":{"inverseEntrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-1},{"failures":[],"tindex":"93c0532d-13a3-11e5-a271-931b960e3062","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"93c0532e-13a3-11e5-a271-abfbcb9a11d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[85,90,153],"tindex":"93c1d9cf-13a3-11e5-a271-3da58c8eabaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:245","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsValue(java.lang.Object);\n} "},"status":-1},{"failures":[542,545,727,184,189,206],"tindex":"93c1d9d0-13a3-11e5-a271-c5f48f54e2d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"93c1d9d1-13a3-11e5-a271-8956e0989a18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"value","k":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"93c200e2-13a3-11e5-a271-810d94a8e3f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"93c200e3-13a3-11e5-a271-57c7d5db8513","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:100","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"93c200e4-13a3-11e5-a271-ef141917693d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)"},"variableMap":{"fromIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))"},"status":-2},{"failures":[728,729,730,731,732,733,734,735,736],"tindex":"93c200e5-13a3-11e5-a271-85fbfe2134e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-1},{"failures":[737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754],"tindex":"93c200e6-13a3-11e5-a271-1998db85c735","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"status":-1},{"failures":[],"tindex":"93c200e7-13a3-11e5-a271-595326f62f88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","y":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"93c227f8-13a3-11e5-a271-8d8f949ab5e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtIfImpl","sourcecode":"if (int < 4) {\n    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n        org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    }\n} else {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>);\n}"},"status":-2},{"failures":[81,82,84,85,86,88,89,90,91,92],"tindex":"93c227f9-13a3-11e5-a271-e1d2f7786762","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1191","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"93c4e71a-13a3-11e5-a271-8b8700c3936f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"status":-2},{"failures":[755,756],"tindex":"93c4e71b-13a3-11e5-a271-cd56c7520baf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:458","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1354","type":"CtAssignmentImpl","sourcecode":"int = java.lang.reflect.Array.getLength(java.lang.Object)"},"status":-1},{"failures":[757,758,759,760,761,762,763],"tindex":"93c4e71c-13a3-11e5-a271-d1d0c02db78d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[764,426,40,41,43,44,45,47,48,49,50,51,432,765,766,767,433,54,55,56,57,58,60,61],"tindex":"93c4e71d-13a3-11e5-a271-7b8679f47ba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"93c4e71e-13a3-11e5-a271-b1fd8404adaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"93c4e71f-13a3-11e5-a271-55d8f7fd70d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:96","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"93c55c50-13a3-11e5-a271-fdf6afff6530","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1285","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"93c55c51-13a3-11e5-a271-b50f968aa6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"variableMap":{"comparatorIndex":"i","orderingBits":"value","retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:145","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        return int;\n    } \n    int--;\n}"},"status":-2},{"failures":[768,769,770,771,772,773,774,775,776,777,622],"tindex":"93c55c52-13a3-11e5-a271-6f1332624131","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:406","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"93c55c53-13a3-11e5-a271-d9e62ede3bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[440,443,455,458,462,463,471,474,478,479,488,491,495,496,501,504,513,516,526,529],"tindex":"93c55c54-13a3-11e5-a271-75dbcd7e34f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[],"tindex":"93c55c55-13a3-11e5-a271-713d0f414a84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":-2},{"failures":[451,462,478,495],"tindex":"93c55c56-13a3-11e5-a271-5b7ffc941415","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"93c58367-13a3-11e5-a271-b386a657c9b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:86","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 1000 ; int++) {\n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n        break;\n    } \n    if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n    } else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n        java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n    } \n}"},"status":0},{"failures":[],"tindex":"93c58368-13a3-11e5-a271-5b9c439a3a3b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":0},{"failures":[778,779,780],"tindex":"93c58369-13a3-11e5-a271-c575ae9784da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":-1},{"failures":[100,102,107,108,111,113,17,115,116,117,119,124,125,128,130,18,132,133,781,782,81,82,84,85,86,89,90,91,92,149,163,164,165,166,539,540,541,542,543,544,545,546,547,783,180,181,183,184,185,188,189,192,193,202,784,228,229,231,232,233,236,237,240,241,250,785,786,267,268,270,271,272,275,276,279,280,289,347,348,350,351,352,355,356,359,360,369,389,390,392,393,394,397,399,402,403],"tindex":"93c5836a-13a3-11e5-a271-b1973e5e05ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"93c5836b-13a3-11e5-a271-85a7885d4758","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":0},{"failures":[787,788,789,790,791,792,793],"tindex":"93c5836c-13a3-11e5-a271-abdf747550a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:288","type":"CtInvocationImpl","sourcecode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.clear()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-1},{"failures":[],"tindex":"93c5836d-13a3-11e5-a271-253d5e344eed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"status":0},{"failures":[442,443,444,794,795,445,446,796,440,797,798,799,800,801,802,803,804,707,447,805,806,448,449,807,808,450,809,810,451,811,812,813,814,815,816,708,452,817,457,458,459,818,819,460,461,820,455,821,822,823,824,825,826,827,828,709,462,463,829,464,465,830,831,832,833,834,835,836,466,467,837,468,473,474,475,838,839,476,477,840,471,841,842,843,844,845,846,847,848,710,478,479,849,480,481,850,851,482,852,853,483,854,855,856,857,858,859,711,484,860,485,861,490,491,492,862,863,493,494,864,488,865,866,867,868,869,870,871,872,712,495,496,873,497,498,503,504,505,874,875,506,507,876,501,877,878,879,880,881,882,883,884,713,508,885,886,509,510,887,515,516,517,888,889,518,519,890,513,891,892,893,894,895,896,897,898,714,520,899,900,521,522,523,901,528,529,530,902,903,531,532,904,526,905,906,907,908,909,910,911,912,715,533,913,914,534,535,915,916,917,918,919,920,921,536,537,922],"tindex":"93c5aa7e-13a3-11e5-a271-e7d74dcde2db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[136,81,82,84,85,86,89,90,91,92,141,150,151,152,153,162,923,924,925,539,540,926,541,542,543,927,544,545,546,547,928,929,930,931,727,932,178,180,181,182,183,184,185,186,188,189,192,193,194,203,204,205,206,215,226,228,229,230,231,232,233,234,236,237,240,241,242,251,252,253,254,265,267,268,269,270,271,272,273,275,276,279,280,281,290,291,292,293,345,347,348,349,350,351,352,353,355,356,359,360,361,370,371,372,373,389,390,391,392,393,394,395,397,399,402,403],"tindex":"93c5aa7f-13a3-11e5-a271-83c7216a793a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"93c5aa80-13a3-11e5-a271-3f7b17d7c66c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"variableMap":{"start1":"end1","end2":"i","end1":"end2","i":"i","j":"start2","start2":"start2","script":"script","sequence1":"sequence1","sequence2":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:264","type":"CtIfImpl","sourcecode":"if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n    ++int;\n} else {\n    if ((int - int) > (int - int)) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    } else {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n        ++int;\n    }\n}"},"status":-2},{"failures":[933,49,51,934,935,936,432,937,938,726,765,766,939],"tindex":"93c5aa81-13a3-11e5-a271-63b249191372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"deletedNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-1},{"failures":[],"tindex":"93c5d192-13a3-11e5-a271-c19e5fb6e3cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-2},{"failures":[],"tindex":"93c5d193-13a3-11e5-a271-099e149ef5d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"length","newCapacity":"length","proposedCapacity":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:75","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\");\n} "},"status":-2},{"failures":[],"tindex":"93c5d194-13a3-11e5-a271-d9ff093e05ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[940],"tindex":"93c5d195-13a3-11e5-a271-d3b8f744b1a3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1702","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    java.util.Map<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E));\n}"},"status":-1},{"failures":[446,449,450,461,465,467,477,481,482,494,498,507,510,519,522,532,535,537],"tindex":"93c5d196-13a3-11e5-a271-7301d5fa9225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[33,941],"tindex":"93c5d197-13a3-11e5-a271-c7acffcbda33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1},{"failures":[],"tindex":"93c5d198-13a3-11e5-a271-bf358d40a58e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-2},{"failures":[942],"tindex":"93c5d199-13a3-11e5-a271-b716eb46d0eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PredicateTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"93c5f8aa-13a3-11e5-a271-2927c1d8ac6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"93c5f8ab-13a3-11e5-a271-85169b77ccf7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"inputIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1066","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends I>.hasNext()) {\n    final I I = java.util.Iterator<? extends I>.next();\n    final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n    R.add(O);\n}"},"status":0},{"failures":[943,944,945,946,947,737,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,746,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020],"tindex":"93c5f8ac-13a3-11e5-a271-054ec4d71522","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":99,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}